[
    {
        "input": "Query: what is the name of justin bieber brother?\nEntities:Justin Bieber with QID Q34086;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34086 wdt:sibling ?x. ?x wdt:sex_or_gender wd:male. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-0",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34086 wdt:P3373 ?x. ?x wdt:P21 wd:Q6581097. }"
    },
    {
        "input": "Query: what character did natalie portman play in star wars?\nEntities:Natalie Portman with QID Q37876;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:media_franchise wd:star_wars; p:cast_member ?y. ?y ps:cast_member wd:Q37876; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P8345 wd:Q462; p:P161 ?y. ?y ps:P161 wd:Q37876; pq:P453 ?x. }"
    },
    {
        "input": "Query: what country is the grand bahama island in?\nEntities:Grand Bahama with QID Q866345;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q866345 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q866345 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what kind of money to take to bahamas?\nEntities:The Bahamas with QID Q778;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q778 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-4",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q778 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what character did john noble play in lord of the rings?\nEntities:The Lord of the Rings: The Two Towers with QID Q164963; John Noble with QID Q312399;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q164963 p:cast_member ?p. ?p ps:cast_member wd:Q312399; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-5",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q164963 p:P161 ?p. ?p ps:P161 wd:Q312399; pq:P453 ?x. }"
    },
    {
        "input": "Query: who does joakim noah play for?\nEntities:Joakim Noah with QID Q311735;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q311735 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-6",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q311735 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where are the nfl redskins from?\nEntities:Washington Commanders with QID Q212654;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q212654 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-7",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q212654 wdt:P159 ?x. }"
    },
    {
        "input": "Query: where did saki live?\nEntities:Saki with QID Q311526;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q311526 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-8",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q311526 wdt:P19 ?x. }"
    },
    {
        "input": "Query: how old is sacha baron cohen?\nEntities:Sacha Baron Cohen with QID Q29055;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29055 wdt:date_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-9",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29055 wdt:P569 ?x. }"
    },
    {
        "input": "Query: what time zone am i in cleveland ohio?\nEntities:Cleveland with QID Q37320;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37320 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-11",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37320 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who did draco malloy end up marrying?\nEntities:Draco Malfoy with QID Q179641;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q179641 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-12",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q179641 wdt:P26 ?x. }"
    },
    {
        "input": "Query: which countries border the us?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-13",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P47 ?x. }"
    },
    {
        "input": "Query: where is rome italy located on a map?\nEntities:Rome with QID Q220;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q220 wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-14",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q220 wdt:P625 ?x. }"
    },
    {
        "input": "Query: what is nina dobrev nationality?\nEntities:Nina Dobrev with QID Q183439;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q183439 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-15",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q183439 wdt:P27 ?x. }"
    },
    {
        "input": "Query: which kennedy died first?\nEntities:John F. Kennedy with QID Q9696;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:family wd:kennedy; wdt:date_of_death ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-17",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P53 wd:Q34821; wdt:P570 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: what books did beverly cleary right?\nEntities:Beverly Cleary with QID Q1316719;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:written_work; wdt:author wd:Q1316719. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-18",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q47461344; wdt:P50 wd:Q1316719. }"
    },
    {
        "input": "Query: who is the prime minister of ethiopia?\nEntities:prime minister with QID Q14212; Ethiopia with QID Q115;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q115 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-21",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q115 wdt:P6 ?x. }"
    },
    {
        "input": "Query: what high school did president bill clinton attend?\nEntities:Bill Clinton with QID Q1124;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1124 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-23",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1124 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: what form of government does russia have today?\nEntities:Russia with QID Q159;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-24",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what movies does taylor lautner play in?\nEntities:Taylor Lautner with QID Q23359;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q23359; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-25",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q23359; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what year lebron james came to the nba?\nEntities:LeBron James with QID Q36159; National Basketball Association with QID Q155223;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36159 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?y. ?y wdt:league wd:Q155223. ?p pq:start_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-26",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36159 p:P54 ?p. ?p ps:P54 ?y. ?y wdt:P118 wd:Q155223. ?p pq:P580 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: which wife did king henry behead?\nEntities:Henry VIII of England with QID Q38370;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38370 wdt:spouse ?x. ?x wdt:cause_of_death wd:decapitation. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-30",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38370 wdt:P26 ?x. ?x wdt:P509 wd:Q204933. }"
    },
    {
        "input": "Query: who was ishmael's mom?\nEntities:Ishmael with QID Q183403;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q183403 wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-31",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q183403 wdt:P25 ?x. }"
    },
    {
        "input": "Query: where are the netherlands on a world map?\nEntities:Netherlands with QID Q55;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q55 wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-33",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q55 wdt:P625 ?x. }"
    },
    {
        "input": "Query: what is the president of brazil?\nEntities:Brazil with QID Q155; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-34",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P6 ?x. }"
    },
    {
        "input": "Query: what are the major cities in france?\nEntities:France with QID Q142;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:million_city; wdt:country wd:Q142. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-35",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q1637706; wdt:P17 wd:Q142. }"
    },
    {
        "input": "Query: what city did esther live in?\nEntities:Esther with QID Q732413;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q732413 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-36",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q732413 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what sport do the toronto maple leafs play?\nEntities:Toronto Maple Leafs with QID Q203384;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q203384 wdt:sport ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-37",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q203384 wdt:P641 ?x. }"
    },
    {
        "input": "Query: what is cher's son's name?\nEntities:Cher with QID Q12003;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q12003 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-40",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q12003 wdt:P40 ?x. }"
    },
    {
        "input": "Query: what party was andrew jackson?\nEntities:Andrew Jackson with QID Q11817;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11817 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-42",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11817 wdt:P102 ?x. }"
    },
    {
        "input": "Query: what is the name of the first harry potter novel?\nEntities:Harry Potter with QID Q8337;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:part_of_the_series wd:Q8337; wdt:publication_date ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-45",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P179 wd:Q8337; wdt:P577 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: what did william shakespeare do for a living?\nEntities:William Shakespeare with QID Q692;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q692 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-46",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q692 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what county is heathrow airport in?\nEntities:Heathrow Airport with QID Q8691;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8691 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-47",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8691 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what movie is josh hutcherson in?\nEntities:Josh Hutcherson with QID Q217004;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q217004; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-49",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q217004; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where do the san francisco giants play home games?\nEntities:San Francisco Giants with QID Q308966;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q308966 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-52",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q308966 wdt:P115 ?x. }"
    },
    {
        "input": "Query: what year did william jennings bryan run for president?\nEntities:William Jennings Bryan with QID Q205282; United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q205282 wdt:candidacy_in_election ?y. ?y wdt:instance_of/wdt:subclass_of* wd:united_states_presidential_election; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-53",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q205282 wdt:P3602 ?y. ?y wdt:P31/wdt:P279* wd:Q47566; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what was the name of frederick douglass book?\nEntities:Frederick Douglass with QID Q215562;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:literary_work; wdt:author wd:Q215562. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-54",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q7725634; wdt:P50 wd:Q215562. }"
    },
    {
        "input": "Query: who was queen victoria's parents called?\nEntities:Victoria with QID Q9439;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9439 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-55",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9439 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: what movies did sally field win an oscar for?\nEntities:Sally Field with QID Q187033; Academy Awards with QID Q19020;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q187033 p:award_received ?p. ?p ps:award_received ?y. ?y wdt:instance_of/wdt:subclass_of* wd:academy_awards. ?p pq:for_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-56",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q187033 p:P166 ?p. ?p ps:P166 ?y. ?y wdt:P31/wdt:P279* wd:Q19020. ?p pq:P1686 ?x. }"
    },
    {
        "input": "Query: what is the first book sherlock holmes appeared in?\nEntities:Sherlock Holmes with QID Q4653;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:characters wd:Q4653; wdt:publication_date ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-57",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P674 wd:Q4653; wdt:P577 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: what countries do people speak portuguese?\nEntities:Portuguese with QID Q5146;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q5146; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-60",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q5146; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: what are the names of walt disney kids?\nEntities:Walt Disney with QID Q8704;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8704 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-62",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8704 wdt:P40 ?x. }"
    },
    {
        "input": "Query: who is in the band bush?\nEntities:Bush with QID Q247949; George W. Bush with QID Q207;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q247949 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-63",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q247949 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what was tupac name in juice?\nEntities:Tupac Shakur with QID Q6107; O. J. Simpson with QID Q44473; Juice with QID Q642419;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q642419 p:cast_member ?p. ?p ps:cast_member wd:Q6107; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-64",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q642419 p:P161 ?p. ?p ps:P161 wd:Q6107; pq:P453 ?x. }"
    },
    {
        "input": "Query: what timezone is australia gmt?\nEntities:Australia with QID Q408;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-65",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who does maggie grace play in taken?\nEntities:Maggie Grace with QID Q218542; Taken with QID Q1057015;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1057015 p:cast_member ?p. ?p ps:cast_member wd:Q218542; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-66",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1057015 p:P161 ?p. ?p ps:P161 wd:Q218542; pq:P453 ?x. }"
    },
    {
        "input": "Query: what style of music did louis armstrong play?\nEntities:Louis Armstrong with QID Q1779;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1779 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-67",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1779 wdt:P136 ?x. }"
    },
    {
        "input": "Query: what tv show did joey lawrence play on?\nEntities:Joey Lawrence with QID Q550395;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q550395; wdt:instance_of/wdt:subclass_of* wd:television_series. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-69",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q550395; wdt:P31/wdt:P279* wd:Q5398426. }"
    },
    {
        "input": "Query: what timezone is denver co?\nEntities:Denver with QID Q16554;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16554 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-70",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16554 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what character did brian austin green play on 90210?\nEntities:Brian Austin Green with QID Q313311; Beverly Hills with QID Q127856; Beverly Hills, 90210 with QID Q117590;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q117590 p:cast_member ?p. ?p ps:cast_member wd:Q313311; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-71",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q117590 p:P161 ?p. ?p ps:P161 wd:Q313311; pq:P453 ?x. }"
    },
    {
        "input": "Query: where does jackie french live?\nEntities:Jackie French with QID Q542933;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q542933 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-72",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q542933 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what form of government was practiced in sparta?\nEntities:Sparta with QID Q5690;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5690 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-73",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5690 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what college did matt lauer attend?\nEntities:Matt Lauer with QID Q1100609;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1100609 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-76",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1100609 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what school did joan miro attend?\nEntities:Joan Mir\u00f3 with QID Q152384;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q152384 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-78",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q152384 wdt:P69 ?x. }"
    },
    {
        "input": "Query: who was vincent van gogh inspired by?\nEntities:Vincent van Gogh with QID Q5582;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5582 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-80",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5582 wdt:P737 ?x. }"
    },
    {
        "input": "Query: where is jack daniels factory?\nEntities:Jack Daniel's with QID Q371068;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:distillery; wdt:operator wd:Q371068; wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-86",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q1251750; wdt:P137 wd:Q371068; wdt:P131 ?x. }"
    },
    {
        "input": "Query: what language do the speak in pakistan?\nEntities:Pakistan with QID Q843;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q843 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-87",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q843 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where is santa clara university?\nEntities:Santa Clara University with QID Q992830;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q992830 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-88",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q992830 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where did timothy mcveigh go to prison?\nEntities:Timothy McVeigh with QID Q220850;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q220850 wdt:place_of_detention ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-90",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q220850 wdt:P2632 ?x. }"
    },
    {
        "input": "Query: what sea does the yangtze river flow into?\nEntities:Yangtze with QID Q5413;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5413 wdt:mouth_of_the_watercourse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-91",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5413 wdt:P403 ?x. }"
    },
    {
        "input": "Query: who miley cyrus engaged to?\nEntities:Miley Cyrus with QID Q4235;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4235 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-92",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4235 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what kind of money should i take to jamaica?\nEntities:Jamaica with QID Q766;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-95",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who is robert downey jr wife?\nEntities:Robert Downey Jr. with QID Q165219;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q165219 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-96",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q165219 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where do the ny rangers play?\nEntities:New York Rangers with QID Q188984;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q188984 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-97",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q188984 wdt:P115 ?x. }"
    },
    {
        "input": "Query: where is jefferson davis buried?\nEntities:Jefferson Davis with QID Q162269;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q162269 wdt:place_of_burial ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-98",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q162269 wdt:P119 ?x. }"
    },
    {
        "input": "Query: what awards has louis sachar won?\nEntities:Louis Sachar with QID Q553137;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q553137 wdt:award_received ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-102",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q553137 wdt:P166 ?x. }"
    },
    {
        "input": "Query: who are the current senators from missouri?\nEntities:United States of America with QID Q30; Missouri with QID Q1581;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:current_senators. ?p pq:electoral_district ?y. ?y wdt:located_in_the_administrative_territorial_entity wd:Q1581. FILTER NOT EXISTS { ?p pq:end_time ?z. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-103",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4416090. ?p pq:P768 ?y. ?y wdt:P131 wd:Q1581. FILTER NOT EXISTS { ?p pq:P582 ?z. } }"
    },
    {
        "input": "Query: who was the president after jfk died?\nEntities:President of the United States with QID Q11696; John F. Kennedy with QID Q9696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9696 p:position_held ?p. ?p ps:position_held wd:Q11696; pq:replaced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-104",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9696 p:P39 ?p. ?p ps:P39 wd:Q11696; pq:P1366 ?x. }"
    },
    {
        "input": "Query: what is the best currency to take to egypt 2013?\nEntities:Egypt with QID Q79;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-105",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where did benjamin franklin died?\nEntities:Benjamin Franklin with QID Q34969;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34969 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-108",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34969 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what is the local language of israel?\nEntities:Israel with QID Q801;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-111",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what city and state was the air force academy established?\nEntities:United States Air Force Academy with QID Q1331280;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1331280 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-112",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1331280 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what religion are people in russia?\nEntities:Russia with QID Q159;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:official_religion ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-114",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:P3075 ?x. }"
    },
    {
        "input": "Query: what did shawnee smith play in?\nEntities:Shawnee Smith with QID Q233313;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q233313; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-115",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q233313; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what countries did queen victoria reign over?\nEntities:Victoria with QID Q9439;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9439 wdt:position_held ?y. ?y wdt:applies_to_jurisdiction ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-116",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9439 wdt:P39 ?y. ?y wdt:P1001 ?x. }"
    },
    {
        "input": "Query: where did dr seuss go to school?\nEntities:Dr. Seuss with QID Q298685;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q298685 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-117",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q298685 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what team does luis suarez play for?\nEntities:Luis Su\u00e1rez with QID Q26517;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q26517 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-118",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q26517 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what are dollars called in spain?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-119",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who plays meg in family guy?\nEntities:Family Guy with QID Q5930; Meg Griffin with QID Q908772;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q908772. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-120",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q908772. }"
    },
    {
        "input": "Query: what high school did tim allen go to?\nEntities:Tim Allen with QID Q208408;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q208408 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-121",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q208408 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: what is the world's tallest building in dubai called?\nEntities:Emirate of Dubai with QID Q613;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:building; wdt:height ?y; wdt:located_in_the_administrative_territorial_entity wd:Q613. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-122",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q41176; wdt:P2048 ?y; wdt:P131 wd:Q613. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: what movie did angelina jolie direct?\nEntities:Angelina Jolie with QID Q13909;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:director wd:Q13909. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-124",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P57 wd:Q13909. }"
    },
    {
        "input": "Query: where did martin luther king got shot?\nEntities:Martin Luther King Jr. with QID Q8027;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8027 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-125",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8027 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what year did tut became king?\nEntities:pharaoh with QID Q37110; Tutankhamon with QID Q12154;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q12154 p:position_held ?p. ?p ps:position_held wd:Q37110; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-128",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q12154 p:P39 ?p. ?p ps:P39 wd:Q37110; pq:P580 ?x. }"
    },
    {
        "input": "Query: who is the current president of the dominican republic?\nEntities:Dominican Republic with QID Q786; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-129",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P6 ?x. }"
    },
    {
        "input": "Query: who has been married to julia roberts?\nEntities:Julia Roberts with QID Q40523;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q40523 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-130",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q40523 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where do baltimore ravens play?\nEntities:Baltimore Ravens with QID Q276539;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q276539 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-131",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q276539 wdt:P115 ?x. }"
    },
    {
        "input": "Query: who does brandon dubinsky play for?\nEntities:Brandon Dubinsky with QID Q898139;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q898139 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-133",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q898139 wdt:P54 ?x. }"
    },
    {
        "input": "Query: who all has dated taylor swift?\nEntities:Taylor Swift with QID Q26876;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q26876 wdt:unmarried_partner ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-134",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q26876 wdt:P451 ?x. }"
    },
    {
        "input": "Query: what is the dominant language in israel?\nEntities:Israel with QID Q801;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-135",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what are the main languages of nigeria?\nEntities:Nigeria with QID Q1033;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-136",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what jobs did ben franklin do?\nEntities:Benjamin Franklin with QID Q34969;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34969 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-137",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34969 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who plays lola bunny in the looney tunes show?\nEntities:",
        "output": "SELECT DISTINCT ?x WHERE { wd:looney_tunes_show p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:lola_bunny. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-139",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16518263 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q1575844. }"
    },
    {
        "input": "Query: who did rufus wainwright married?\nEntities:Rufus Wainwright with QID Q192402;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q192402 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-141",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q192402 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where did c.s. lewis go to college?\nEntities:C. S. Lewis with QID Q9204;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9204 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-142",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9204 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: who is the president of the european union 2011?\nEntities:President of the European Parliament with QID Q740126;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:Q740126; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-144",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q740126; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what school did cassie bernall go to?\nEntities:Cassie Bernall with QID Q76085;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76085 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-145",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76085 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what movie did james frey write?\nEntities:James Frey with QID Q1349297;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:screenwriter wd:Q1349297. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-146",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P58 wd:Q1349297. }"
    },
    {
        "input": "Query: what did st. matthew do?\nEntities:Matthew the Apostle with QID Q43600;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43600 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-148",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43600 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what was nelson mandela's religion?\nEntities:Nelson Mandela with QID Q8023;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8023 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-150",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8023 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what is henry clay known for?\nEntities:Henry Clay with QID Q319630;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q319630 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-152",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q319630 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who did axl rose marry?\nEntities:Axl Rose with QID Q11885;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11885 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-153",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11885 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what is the money of spain called?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-155",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who was elected president of the philippines?\nEntities:Governor of Texas with QID Q5589725; Philippines with QID Q928;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5589725 wdt:officeholder ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-157",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5589725 wdt:P1308 ?x. }"
    },
    {
        "input": "Query: what time zone is oklahoma state?\nEntities:Oklahoma with QID Q1649;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1649 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-159",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1649 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who was the apostle paul considered to be?\nEntities:Paul the Apostle with QID Q9200;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9200 wdt:name_in_native_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-160",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9200 wdt:P1559 ?x. }"
    },
    {
        "input": "Query: what currency does ontario canada use?\nEntities:Ontario with QID Q1904; Canada with QID Q16;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-161",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what instrument does justin bieber?\nEntities:Justin Bieber with QID Q34086;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34086 wdt:instrument ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-162",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34086 wdt:P1303 ?x. }"
    },
    {
        "input": "Query: what team did shaq play for first?\nEntities:Shaquille O'Neal with QID Q169452;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q169452 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-163",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q169452 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: where was kennedy when he got shot?\nEntities:John F. Kennedy with QID Q9696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9696 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-164",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9696 wdt:P20 ?x. }"
    },
    {
        "input": "Query: who do derek fisher play for?\nEntities:Derek Fisher with QID Q314621;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q314621 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-165",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q314621 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where did the casey anthony case take place?\nEntities:death of Caylee Anthony with QID Q1056362;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1056362 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-166",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1056362 wdt:P276 ?x. }"
    },
    {
        "input": "Query: where did pres clinton go to college?\nEntities:Bill Clinton with QID Q1124;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1124 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-167",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1124 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: when were the texas rangers started?\nEntities:Texas Rangers with QID Q329816;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q329816 wdt:inception ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-171",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q329816 wdt:P571 ?x. }"
    },
    {
        "input": "Query: where did the houston oilers football team go?\nEntities:Houston Oilers with QID Q1439096;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:inception ?y. ?y pq:identity_of_subject_in_context wd:Q1439096. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-172",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P571 ?y. ?y pq:P4649 wd:Q1439096. }"
    },
    {
        "input": "Query: where did pauley perrette go to college?\nEntities:Pauley Perrette with QID Q231815;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q231815 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-174",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q231815 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where does niles crane live?\nEntities:Niles Crane with QID Q579745;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q579745 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-175",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q579745 wdt:P551 ?x. }"
    },
    {
        "input": "Query: where was gabriel faure born?\nEntities:Gabriel Faur\u00e9 with QID Q104919;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q104919 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-176",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q104919 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who is the governor of kentucky 2012?\nEntities:Kentucky with QID Q4151335; Governor of Yap with QID Q5589733; governor with QID Q132050;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:Q4151335; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-177",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4151335; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who is the senator of the united states 2010?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:senator_of_the_united_states; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2011-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2010-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-178",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4416090; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2011-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2010-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: where did the massive allied invasion of northern france take place in june 1944?\nEntities:Normandy with QID Q15878;",
        "output": "SELECT DISTINCT ?x WHERE { wd:massive_allied_invasion_of_northern_france wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-179",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16471 wdt:P276 ?x. }"
    },
    {
        "input": "Query: which countries are part of the united kingdom?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:contains_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-180",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P150 ?x. }"
    },
    {
        "input": "Query: what is the postcode for london?\nEntities:London with QID Q84;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q84 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-181",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q84 wdt:P281 ?x. }"
    },
    {
        "input": "Query: what other books did jules verne wrote?\nEntities:Jules Verne with QID Q33977;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:written_work; wdt:author wd:Q33977. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-183",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q47461344; wdt:P50 wd:Q33977. }"
    },
    {
        "input": "Query: what is the currency name of brazil?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-184",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what language does fiji?\nEntities:Fiji with QID Q712;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q712 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-185",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q712 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what is the second percy jackson book called?\nEntities:Percy Jackson with QID Q3899725;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:literary_work; wdt:title ?x; wdt:characters wd:Q3899725; wdt:publication_date ?y. } ORDER BY ?y OFFSET 1 LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-186",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31/wdt:P279* wd:Q7725634; wdt:P1476 ?x; wdt:P674 wd:Q3899725; wdt:P577 ?y. } ORDER BY ?y OFFSET 1 LIMIT 1"
    },
    {
        "input": "Query: where is mitsubishi headquarters?\nEntities:Mitsubishi Group with QID Q183275;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q183275 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-189",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q183275 wdt:P159 ?x. }"
    },
    {
        "input": "Query: where is jay cutler now?\nEntities:Jay Cutler with QID Q937778;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q937778 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-190",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q937778 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what are eu countries?\nEntities:European Union with QID Q458;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q458 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-191",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q458 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what influenced vincent van gogh work?\nEntities:Vincent van Gogh with QID Q5582;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5582 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-192",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5582 wdt:P737 ?x. }"
    },
    {
        "input": "Query: what time zones are there in the us?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-193",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what are the 5 biggest cities in the usa?\nEntities:United States of America with QID Q30; city with QID Q515;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:city; wdt:country wd:Q30; wdt:population ?y. } ORDER BY DESC (?y) LIMIT 5",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-194",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q515; wdt:P17 wd:Q30; wdt:P1082 ?y. } ORDER BY DESC (?y) LIMIT 5"
    },
    {
        "input": "Query: what language do australian people speak?\nEntities:Australia with QID Q408;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-195",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who did ben stiller play in megamind?\nEntities:Megamind with QID Q81205; Ben Stiller with QID Q47100;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q81205 p:cast_member ?p. ?p ps:cast_member wd:Q47100; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-196",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q81205 p:P161 ?p. ?p ps:P161 wd:Q47100; pq:P453 ?x. }"
    },
    {
        "input": "Query: what countries did queen victoria rule?\nEntities:Victoria with QID Q9439;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9439 wdt:noble_title ?p. ?p wdt:country ?x.  }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-197",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9439 wdt:P97 ?p. ?p wdt:P17 ?x.  }"
    },
    {
        "input": "Query: who are betty white's parents?\nEntities:Betty White with QID Q373895;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q373895 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-198",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q373895 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: where did jeff dunham go to school?\nEntities:Jeff Dunham with QID Q296567;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q296567 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-199",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q296567 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what college did kevjumba?\nEntities:KevJumba with QID Q717527;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q717527 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-200",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q717527 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: who does david james play for 2011?\nEntities:David James with QID Q10598;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q10598 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-201",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q10598 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what movies did diana ross play in?\nEntities:Diana Ross with QID Q36290;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q36290; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-203",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q36290; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what is the zip code for minneapolis?\nEntities:Minneapolis with QID Q36091;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36091 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-204",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36091 wdt:P281 ?x. }"
    },
    {
        "input": "Query: what country is the west bank located in?\nEntities:West Bank with QID Q36678;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36678 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-205",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36678 wdt:P17 ?x. }"
    },
    {
        "input": "Query: who won golden boot?\nEntities:Premier League with QID Q9448; Premier League Golden Boot with QID Q794775;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q794775 wdt:winner ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-206",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q794775 wdt:P1346 ?x. }"
    },
    {
        "input": "Query: where did jane mansfield die?\nEntities:Jayne Mansfield with QID Q229507;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q229507 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-207",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q229507 wdt:P20 ?x. }"
    },
    {
        "input": "Query: where is the thames river located?\nEntities:River Thames with QID Q19686;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q19686 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-208",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q19686 wdt:P131 ?x. }"
    },
    {
        "input": "Query: when did kings last win stanley cup?\nEntities:Los Angeles Kings with QID Q203008; Stanley Cup with QID Q211872;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:stanley_cup; wdt:winner wd:Q203008; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-209",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q211872; wdt:P1346 wd:Q203008; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what school did william shakespeare attend?\nEntities:William Shakespeare with QID Q692;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q692 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-210",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q692 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what money do they use in chile?\nEntities:Chile with QID Q298;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q298 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-211",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q298 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what college did peyton manning?\nEntities:Peyton Manning with QID Q7539;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7539 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-212",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7539 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what are the 2 conferences in the nfl?\nEntities:National Football League with QID Q1215884;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1215884 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-213",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1215884 wdt:P527 ?x. }"
    },
    {
        "input": "Query: when did jennifer lopez start on in living color?\nEntities:In Living Color with QID Q2438494; Jennifer Lopez with QID Q40715;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:part_of_the_series wd:Q2438494; wdt:publication_date ?x; p:cast_member ?y. ?y ps:cast_member wd:Q40715. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-214",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P179 wd:Q2438494; wdt:P577 ?x; p:P161 ?y. ?y ps:P161 wd:Q40715. }"
    },
    {
        "input": "Query: what character does ellen play in finding nemo?\nEntities:Ellen DeGeneres with QID Q483325; Finding Nemo with QID Q132863;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q132863 p:voice_actor ?p. ?p pq:character_role ?x. ?p ps:voice_actor wd:Q483325. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-216",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q132863 p:P725 ?p. ?p pq:P453 ?x. ?p ps:P725 wd:Q483325. }"
    },
    {
        "input": "Query: when was the last time the ny giants were in the super bowl?\nEntities:New York Giants with QID Q190618; Super Bowl with QID Q32096;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:participating_team wd:Q190618; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-217",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1923 wd:Q190618; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what are all the names of harry potter?\nEntities:",
        "output": "SELECT DISTINCT ?x WHERE { wd:harry_potter wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-218",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8337 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what does nick cannon play in?\nEntities:Nick Cannon with QID Q348533;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q348533. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-219",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q348533. }"
    },
    {
        "input": "Query: what sort of government does brazil have?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-220",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where did matthias schleiden go to school?\nEntities:Matthias Jacob Schleiden with QID Q76747;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76747 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-222",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76747 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what county is rihanna from?\nEntities:Rihanna with QID Q36844;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36844 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-223",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36844 wdt:P27 ?x. }"
    },
    {
        "input": "Query: what country is located in the balkan peninsula?\nEntities:Balkans with QID Q23522;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23522 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-225",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23522 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what 6 states border south dakota?\nEntities:South Dakota with QID Q1211;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1211 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-226",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1211 wdt:P47 ?x. }"
    },
    {
        "input": "Query: what are the main languages spoken in spain?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-227",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what songs did mozart write?\nEntities:Wolfgang Amadeus Mozart with QID Q254;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:composer wd:Q254. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-228",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P86 wd:Q254. }"
    },
    {
        "input": "Query: what language do they speak in thai?\nEntities:Thailand with QID Q869;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-229",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who is the new senator of montana?\nEntities:Montana with QID Q1212; United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:senator. ?p pq:electoral_district ?y. ?y wdt:located_in_the_administrative_territorial_entity wd:Q1212. FILTER NOT EXISTS { ?p pq:end_time ?z. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-230",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4416090. ?p pq:P768 ?y. ?y wdt:P131 wd:Q1212. FILTER NOT EXISTS { ?p pq:P582 ?z. } }"
    },
    {
        "input": "Query: what language people speak in afghanistan?\nEntities:Afghanistan with QID Q889;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q889 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-233",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q889 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what language do people speak in brazil wikipedia?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-234",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what cities should i visit in california?\nEntities:California with QID Q99;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:located_in_the_administrative_territorial_entity wd:Q99; wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-235",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P131 wd:Q99; wdt:P36 ?x. }"
    },
    {
        "input": "Query: where was princess leia raised?\nEntities:Leia Organa with QID Q51797;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q51797 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-236",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q51797 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what is the name of the pittsburgh steelers head coach?\nEntities:Pittsburgh Steelers with QID Q191477;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q191477 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-237",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q191477 wdt:P286 ?x. }"
    },
    {
        "input": "Query: when did the lakers win the championship?\nEntities:Los Angeles Lakers with QID Q121783; NBA Finals with QID Q842375;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q121783; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-239",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q121783; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what year was the great san francisco fire?\nEntities:1906 San Francisco earthquake with QID Q211386;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q211386 wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-240",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q211386 wdt:P585 ?x. }"
    },
    {
        "input": "Query: what countries share borders with france?\nEntities:France with QID Q142;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-241",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:P47 ?x. }"
    },
    {
        "input": "Query: what did patrick swayze sing?\nEntities:Patrick Swayze with QID Q49004;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:performer wd:Q49004. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-242",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P175 wd:Q49004. }"
    },
    {
        "input": "Query: what style of art is salvador dali?\nEntities:Salvador Dal\u00ed with QID Q5577;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5577 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-243",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5577 wdt:P136 ?x. }"
    },
    {
        "input": "Query: what city was leonardo da vinci from?\nEntities:Leonardo da Vinci with QID Q762;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q762 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-244",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q762 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what did george v die of?\nEntities:George V with QID Q269412;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q269412 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-245",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q269412 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what are the three major rivers in south america?\nEntities:South America with QID Q18;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:river; wdt:continent wd:Q18; wdt:length ?y. } ORDER BY DESC (?y) LIMIT 3",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-246",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q4022; wdt:P30 wd:Q18; wdt:P2043 ?y. } ORDER BY DESC (?y) LIMIT 3"
    },
    {
        "input": "Query: what other discoveries did isaac newton discover?\nEntities:Isaac Newton with QID Q935;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q935. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-247",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q935. }"
    },
    {
        "input": "Query: who started pixar?\nEntities:Pixar with QID Q127552;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q127552 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-248",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q127552 wdt:P112 ?x. }"
    },
    {
        "input": "Query: who is tia and tamera mowry parents?\nEntities:Tia Mowry with QID Q956479;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q956479 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-249",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q956479 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: what political party was lincoln?\nEntities:Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-250",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:P102 ?x. }"
    },
    {
        "input": "Query: what kind of government is china?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-252",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where is the nation of greece located?\nEntities:Greece with QID Q41;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-253",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what three countries does mexico border?\nEntities:Mexico with QID Q96;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q96 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-254",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q96 wdt:P47 ?x. }"
    },
    {
        "input": "Query: what year was the new york blackout?\nEntities:New York City blackout of 1977 with QID Q2425884;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2425884 wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-255",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2425884 wdt:P585 ?x. }"
    },
    {
        "input": "Query: which countries have english as native language?\nEntities:English with QID Q1860;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:language_used wd:Q1860. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-256",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P2936 wd:Q1860. }"
    },
    {
        "input": "Query: what position does rafael furcal play?\nEntities:Rafael Furcal with QID Q2339046;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2339046 wdt:position_played_on_team_/_speciality ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-257",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2339046 wdt:P413 ?x. }"
    },
    {
        "input": "Query: what shows did kellie martin star in?\nEntities:Kellie Martin with QID Q235754;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q235754. ?x wdt:instance_of/wdt:subclass_of* wd:television_series. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-259",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q235754. ?x wdt:P31/wdt:P279* wd:Q5398426. }"
    },
    {
        "input": "Query: where did rihanna grow up?\nEntities:Rihanna with QID Q36844;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36844 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-260",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36844 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where is whistler mountain located?\nEntities:Whistler Mountain with QID Q2063471;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2063471 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-261",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2063471 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what currency do i need in cuba?\nEntities:Cuba with QID Q241;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q241 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-262",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q241 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what country did james cook come from?\nEntities:James Cook with QID Q7324;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7324 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-263",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7324 wdt:P27 ?x. }"
    },
    {
        "input": "Query: who is julia roberts married to 2012?\nEntities:Julia Roberts with QID Q40523;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q40523 p:spouse ?p. ?p ps:spouse ?x; pq:start_time ?y. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-264",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q40523 p:P26 ?p. ?p ps:P26 ?x; pq:P580 ?y. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what sport does rebecca adlington compete in?\nEntities:Rebecca Adlington with QID Q49287;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q49287 wdt:sport ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-265",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q49287 wdt:P641 ?x. }"
    },
    {
        "input": "Query: when did the christchurch quake happened?\nEntities:February 2011 Christchurch earthquake with QID Q151850;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q151850 wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-266",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q151850 wdt:P585 ?x. }"
    },
    {
        "input": "Query: who played mason capwell?\nEntities:Mason Capwell with QID Q1965740;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q1965740. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-269",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q1965740. }"
    },
    {
        "input": "Query: what is james madison most famous for?\nEntities:James Madison with QID Q11813;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11813 wdt:notable_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-270",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11813 wdt:P800 ?x. }"
    },
    {
        "input": "Query: where was the battle of antietam creek?\nEntities:Battle of Antietam with QID Q719252;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q719252 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-272",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q719252 wdt:P276 ?x. }"
    },
    {
        "input": "Query: during what war did abraham lincoln serve as president?\nEntities:President of the United States with QID Q11696; Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 p:position_held ?p. ?p ps:position_held wd:Q11696; pq:start_time ?y; pq:end_time ?z. ?x wdt:instance_of/wdt:subclass_of* wd:war; wdt:start_time ?w; wdt:end_time ?v. FILTER(((?w < ?z) && (?w >= ?y)) || ((?v < ?z) && (?v >= ?y))) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-273",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 p:P39 ?p. ?p ps:P39 wd:Q11696; pq:P580 ?y; pq:P582 ?z. ?x wdt:P31 wd:Q198; wdt:P580 ?w; wdt:P582 ?v. FILTER(((?w < ?z) && (?w >= ?y)) || ((?v < ?z) && (?v >= ?y))) }"
    },
    {
        "input": "Query: who are shakespeare's parents names?\nEntities:William Shakespeare with QID Q692;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q692 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-274",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q692 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: where is she from shakira?\nEntities:Shakira with QID Q34424;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34424 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-275",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34424 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who did hera marry?\nEntities:Hera with QID Q38012;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38012 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-277",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38012 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what type of guitar does kirk hammett play?\nEntities:guitar with QID Q6607; Kirk Hammett with QID Q484030;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:subclass_of* wd:Q6607; wdt:used_by wd:Q484030. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-278",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P279* wd:Q6607; wdt:P1535 wd:Q484030. }"
    },
    {
        "input": "Query: what language they speak in the philippines?\nEntities:Philippines with QID Q928;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q928 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-279",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q928 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where is the kakadu national park located?\nEntities:Kakadu National Park with QID Q189657;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q189657 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-280",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q189657 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what money does jamaica use?\nEntities:Jamaica with QID Q766;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-282",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what year did william mckinley became president?\nEntities:President of the United States with QID Q11696; William McKinley with QID Q35041;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35041 p:position_held ?z. ?z ps:position_held wd:Q11696; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-283",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35041 p:P39 ?z. ?z ps:P39 wd:Q11696; pq:P580 ?x. }"
    },
    {
        "input": "Query: what date did kennedy become president?\nEntities:President of the United States with QID Q11696; John F. Kennedy with QID Q9696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9696 p:position_held ?z. ?z ps:position_held wd:Q11696; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-284",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9696 p:P39 ?z. ?z ps:P39 wd:Q11696; pq:P580 ?x. }"
    },
    {
        "input": "Query: what timezone is colorado in right now?\nEntities:Colorado with QID Q1261;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1261 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-285",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1261 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who owns aston martin 2012?\nEntities:Aston Martin Lagonda with QID Q27074;",
        "output": "SELECT DISTINCT ?x WHERE { wd:aston_martin wdt:owned_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-286",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q63049904 wdt:P127 ?x. }"
    },
    {
        "input": "Query: what disease has jack osbourne got?\nEntities:Jack Osbourne with QID Q724791;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q724791 wdt:medical_condition ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-287",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q724791 wdt:P1050 ?x. }"
    },
    {
        "input": "Query: who will david beckham play for in 2013?\nEntities:David Beckham with QID Q10520;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q10520 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2014-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-289",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q10520 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2014-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what language they speak in taiwan?\nEntities:Taiwan with QID Q865;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q865 wdt:language_used ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-290",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q865 wdt:P2936 ?x. }"
    },
    {
        "input": "Query: who owns the toronto maple leafs?\nEntities:Toronto Maple Leafs with QID Q203384;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q203384 wdt:owned_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-291",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q203384 wdt:P127 ?x. }"
    },
    {
        "input": "Query: what county is novato california in?\nEntities:Novato with QID Q851004;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q851004 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-292",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q851004 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what are the basic beliefs of sikhism?\nEntities:Sikhism with QID Q9316;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9316 wdt:has_quality ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-293",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9316 wdt:P1552 ?x. }"
    },
    {
        "input": "Query: where did hernando cortez die?\nEntities:Hern\u00e1n Cort\u00e9s with QID Q7326;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7326 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-294",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7326 wdt:P20 ?x. }"
    },
    {
        "input": "Query: who was liz taylor married too?\nEntities:Elizabeth Taylor with QID Q34851;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34851 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-295",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34851 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where was the ancient region of mesopotamia?\nEntities:Mesopotamia with QID Q11767;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11767 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-296",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11767 wdt:P276 ?x. }"
    },
    {
        "input": "Query: who was real housewives brandi married to?\nEntities:Brandi Glanville with QID Q4956689;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4956689 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-297",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4956689 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where is the ottoman empire located?\nEntities:Ottoman Empire with QID Q12560;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q12560 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-300",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q12560 wdt:P17 ?x. }"
    },
    {
        "input": "Query: which city held the summer olympics twice?\nEntities:Summer Olympic Games with QID Q159821;",
        "output": "SELECT DISTINCT ?x (COUNT(DISTINCT *) AS ?y) WHERE { wd:Q159821 wdt:has_part(s) ?p. ?p wdt:location ?x. ?x wdt:instance_of/wdt:subclass_of* wd:city. } GROUP BY ?x HAVING (?y = 2)",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-301",
        "sparql": "SELECT DISTINCT ?x (COUNT(DISTINCT *) AS ?y) WHERE { wd:Q159821 wdt:P527 ?p. ?p wdt:P276 ?x. ?x wdt:P31/wdt:P279* wd:Q515. } GROUP BY ?x HAVING (?y = 2)"
    },
    {
        "input": "Query: who are the green bay packers owned by?\nEntities:Green Bay Packers with QID Q213837;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q213837 wdt:owned_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-302",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q213837 wdt:P127 ?x. }"
    },
    {
        "input": "Query: what inspired langston hughes to write poetry?\nEntities:Langston Hughes with QID Q188093;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q188093 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-303",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q188093 wdt:P737 ?x. }"
    },
    {
        "input": "Query: what languages are there in switzerland?\nEntities:Switzerland with QID Q39;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-304",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where did henry knox die?\nEntities:Henry Knox with QID Q355680;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q355680 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-307",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q355680 wdt:P20 ?x. }"
    },
    {
        "input": "Query: who is married to garry trudeau?\nEntities:Garry Trudeau with QID Q1340213;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1340213 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-310",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1340213 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what language do they speak in northern ireland?\nEntities:Northern Ireland with QID Q26;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q26 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-312",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q26 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what countries make up continental europe?\nEntities:Europe with QID Q46;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q46 wdt:has_part(s)+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-313",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q46 wdt:P527+ ?x. ?x wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: what do abrahamic religions have in common?\nEntities:Abrahamic religion with QID Q47280;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q47280 wdt:has_quality ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-314",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q47280 wdt:P1552 ?x. }"
    },
    {
        "input": "Query: what did johnny crawford sing?\nEntities:Johnny Crawford with QID Q542162;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:performer wd:Q542162. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-315",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P175 wd:Q542162. }"
    },
    {
        "input": "Query: what did abraham lincoln do before he was president?\nEntities:President of the United States with QID Q11696; Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 p:position_held ?p. ?p ps:position_held ?x; pq:end_time ?y. wd:Q91 p:position_held ?q. ?q ps:position_held wd:Q11696; pq:start_time ?z. FILTER(?y < ?z) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-316",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 p:P39 ?p. ?p ps:P39 ?x; pq:P582 ?y. wd:Q91 p:P39 ?q. ?q ps:P39 wd:Q11696; pq:P580 ?z. FILTER(?y < ?z) }"
    },
    {
        "input": "Query: what sport does sally pearson compete in?\nEntities:Sally Pearson with QID Q6026;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6026 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-317",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6026 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where is atlanta texas located?\nEntities:Atlanta with QID Q23556;",
        "output": "SELECT DISTINCT ?x WHERE { wd:atlanta_texas wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-318",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q756137 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who did elton john marry first?\nEntities:Elton John with QID Q2808;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2808 p:spouse ?p. ?p ps:spouse ?x; pq:start_time ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-319",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2808 p:P26 ?p. ?p ps:P26 ?x; pq:P580 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: where is tom cruise from?\nEntities:Tom Cruise with QID Q37079;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37079 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-320",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37079 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what movies did madonna appear in?\nEntities:Madonna with QID Q1744;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q1744; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-321",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q1744; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where does leland chapman live now?\nEntities:Leland Chapman with QID Q1474347;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1474347 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-322",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1474347 wdt:P551 ?x. }"
    },
    {
        "input": "Query: where was the roman colosseum located?\nEntities:Colosseum with QID Q10285;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q10285 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-323",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q10285 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what date was abraham lincoln inaugurated?\nEntities:President of the United States with QID Q11696; Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 p:position_held ?y. ?y ps:position_held wd:Q11696; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-324",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 p:P39 ?y. ?y ps:P39 wd:Q11696; pq:P580 ?x. }"
    },
    {
        "input": "Query: what time zone is new york under?\nEntities:New York with QID Q1384;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1384 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-326",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1384 wdt:P421 ?x. }"
    },
    {
        "input": "Query: where did bashar al assad study?\nEntities:Bashar al-Assad with QID Q44329;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q44329 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-331",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q44329 wdt:P69 ?x. }"
    },
    {
        "input": "Query: who plays lois lane in superman returns?\nEntities:Superman Returns with QID Q328695; Lois Lane with QID Q845922;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q328695 p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q845922. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-332",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q328695 p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q845922. }"
    },
    {
        "input": "Query: who is the voice of stewie griffin from family guy?\nEntities:Family Guy with QID Q5930; Stewie Griffin with QID Q837909;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q837909. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-334",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q837909. }"
    },
    {
        "input": "Query: what films did charlie chaplin direct?\nEntities:Charlie Chaplin with QID Q882;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:director wd:Q882. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-336",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P57 wd:Q882. }"
    },
    {
        "input": "Query: who does lea michele dating in real life?\nEntities:Lea Michele with QID Q228733;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q228733 wdt:unmarried_partner|wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-337",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q228733 wdt:P451|wdt:P26 ?x. }"
    },
    {
        "input": "Query: when did joe walsh leave the eagles?\nEntities:Eagles with QID Q189635; Joe Walsh with QID Q354033;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q354033 p:member_of ?p. ?p ps:member_of wd:Q189635; pq:end_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-338",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q354033 p:P463 ?p. ?p ps:P463 wd:Q189635; pq:P582 ?x. }"
    },
    {
        "input": "Query: what should you see in london?\nEntities:London with QID Q84;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q84. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-340",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q84. }"
    },
    {
        "input": "Query: who does billy beane work for now?\nEntities:Billy Beane with QID Q26122;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q26122 wdt:employer ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-341",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q26122 wdt:P108 ?x. }"
    },
    {
        "input": "Query: what subatomic particles did jj thomson discover?\nEntities:J. J. Thomson with QID Q47285;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q47285; wdt:subclass_of* wd:subatomic_particles. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-342",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q47285; wdt:P279* wd:Q43116. }"
    },
    {
        "input": "Query: what films have taylor lautner been in?\nEntities:Taylor Lautner with QID Q23359;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q23359; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-343",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q23359; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: who were anakin skywalker's parents?\nEntities:Anakin Skywalker with QID Q51752;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q51752 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-344",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q51752 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: who played the voice of aladdin?\nEntities:Aladdin with QID Q215518; Aladdin with QID Q1358109;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q1358109. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-346",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q1358109. }"
    },
    {
        "input": "Query: what exactly did dale earnhardt die from?\nEntities:Dale Earnhardt with QID Q355420;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q355420 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-347",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q355420 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what year did miami heat win the championship?\nEntities:NBA Finals with QID Q842375; Miami Heat with QID Q169138;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q169138; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-348",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q169138; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what kind of government did benito mussolini have?\nEntities:Benito Mussolini with QID Q23559;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23559 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-349",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23559 wdt:P102 ?x. }"
    },
    {
        "input": "Query: who was emperor diocletian?\nEntities:Diocletian with QID Q43107;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43107 wdt:notable_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-350",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43107 wdt:P800 ?x. }"
    },
    {
        "input": "Query: who is chelsea kane?\nEntities:Chelsea Kane with QID Q205794;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q205794 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-351",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q205794 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who is darwin and what is his theory?\nEntities:Charles Darwin with QID Q1035;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1035 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-352",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1035 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what did obama study in school?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 p:educated_at ?y. ?y pq:academic_major ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-353",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 p:P69 ?y. ?y pq:P812 ?x. }"
    },
    {
        "input": "Query: where did deion sanders play baseball?\nEntities:Deion Sanders with QID Q954184;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q954184 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-354",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q954184 wdt:P54 ?x. }"
    },
    {
        "input": "Query: who is the new governor of oregon?\nEntities:Oregon with QID Q824;",
        "output": "SELECT DISTINCT ?x WHERE { wd:governor_of_oregon wdt:officeholder ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-355",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16149111 wdt:P1308 ?x. }"
    },
    {
        "input": "Query: what continent is south africa part of?\nEntities:South Africa with QID Q258;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q258 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-356",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q258 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what movies has taylor lautner been in 2011?\nEntities:Taylor Lautner with QID Q23359;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:film; wdt:cast_member wd:Q23359; wdt:publication_date ?y. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-358",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q11424; wdt:P161 wd:Q23359; wdt:P577 ?y. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what did kate winslet get an oscar for?\nEntities:Academy Awards with QID Q19020; Kate Winslet with QID Q202765;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:academy_awards; wdt:winner wd:Q202765. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-360",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q19020; wdt:P1346 wd:Q202765. }"
    },
    {
        "input": "Query: what company did henry ford work for?\nEntities:Henry Ford with QID Q8768;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8768 wdt:employer ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-361",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8768 wdt:P108 ?x. }"
    },
    {
        "input": "Query: where indian ocean is located?\nEntities:Indian Ocean with QID Q1239;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1239 wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-363",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1239 wdt:P625 ?x. }"
    },
    {
        "input": "Query: who was mary's mother?\nEntities:Virgin Mary with QID Q345;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q345 wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-366",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q345 wdt:P25 ?x. }"
    },
    {
        "input": "Query: where is american express located?\nEntities:American Express with QID Q194360;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q194360 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-367",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q194360 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what is the china money called?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-368",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what is the government of spain today?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-369",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where is the howard university located?\nEntities:Howard University with QID Q1068752;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1068752 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-370",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1068752 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what do catholics call their god?\nEntities:God with QID Q190; Christianity with QID Q5043;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:part_of wd:god_in_christianity. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-372",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P361 wd:Q825. }"
    },
    {
        "input": "Query: what is the capital of alaska state?\nEntities:Alaska with QID Q797;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q797 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-373",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q797 wdt:P36 ?x. }"
    },
    {
        "input": "Query: what college did jeff corwin go to?\nEntities:Jeff Corwin with QID Q770523;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q770523 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-375",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q770523 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: who speaks farsi?\nEntities:Iran with QID Q794; Persian with QID Q9168;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q9168; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-376",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q9168; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: who was neptune discovered by?\nEntities:Neptune with QID Q332;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q332 wdt:discoverer_or_inventor ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-377",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q332 wdt:P61 ?x. }"
    },
    {
        "input": "Query: what did corey haim really die of?\nEntities:Corey Haim with QID Q342370;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q342370 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-379",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q342370 wdt:P509 ?x. }"
    },
    {
        "input": "Query: where did pavlova originate?\nEntities:Pavlova with QID Q1419824;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1419824 wdt:country_of_origin ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-380",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1419824 wdt:P495 ?x. }"
    },
    {
        "input": "Query: where did nathaniel hawthorne die?\nEntities:Nathaniel Hawthorne with QID Q69339;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q69339 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-381",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q69339 wdt:P20 ?x. }"
    },
    {
        "input": "Query: where did jack johnson go to high school?\nEntities:Jack Johnson with QID Q297097;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q297097 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-382",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q297097 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: who played maxie jones on general hospital?\nEntities:General Hospital with QID Q1136370; Maxie Jones with QID Q6795519;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1136370 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q6795519. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-383",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1136370 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q6795519. }"
    },
    {
        "input": "Query: what are buddhist gods?\nEntities:Buddhism with QID Q748;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:god; wdt:worshipped_by wd:Q748. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-385",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q6058157; wdt:P1049 wd:Q748. }"
    },
    {
        "input": "Query: who influenced wolfgang amadeus mozart?\nEntities:Wolfgang Amadeus Mozart with QID Q254;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q254 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-386",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q254 wdt:P737 ?x. }"
    },
    {
        "input": "Query: when was the last dallas cowboys super bowl win?\nEntities:Super Bowl with QID Q32096; Dallas Cowboys with QID Q204862;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner wd:Q204862; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-387",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1346 wd:Q204862; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what language do they speak in iceland wikipedia?\nEntities:Iceland with QID Q189;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q189 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-388",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q189 wdt:P37 ?x. }"
    },
    {
        "input": "Query: when was blessed kateri born?\nEntities:Kateri Tekakwitha with QID Q609;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q609 wdt:date_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-389",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q609 wdt:P569 ?x. }"
    },
    {
        "input": "Query: when did the bali bombings occur?\nEntities:2002 Bali bombings with QID Q86584; Queen's Indian Defense with QID Q200727;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q86584 wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-390",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q86584 wdt:P585 ?x. }"
    },
    {
        "input": "Query: what is the political system in south africa?\nEntities:South Africa with QID Q258;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q258 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-391",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q258 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where did joe montana go to high school?\nEntities:Joe Montana with QID Q348011;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q348011 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-393",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q348011 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: where is the nation of palestine?\nEntities:Palestine with QID Q23792;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23792 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-395",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23792 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what countries speak english primarily?\nEntities:English with QID Q1860;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1860 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-397",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1860 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what states does the missouri river touch?\nEntities:federated state with QID Q107390; Missouri River with QID Q5419;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5419 wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-398",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5419 wdt:P131+ ?x. ?x wdt:P31/wdt:P279* wd:Q107390. }"
    },
    {
        "input": "Query: what is in liverpool england?\nEntities:Liverpool with QID Q24826;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q24826. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-399",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q24826. }"
    },
    {
        "input": "Query: what state is harvard college located?\nEntities:Harvard College with QID Q49123; federated state with QID Q107390;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q49123 wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-400",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q49123 wdt:P131+ ?x. ?x wdt:P31 wd:Q107390. }"
    },
    {
        "input": "Query: where was leonardo da vinci when he died?\nEntities:Leonardo da Vinci with QID Q762;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q762 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-401",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q762 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what money do japanese use?\nEntities:Japan with QID Q17;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-402",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what is the time zone in oklahoma city?\nEntities:Oklahoma City with QID Q34863;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34863 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-403",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34863 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what killed whitney houston?\nEntities:Whitney Houston with QID Q34389;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34389 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-404",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34389 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what kind of government did the mali empire have?\nEntities:Mali with QID Q912; Mali Empire with QID Q184536;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q912 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-405",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q912 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what is the religion of israel people?\nEntities:Israel with QID Q801;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:official_religion ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-406",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:P3075 ?x. }"
    },
    {
        "input": "Query: what is mount st helens?\nEntities:Mount St. Helens with QID Q4675;",
        "output": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q4675 schema:description ?x. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-407",
        "sparql": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q4675 schema:description ?x. } }"
    },
    {
        "input": "Query: which country is north of the usa?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 p:shares_border_with ?p. ?p ps:shares_border_with ?x; pq:direction wd:north. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-409",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 p:P47 ?p. ?p ps:P47 ?x; pq:P560 wd:Q659. }"
    },
    {
        "input": "Query: where does drew gordon play?\nEntities:Drew Gordon with QID Q247487;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q247487 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-410",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q247487 wdt:P54 ?x. }"
    },
    {
        "input": "Query: who was the first russian president?\nEntities:Russia with QID Q159; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:russian_president; pq:start_time ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-411",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q218295; pq:P580 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: what language does people in netherlands speak?\nEntities:Netherlands with QID Q55;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q55 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-412",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q55 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what type of language does china speak?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-413",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what countries around the world speak french?\nEntities:French with QID Q150;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q150; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-414",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q150; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: who is esther hicks?\nEntities:Esther Hicks with QID Q3431027;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3431027 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-415",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3431027 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what does michael vick do?\nEntities:Michael Vick with QID Q505431;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q505431 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-416",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q505431 wdt:P106 ?x. }"
    },
    {
        "input": "Query: in which province is johannesburg?\nEntities:Johannesburg with QID Q34647;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34647 wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:province. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-417",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34647 wdt:P131+ ?x. ?x wdt:P31/wdt:P279* wd:Q34876. }"
    },
    {
        "input": "Query: where was john lennon standing when he was shot?\nEntities:John Lennon with QID Q1203;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1203 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-418",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1203 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what state did al gore represent?\nEntities:Al Gore with QID Q19673;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q19673 p:position_held ?p. ?p ps:position_held ?y; pq:electoral_district ?z. ?z wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-420",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q19673 p:P39 ?p. ?p ps:P39 ?y; pq:P768 ?z. ?z wdt:P131 ?x. }"
    },
    {
        "input": "Query: who voiced darth vader in revenge of the sith?\nEntities:Anakin Skywalker with QID Q51752; Star Wars: Episode III \u2013 Revenge of the Sith with QID Q42051;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q42051 p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q51752. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-421",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q42051 p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q51752. }"
    },
    {
        "input": "Query: what type of art is henri matisse famous for?\nEntities:Henri Matisse with QID Q5589;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5589 wdt:movement ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-422",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5589 wdt:P135 ?x. }"
    },
    {
        "input": "Query: what to do in laughlin nevada?\nEntities:",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:laughlin_nevada. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-423",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q594154. }"
    },
    {
        "input": "Query: who plays princess padme in star wars?\nEntities:Padm\u00e9 Amidala with QID Q51789;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:media_franchise wd:star_wars; p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q51789. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-424",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P8345 wd:Q462; p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q51789. }"
    },
    {
        "input": "Query: who was louis riel?\nEntities:Louis Riel with QID Q313691;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q313691 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-426",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q313691 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what are the four nations of the uk?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:contains_the_administrative_territorial_entity ?x. } LIMIT 4",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-427",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P150 ?x. } LIMIT 4"
    },
    {
        "input": "Query: who was judy garland married to?\nEntities:Judy Garland with QID Q11637;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11637 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-428",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11637 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where is abraham lincoln hometown?\nEntities:Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-429",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what disease did helen keller?\nEntities:Helen Keller with QID Q38203;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38203 wdt:medical_condition ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-430",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38203 wdt:P1050 ?x. }"
    },
    {
        "input": "Query: what is the name of money in brazil?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-431",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what year did lakers win championship?\nEntities:Los Angeles Lakers with QID Q121783; NBA Finals with QID Q842375;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q121783; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-432",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q121783; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what is the atlanta braves mascot?\nEntities:Atlanta Braves with QID Q461595;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q461595 wdt:mascot ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-434",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q461595 wdt:P822 ?x. }"
    },
    {
        "input": "Query: who played dumbledore in the first movie?\nEntities:Harry Potter and the Philosopher's Stone with QID Q102438; Albus Dumbledore with QID Q712548; Harry Potter with QID Q3244512;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q102438 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q712548. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-436",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q102438 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q712548. }"
    },
    {
        "input": "Query: where was greenpeace an international environmental organization founded?\nEntities:Greenpeace with QID Q81307;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q81307 wdt:location_of_formation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-437",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q81307 wdt:P740 ?x. }"
    },
    {
        "input": "Query: what was the first name of the washington redskins?\nEntities:Washington Commanders with QID Q212654;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q212654 p:official_name ?p. ?p ps:official_name ?x; pq:start_time ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-440",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q212654 p:P1448 ?p. ?p ps:P1448 ?x; pq:P580 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: who was the first leader of the afl?\nEntities:American Football League with QID Q464508;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q464508 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-442",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q464508 wdt:P112 ?x. }"
    },
    {
        "input": "Query: who is the arizona cardinals football coach?\nEntities:Arizona Cardinals with QID Q224164;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q224164 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-443",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q224164 wdt:P286 ?x. }"
    },
    {
        "input": "Query: where was the battle of waterloo held?\nEntities:Battle of Waterloo with QID Q48314;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q48314 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-445",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q48314 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what was marilyn monroe known for?\nEntities:Marilyn Monroe with QID Q4616;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4616 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-446",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4616 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where did lee corso go to college?\nEntities:Lee Corso with QID Q6513335;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6513335 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-449",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6513335 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: who are the colorado eagles?\nEntities:Colorado Eagles with QID Q661115;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q661115 wdt:instance_of/wdt:subclass_of* ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-450",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q661115 wdt:P31 ?x. }"
    },
    {
        "input": "Query: where does lala anthony live?\nEntities:La La Anthony with QID Q6463299; Carmelo Anthony with QID Q129041;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q129041 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-452",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q129041 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what currency do they accept in kenya?\nEntities:Kenya with QID Q114;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q114 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-453",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q114 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what do they speak in iran?\nEntities:Iran with QID Q794;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-456",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who did ayrton senna drive for?\nEntities:Ayrton Senna with QID Q10490;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q10490 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-457",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q10490 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where is the best place to vacation in the dominican republic?\nEntities:Dominican Republic with QID Q786;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:country wd:Q786. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-459",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P17 wd:Q786. }"
    },
    {
        "input": "Query: where was brad pitt born?\nEntities:Brad Pitt with QID Q35332;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35332 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-461",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35332 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what position does vernon davis play?\nEntities:Vernon Davis with QID Q1972672;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1972672 wdt:position_played_on_team_/_speciality ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-462",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1972672 wdt:P413 ?x. }"
    },
    {
        "input": "Query: where is the euro 2012 tournament?\nEntities:UEFA Euro 2012 with QID Q22669;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q22669 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-463",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q22669 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what time is right now in texas?\nEntities:Texas with QID Q1439;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1439 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-464",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1439 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what to see and do in malta?\nEntities:Malta with QID Q233;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:country wd:Q233. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-465",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P17 wd:Q233. }"
    },
    {
        "input": "Query: where did dolly parton grew up?\nEntities:Dolly Parton with QID Q180453;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q180453 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-466",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q180453 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what state is rick santorum from?\nEntities:Rick Santorum with QID Q155985;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155985 wdt:place_of_birth/wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:undefined }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-467",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155985 wdt:P19/wdt:P131+ ?x. ?x wdt:P31/wdt:P279* wd:undefined }"
    },
    {
        "input": "Query: what countries does queen elizabeth ii reign?\nEntities:Elizabeth II with QID Q9682;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9682 wdt:position_held ?y. ?y wdt:applies_to_jurisdiction ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-468",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9682 wdt:P39 ?y. ?y wdt:P1001 ?x. }"
    },
    {
        "input": "Query: what is jonas brothers names?\nEntities:Jonas Brothers with QID Q134233;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q134233 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-470",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q134233 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what art movements was henri matisse involved in?\nEntities:Henri Matisse with QID Q5589;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5589 wdt:movement ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-471",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5589 wdt:P135 ?x. }"
    },
    {
        "input": "Query: what are some famous tourist attractions in germany?\nEntities:Germany with QID Q183;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q183. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-472",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q183. }"
    },
    {
        "input": "Query: who's kobe bryant?\nEntities:Kobe Bryant with QID Q25369;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q25369 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-473",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q25369 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what type of government system does saudi arabia have?\nEntities:Saudi Arabia with QID Q851;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q851 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-474",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q851 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what countries did czechoslovakia become?\nEntities:Czechoslovakia with QID Q33946;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q33946 wdt:located_in_the_present-day_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-475",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q33946 wdt:P3842 ?x. }"
    },
    {
        "input": "Query: what songs did richard marx write?\nEntities:Richard Marx with QID Q311256;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:composer wd:Q311256. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-476",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P86 wd:Q311256. }"
    },
    {
        "input": "Query: what did ryan dunn died from?\nEntities:Ryan Dunn with QID Q316036;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q316036 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-477",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q316036 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what war was george washington associated with?\nEntities:George Washington with QID Q23;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:conflict ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-478",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:P607 ?x. }"
    },
    {
        "input": "Query: who does kris humphries play for in the nba?\nEntities:Kris Humphries with QID Q363421; National Basketball Association with QID Q155223;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q363421 wdt:member_of_sports_team ?x. ?x wdt:league wd:Q155223. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-480",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q363421 wdt:P54 ?x. ?x wdt:P118 wd:Q155223. }"
    },
    {
        "input": "Query: where tupac grew up?\nEntities:Tupac Shakur with QID Q6107;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6107 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-481",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6107 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where did al capone go to jail?\nEntities:Al Capone with QID Q80048;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q80048 wdt:place_of_detention ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-482",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q80048 wdt:P2632 ?x. }"
    },
    {
        "input": "Query: what type of music did richard wagner play?\nEntities:Richard Wagner with QID Q1511;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1511 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-483",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1511 wdt:P136 ?x. }"
    },
    {
        "input": "Query: what do you call money in brazil?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-484",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what team did tim tebow play for in college?\nEntities:Tim Tebow with QID Q517467;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q517467 wdt:member_of_sports_team ?x. ?x wdt:instance_of/wdt:subclass_of* wd:college_sports_team. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-485",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q517467 wdt:P54 ?x. ?x wdt:P31/wdt:P279* wd:Q18558301. }"
    },
    {
        "input": "Query: what nationality was andy williams?\nEntities:Andy Williams with QID Q214548;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q214548 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-487",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q214548 wdt:P27 ?x. }"
    },
    {
        "input": "Query: where did matthew brady live?\nEntities:Mathew Benjamin Brady with QID Q187850;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q187850 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-488",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q187850 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what ball does rickie fowler play?\nEntities:Rickie Fowler with QID Q1364348;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1364348 wdt:sport ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-489",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1364348 wdt:P641 ?x. }"
    },
    {
        "input": "Query: who are the broncos players?\nEntities:Denver Broncos with QID Q223507;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:member_of_sports_team wd:Q223507. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-490",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P54 wd:Q223507. }"
    },
    {
        "input": "Query: where do most of the people live in japan?\nEntities:Japan with QID Q17;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:city; wdt:country wd:Q17; wdt:population ?y. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-491",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q515; wdt:P17 wd:Q17; wdt:P1082 ?y. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: in what country do they speak basque?\nEntities:Basque Autonomous Community with QID Q3995; Basque with QID Q8752;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:country; wdt:language_used wd:Q8752. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-492",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q6256; wdt:P2936 wd:Q8752. }"
    },
    {
        "input": "Query: where is belgium at?\nEntities:Belgium with QID Q31;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q31 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-493",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q31 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what religions are in russia?\nEntities:Russia with QID Q159;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:official_religion ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-494",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:P3075 ?x. }"
    },
    {
        "input": "Query: what government system does north korea have?\nEntities:North Korea with QID Q423;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q423 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-495",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q423 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what did einstein do?\nEntities:Albert Einstein with QID Q937;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q937 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-496",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q937 wdt:P106 ?x. }"
    },
    {
        "input": "Query: in what country is amsterdam?\nEntities:Amsterdam with QID Q727;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q727 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-497",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q727 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what are the most common religions in the united states?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-498",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what did martin luther king jr go to college for?\nEntities:Martin Luther King Jr. with QID Q8027;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8027 p:educated_at ?y. ?y pq:academic_major ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-499",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8027 p:P69 ?y. ?y pq:P812 ?x. }"
    },
    {
        "input": "Query: where did sir ernest shackleton come from?\nEntities:Ernest Shackleton with QID Q957543;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q957543 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-500",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q957543 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what made jimi hendrix great?\nEntities:Jimi Hendrix with QID Q5928;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5928 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-501",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5928 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who did aaron rodgers play college football 4?\nEntities:Aaron Rodgers with QID Q302581;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q302581 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x. ?x wdt:instance_of/wdt:subclass_of* wd:college_sports_team. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-502",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q302581 p:P54 ?p. ?p ps:P54 ?x. ?x wdt:P31/wdt:P279* wd:Q18558301. }"
    },
    {
        "input": "Query: who plays nathan scott?\nEntities:Nathan Scott with QID Q2307951;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q2307951. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-503",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q2307951. }"
    },
    {
        "input": "Query: when did the houston rockets win the championship?\nEntities:Houston Rockets with QID Q161345; NBA Finals with QID Q842375;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q161345; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-504",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q161345; wdt:P585 ?x. }"
    },
    {
        "input": "Query: where is mount whitney?\nEntities:Mount Whitney with QID Q235539;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q235539 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-505",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q235539 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who created the character of romeo?\nEntities:Romeo with QID Q673361;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q673361 wdt:creator ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-506",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q673361 wdt:P170 ?x. }"
    },
    {
        "input": "Query: what are some places to visit in new york?\nEntities:New York City with QID Q60;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q60. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-507",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q60. }"
    },
    {
        "input": "Query: where is puntland somalia?\nEntities:Puntland with QID Q485112;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q485112 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-509",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q485112 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where did drew stanton play in college?\nEntities:Drew Stanton with QID Q1258769;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1258769 wdt:member_of_sports_team ?x. ?x wdt:instance_of/wdt:subclass_of* wd:college_sports_team. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-511",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1258769 wdt:P54 ?x. ?x wdt:P31/wdt:P279* wd:Q18558301. }"
    },
    {
        "input": "Query: what is kareem abdul jabbar real name?\nEntities:Kareem Abdul-Jabbar with QID Q179051;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q179051 wdt:name_in_native_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-512",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q179051 wdt:P1559 ?x. }"
    },
    {
        "input": "Query: what countries fall in eastern europe?\nEntities:Eastern Europe with QID Q27468;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q27468 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-513",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q27468 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what are taylor swift's albums?\nEntities:Taylor Swift with QID Q26876;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:album; wdt:performer wd:Q26876. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-514",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q482994; wdt:P175 wd:Q26876. }"
    },
    {
        "input": "Query: who is the prime minister of ethiopia now?\nEntities:prime minister with QID Q14212; Ethiopia with QID Q115;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q115 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-515",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q115 wdt:P6 ?x. }"
    },
    {
        "input": "Query: when was mary poppins made?\nEntities:Mary Poppins with QID Q209170;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q209170 wdt:publication_date ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-516",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q209170 wdt:P577 ?x. }"
    },
    {
        "input": "Query: what did king edward vi died from?\nEntities:Edward VI of England with QID Q83229;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q83229 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-517",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q83229 wdt:P509 ?x. }"
    },
    {
        "input": "Query: who did johnny bench play for?\nEntities:Johnny Bench with QID Q1155003;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1155003 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-519",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1155003 wdt:P54 ?x. }"
    },
    {
        "input": "Query: who does the islamic worship?\nEntities:Islam with QID Q432;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:worshipped_by wd:Q432. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-520",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P1049 wd:Q432. }"
    },
    {
        "input": "Query: where is napoleon buried?\nEntities:Napoleon with QID Q517;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q517 wdt:place_of_burial ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-521",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q517 wdt:P119 ?x. }"
    },
    {
        "input": "Query: what language do people speak in iceland?\nEntities:Iceland with QID Q189;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q189 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-522",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q189 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where do houston aeros play?\nEntities:Houston Aeros with QID Q503228;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q503228 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-524",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q503228 wdt:P115 ?x. }"
    },
    {
        "input": "Query: what to see and do in galway ireland?\nEntities:Galway with QID Q129610;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q129610. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-526",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q129610. }"
    },
    {
        "input": "Query: what year did brandon roy get drafted?\nEntities:Brandon Roy with QID Q313485;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q313485 p:drafted_by ?y. ?y pq:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-527",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q313485 p:P647 ?y. ?y pq:P585 ?x. }"
    },
    {
        "input": "Query: what are the names of michael jackson children?\nEntities:Michael Jackson with QID Q2831;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-528",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:P40 ?x. }"
    },
    {
        "input": "Query: what is pennsylvania's state flower called?\nEntities:Pennsylvania with QID Q1400;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1400 p:official_symbol ?y. ?y ps:official_symbol ?x; pq:object_has_role wd:flower. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-529",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1400 p:P2238 ?y. ?y ps:P2238 ?x; pq:P3831 wd:Q506. }"
    },
    {
        "input": "Query: what book did niccolo machiavelli write?\nEntities:Niccol\u00f2 Machiavelli with QID Q1399;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:written_work; wdt:author wd:Q1399. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-530",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q47461344; wdt:P50 wd:Q1399. }"
    },
    {
        "input": "Query: what religions are found in australia?\nEntities:Australia with QID Q408;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-531",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what college did drew bledsoe?\nEntities:Drew Bledsoe with QID Q927434;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q927434 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-532",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q927434 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where is the mtv headquarters?\nEntities:MTV with QID Q43359;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43359 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-533",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43359 wdt:P159 ?x. }"
    },
    {
        "input": "Query: who does michael vick play for?\nEntities:Michael Vick with QID Q505431;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q505431 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-534",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q505431 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what is guatemala current system of government?\nEntities:Guatemala with QID Q774;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q774 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-535",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q774 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what is anderson silva trained in?\nEntities:Anderson Silva with QID Q356871;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q356871 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-536",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q356871 wdt:P106 ?x. }"
    },
    {
        "input": "Query: which countries does russia border?\nEntities:Russia with QID Q159;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-538",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:P47 ?x. }"
    },
    {
        "input": "Query: what does pixar produce?\nEntities:Pixar with QID Q127552;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:production_company wd:Q127552. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-540",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P272 wd:Q127552. }"
    },
    {
        "input": "Query: what did emily dickinson die of?\nEntities:Emily Dickinson with QID Q4441;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4441 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-541",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4441 wdt:P509 ?x. }"
    },
    {
        "input": "Query: who played lois lane in superman 1?\nEntities:Superman with QID Q79015; Superman with QID Q213053; Lois Lane with QID Q845922;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q213053 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:lois_lane. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-543",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q213053 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q104841475. }"
    },
    {
        "input": "Query: what was elie wiesel's father's name?\nEntities:Elie Wiesel with QID Q18391;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q18391 wdt:father ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-544",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q18391 wdt:P22 ?x. }"
    },
    {
        "input": "Query: what language do fiji people speak?\nEntities:Fiji with QID Q712;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q712 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-546",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q712 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what victoria beckham kids names?\nEntities:Victoria Beckham with QID Q19810;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q19810 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-547",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q19810 wdt:P40 ?x. }"
    },
    {
        "input": "Query: where is new york in the map?\nEntities:New York with QID Q1384;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1384 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-548",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1384 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what did jimmy valvano die with?\nEntities:Jim Valvano with QID Q321392;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q321392 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-550",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q321392 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what teams did charles barkley?\nEntities:Charles Barkley with QID Q192707;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q192707 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-551",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q192707 wdt:P54 ?x. }"
    },
    {
        "input": "Query: when was bill clinton elected president?\nEntities:Bill Clinton with QID Q1124; President of the United States with QID Q11696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1124 p:position_held ?y. ?y ps:position_held wd:president-elect_of_the_united_states; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-552",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1124 p:P39 ?y. ?y ps:P39 wd:Q1467287; pq:P580 ?x. }"
    },
    {
        "input": "Query: where did giovanni pierluigi da palestrina live?\nEntities:Giovanni da Palestrina with QID Q179277;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q179277 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-553",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q179277 wdt:P19 ?x. }"
    },
    {
        "input": "Query: when michael jordan got drafted?\nEntities:Michael Jordan with QID Q41421;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41421 p:drafted_by ?y. ?y pq:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-555",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41421 p:P647 ?y. ?y pq:P585 ?x. }"
    },
    {
        "input": "Query: what kind of money do the philippines use?\nEntities:Philippines with QID Q928;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q928 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-556",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q928 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who played dorothy in the wizard of oz movie?\nEntities:The Wizard of Oz with QID Q193695; Dorothy Gale with QID Q111974794;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q193695 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q111974794. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-557",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q193695 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q111974794. }"
    },
    {
        "input": "Query: who does marion barber play 4?\nEntities:Marion Barber III with QID Q354761;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q354761 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-558",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q354761 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what college did james franco go to?\nEntities:James Franco with QID Q306403;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q306403 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-559",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q306403 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: how many teams are there in the ncaa football?\nEntities:National Collegiate Athletic Association with QID Q271805;",
        "output": "SELECT (COUNT(*) AS ?x) WHERE { ?p wdt:part_of+ wd:Q271805; wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-560",
        "sparql": "SELECT (COUNT(*) AS ?x) WHERE { ?p wdt:P361+ wd:Q271805; wdt:P527 ?x. }"
    },
    {
        "input": "Query: what type of currency should i take to mexico?\nEntities:Mexico with QID Q96;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q96 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-562",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q96 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what did lucille ball die of?\nEntities:Lucille Ball with QID Q209662;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q209662 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-563",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q209662 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what religion was john f kennedy?\nEntities:John F. Kennedy with QID Q9696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9696 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-564",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9696 wdt:P140 ?x. }"
    },
    {
        "input": "Query: where was the earthquake in chile 2010?\nEntities:2010 Chile earthquake with QID Q151835;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q151835 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-565",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q151835 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what style of art does andy warhol do?\nEntities:Andy Warhol with QID Q5603;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5603 wdt:movement ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-566",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5603 wdt:P135 ?x. }"
    },
    {
        "input": "Query: what movies did ron howard do?\nEntities:Ron Howard with QID Q103646;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q103646; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-567",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q103646; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what county is charlotte north carolina?\nEntities:Charlotte with QID Q16565;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16565 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-568",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16565 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what type of government and economic system does the united states have?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-569",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who is michelle obama?\nEntities:Michelle Obama with QID Q13133;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q13133 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-570",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q13133 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where did kate middleton go to prep school?\nEntities:Catherine, Princess of Wales with QID Q10479; preparatory school with QID Q4367464;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q10479 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:preparatory_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-571",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q10479 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q4367464. }"
    },
    {
        "input": "Query: what type of government does nigeria have today?\nEntities:Nigeria with QID Q1033;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-572",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what did hans oersted discovered in 1819?\nEntities:Hans Christian \u00d8rsted with QID Q44412;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q44412; wdt:time_of_discovery_or_invention ?y. FILTER((?y < \"1820-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1819-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-573",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q44412; wdt:P575 ?y. FILTER((?y < \"1820-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1819-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what is the very first harry potter book?\nEntities:Harry Potter with QID Q8337;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:part_of_the_series wd:Q8337; wdt:publication_date ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-574",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P179 wd:Q8337; wdt:P577 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: what kourtney kardashian name her daughter?\nEntities:Kourtney Kardashian with QID Q575689;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q575689 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-575",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q575689 wdt:P40 ?x. }"
    },
    {
        "input": "Query: what kind of government does chile have today?\nEntities:Chile with QID Q298;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q298 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-577",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q298 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where did richard arkwright die?\nEntities:Richard Arkwright with QID Q294153;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q294153 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-578",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q294153 wdt:P20 ?x. }"
    },
    {
        "input": "Query: who played luke skywalker in star wars episode 4?\nEntities:Luke Skywalker with QID Q51746; 4 with QID Q12100164; Star Wars: Episode IV \u2013 A New Hope with QID Q17738;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q17738 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q51746. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-579",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q17738 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q51746. }"
    },
    {
        "input": "Query: what movies has taylor lautner?\nEntities:Taylor Lautner with QID Q23359;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q23359; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-580",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q23359; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where does sam bradford play?\nEntities:Sam Bradford with QID Q714292;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q714292 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-581",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q714292 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where does the st louis rams play football?\nEntities:Los Angeles Rams with QID Q337377;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q337377 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-585",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q337377 wdt:P115 ?x. }"
    },
    {
        "input": "Query: what year did scottie pippen come into the nba?\nEntities:Scottie Pippen with QID Q193637; National Basketball Association with QID Q155223;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q193637 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?y. ?y wdt:league wd:Q155223. ?p pq:start_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-586",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q193637 p:P54 ?p. ?p ps:P54 ?y. ?y wdt:P118 wd:Q155223. ?p pq:P580 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: where are you if you re in zagreb?\nEntities:Zagreb with QID Q1435;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1435 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-587",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1435 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what city was selena gomez born in?\nEntities:Selena Gomez with QID Q83287;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q83287 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-589",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q83287 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who does dominic monaghan play in lord of the rings?\nEntities:The Lord of the Rings: The Fellowship of the Ring with QID Q127367; Dominic Monaghan with QID Q152165;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q127367 p:cast_member ?p. ?p ps:cast_member wd:Q152165; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-590",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q127367 p:P161 ?p. ?p ps:P161 wd:Q152165; pq:P453 ?x. }"
    },
    {
        "input": "Query: who sang for pink floyd?\nEntities:Pink Floyd with QID Q2306; SSQ with QID Q7393051;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2306 p:has_part(s) ?p. ?p ps:has_part(s) ?x; pq:object_has_role wd:vocalist. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-592",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2306 p:P527 ?p. ?p ps:P527 ?x; pq:P3831 wd:Q2643890. }"
    },
    {
        "input": "Query: what is the current time in nigeria lagos?\nEntities:Lagos with QID Q8673; Nigeria with QID Q1033;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8673 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-594",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8673 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what shows did henry winkler produce?\nEntities:Henry Winkler with QID Q343983;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wdt:Q5398426; wdt:creator wd:Q343983. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-595",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wdt:Q5398426; wdt:P170 wd:Q343983. }"
    },
    {
        "input": "Query: what state was texaco gas founded?\nEntities:Texaco with QID Q775060; federated state with QID Q107390;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q775060 wdt:location_of_formation ?p. ?p wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-596",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q775060 wdt:P740 ?p. ?p wdt:P131+ ?x. ?x wdt:P31 wd:Q107390. }"
    },
    {
        "input": "Query: who is the senator of connecticut 2010?\nEntities:United States of America with QID Q30; Connecticut with QID Q779;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:senator; pq:electoral_district ?w; pq:start_time ?y; pq:end_time ?z. ?w wdt:located_in_the_administrative_territorial_entity wd:Q779. FILTER((?y < \"2011-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2010-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-598",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4416090; pq:P768 ?w; pq:P580 ?y; pq:P582 ?z. ?w wdt:P131 wd:Q779. FILTER((?y < \"2011-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2010-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: when was the last time the dallas cowboys went to the super bowl?\nEntities:Super Bowl with QID Q32096; Dallas Cowboys with QID Q204862;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:participating_team wd:Q204862; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-599",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1923 wd:Q204862; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what is brazil time zone?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-601",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what do people in the czech republic speak?\nEntities:Czech Republic with QID Q213;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q213 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-603",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q213 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who was tex beneke?\nEntities:Tex Beneke with QID Q488352;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q488352 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-605",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q488352 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what are all the things thomas edison invented?\nEntities:Thomas Alva Edison with QID Q8743;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q8743. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-606",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q8743. }"
    },
    {
        "input": "Query: what does albania speak?\nEntities:Albania with QID Q222;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q222 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-607",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q222 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what is shakira's nationality?\nEntities:Shakira with QID Q34424;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34424 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-608",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34424 wdt:P27 ?x. }"
    },
    {
        "input": "Query: who is playing bilbo baggins?\nEntities:Bilbo Baggins with QID Q185737;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q185737. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-610",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q185737. }"
    },
    {
        "input": "Query: where is the 2012 ncaa basketball tournament?\nEntities:2012 NCAA Division I men's basketball tournament with QID Q2948731;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2948731 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-612",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2948731 wdt:P17 ?x. }"
    },
    {
        "input": "Query: where are the seneca indians now?\nEntities:Seneca with QID Q213422;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q213422 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-614",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q213422 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what did farrah dad do?\nEntities:Farrah Fawcett with QID Q102341;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q102341 wdt:father ?p. ?p wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-615",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q102341 wdt:P22 ?p. ?p wdt:P106 ?x. }"
    },
    {
        "input": "Query: where did matt barnes play?\nEntities:Matt Barnes with QID Q555396;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q555396 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-616",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q555396 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where does the jordan river begin?\nEntities:Jordan River with QID Q40059;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q40059 wdt:origin_of_the_watercourse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-617",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q40059 wdt:P885 ?x. }"
    },
    {
        "input": "Query: what college did lil wayne graduated from?\nEntities:Lil Wayne with QID Q15615;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q15615 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-618",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q15615 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where did rihanna come from?\nEntities:Rihanna with QID Q36844;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36844 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-619",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36844 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who does kurt busch drive for now?\nEntities:Kurt Busch with QID Q201820;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q201820 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-620",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q201820 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what years did the knicks win the championship?\nEntities:New York Knicks with QID Q131364; NBA Finals with QID Q842375;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q131364; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-621",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q131364; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what is the time zone in uk now?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-622",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what state did thomas jefferson live in?\nEntities:federated state with QID Q107390; Thomas Jefferson with QID Q11812;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11812 wdt:residence ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-624",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11812 wdt:P551 ?x. ?x wdt:P31/wdt:P279* wd:Q107390. }"
    },
    {
        "input": "Query: where are google headquarters located?\nEntities:Googleplex with QID Q694178;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q694178 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-625",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q694178 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what was richard wright known for?\nEntities:Richard Wright with QID Q319820;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q319820 wdt:notable_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-627",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q319820 wdt:P800 ?x. }"
    },
    {
        "input": "Query: where is the nascar hall of fame?\nEntities:NASCAR Hall of Fame with QID Q1443089;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1443089 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-628",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1443089 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what do australia call their money?\nEntities:Australia with QID Q408;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-629",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what was the name of wright brothers plane?\nEntities:airplane with QID Q197; Wright brothers with QID Q35820;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:airplane; wdt:developer wd:Q35820. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-630",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q197; wdt:P178 wd:Q35820. }"
    },
    {
        "input": "Query: where is located university of leeds?\nEntities:University of Leeds with QID Q503424;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q503424 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-631",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q503424 wdt:P159 ?x. }"
    },
    {
        "input": "Query: who is gilbert gottfried snl?\nEntities:Gilbert Gottfried with QID Q221464;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q221464 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-632",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q221464 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what language do they denmark?\nEntities:Denmark with QID Q35;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-633",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what did martin luther do?\nEntities:Martin Luther with QID Q9554;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9554 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-634",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9554 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what team did grover cleveland alexander play for?\nEntities:Grover Cleveland Alexander with QID Q1972390;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1972390 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-635",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1972390 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what was eli whitney nationality?\nEntities:Eli Whitney with QID Q280930;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q280930 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-636",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q280930 wdt:P27 ?x. }"
    },
    {
        "input": "Query: what was christiaan barnard famous for?\nEntities:Christiaan Barnard with QID Q188803;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q188803 wdt:notable_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-637",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q188803 wdt:P800 ?x. }"
    },
    {
        "input": "Query: where was dwight d. eisenhower from?\nEntities:Dwight D. Eisenhower with QID Q9916;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9916 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-638",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9916 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where do audi come from?\nEntities:Audi with QID Q23317;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23317 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-639",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23317 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what team is chris paul on?\nEntities:Chris Paul with QID Q46040;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q46040 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-640",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q46040 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what to do washington dc december?\nEntities:Washington, D.C. with QID Q61;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q61. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-641",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q61. }"
    },
    {
        "input": "Query: what language is spoken in singapore?\nEntities:Singapore with QID Q334;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q334 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-642",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q334 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who is sanjay gupta married too?\nEntities:Sanjay Gupta with QID Q510034;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q510034 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-643",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q510034 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what do singapore speak?\nEntities:Singapore with QID Q334;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q334 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-644",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q334 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what movies did luke perry play in?\nEntities:Luke Perry with QID Q318165;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:film; p:cast_member ?p. ?p ps:cast_member wd:Q318165. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-645",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q11424; p:P161 ?p. ?p ps:P161 wd:Q318165. }"
    },
    {
        "input": "Query: who wrote the book of st. john?\nEntities:Revelation of John with QID Q42040;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q42040 wdt:author ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-646",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q42040 wdt:P50 ?x. }"
    },
    {
        "input": "Query: who is kobe bryant dad?\nEntities:Kobe Bryant with QID Q25369;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q25369 wdt:father ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-647",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q25369 wdt:P22 ?x. }"
    },
    {
        "input": "Query: what continent does israel belong to?\nEntities:Israel with QID Q801;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-648",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what is the capital city of albania?\nEntities:Albania with QID Q222;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q222 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-649",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q222 wdt:P36 ?x. }"
    },
    {
        "input": "Query: what is wentworth miller in?\nEntities:Wentworth Miller with QID Q484662;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q484662. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-651",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q484662. }"
    },
    {
        "input": "Query: who killed harvey milk?\nEntities:Harvey Milk with QID Q17141;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q17141 wdt:killed_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-653",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q17141 wdt:P157 ?x. }"
    },
    {
        "input": "Query: what was the title of the first book dr. seuss wrote?\nEntities:Dr. Seuss with QID Q298685;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:author wd:Q298685; wdt:inception ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-654",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P50 wd:Q298685; wdt:P571 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: who owns nissan car manufacturer?\nEntities:Nissan with QID Q20165;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q20165 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-655",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q20165 wdt:P112 ?x. }"
    },
    {
        "input": "Query: where is the university of west alabama located?\nEntities:University of West Alabama with QID Q637346;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q637346 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-656",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q637346 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what did kenny everett die off?\nEntities:Kenny Everett with QID Q927532;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q927532 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-657",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q927532 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what main language do they speak in brazil?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-658",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where does joey king live?\nEntities:Joey King with QID Q112536;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q112536 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-659",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q112536 wdt:P551 ?x. }"
    },
    {
        "input": "Query: how many australian states and territories?\nEntities:",
        "output": "SELECT (COUNT(*) AS ?x) WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:state_of_australia. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-661",
        "sparql": "SELECT (COUNT(*) AS ?x) WHERE { ?x wdt:P31 wd:Q5852411. }"
    },
    {
        "input": "Query: what was manchester united first name?\nEntities:Manchester United F.C. with QID Q18656;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q18656 p:official_name ?p. ?p ps:official_name ?x; pq:start_time ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-662",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q18656 p:P1448 ?p. ?p ps:P1448 ?x; pq:P580 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: who is the governor of hawaii now?\nEntities:Governor of Hawaii with QID Q5589655;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5589655 wdt:officeholder ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-663",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5589655 wdt:P1308 ?x. }"
    },
    {
        "input": "Query: when did herbert hoover become president?\nEntities:Herbert Hoover with QID Q35236; President of the United States with QID Q11696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35236 p:position_held ?y. ?y ps:position_held wd:Q11696; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-664",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35236 p:P39 ?y. ?y ps:P39 wd:Q11696; pq:P580 ?x. }"
    },
    {
        "input": "Query: where did elvis presley started his career?\nEntities:Elvis Presley with QID Q303;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q303 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-665",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q303 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what jobs did harriet tubman have?\nEntities:Harriet Tubman with QID Q102870;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q102870 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-667",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q102870 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where does unesco operate?\nEntities:UNESCO with QID Q7809;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7809 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-668",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7809 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what does amanda seyfried play in?\nEntities:Amanda Seyfried with QID Q189226;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q189226; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-671",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q189226; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what language do people speak in iran?\nEntities:Iran with QID Q794;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-672",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what is the jurisdiction of the us supreme court?\nEntities:Supreme Court of the United States with QID Q11201;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11201 wdt:applies_to_jurisdiction ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-673",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11201 wdt:P1001 ?x. }"
    },
    {
        "input": "Query: what voice does hank azaria do on the simpsons?\nEntities:The Simpsons with QID Q886; Hank Azaria with QID Q202056;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q886 p:voice_actor ?p. ?p ps:voice_actor wd:Q202056; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-674",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q886 p:P725 ?p. ?p ps:P725 wd:Q202056; pq:P453 ?x. }"
    },
    {
        "input": "Query: who is the leader of japan?\nEntities:Japan with QID Q17;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-675",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:P6 ?x. }"
    },
    {
        "input": "Query: what time zone is the uk in right now?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-676",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what instrument does bela fleck play?\nEntities:B\u00e9la Fleck with QID Q561390; B\u00e9la Fleck and the Flecktones with QID Q749979;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q749979 p:has_part(s) ?p. ?p ps:has_part(s) ?y; pq:object_has_role ?z. ?z wdt:uses ?x. ?x wdt:subclass_of* wd:instrument. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-677",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q749979 p:P527 ?p. ?p ps:P527 ?y; pq:P3831 ?z. ?z wdt:P2283 ?x. ?x wdt:P279* wd:Q34379. }"
    },
    {
        "input": "Query: what position does ray allen?\nEntities:Ray Allen with QID Q208623;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q208623 wdt:position_played_on_team_/_speciality ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-678",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q208623 wdt:P413 ?x. }"
    },
    {
        "input": "Query: what branch is made up of the house of representatives?\nEntities:United States House of Representatives with QID Q11701;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11701 wdt:part_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-679",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11701 wdt:P361 ?x. }"
    },
    {
        "input": "Query: where did chancellorsville battle take place?\nEntities:Battle of Chancellorsville with QID Q745979;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q745979 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-681",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q745979 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what year was the cubs last world series?\nEntities:Chicago Cubs with QID Q246782;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:world_series; wdt:participating_team wd:Q246782; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-682",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1923 wd:Q246782; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: who is playing hawkeye in the avengers movie?\nEntities:Clint Barton with QID Q24026688; The Avengers with QID Q182218;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q182218 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q24026688. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-683",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q182218 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q24026688. }"
    },
    {
        "input": "Query: what country speak english as native language?\nEntities:English with QID Q1860;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q1860; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-684",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q1860; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: who was king or queen after victoria?\nEntities:Victoria with QID Q9439; United Kingdom of Great Britain and Ireland with QID Q174193;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9439 p:position_held ?p. ?p ps:position_held wd:king_or_queen; pq:replaced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-685",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9439 p:P39 ?p. ?p ps:P39 wd:Q111722535; pq:P1366 ?x. }"
    },
    {
        "input": "Query: what movie did rihanna play in?\nEntities:Rihanna with QID Q36844;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q36844; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-686",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q36844; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: when was the last time the oakland raiders were in the super bowl?\nEntities:Las Vegas Raiders with QID Q324523; Super Bowl with QID Q32096;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:participating_team wd:Q324523; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-687",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1923 wd:Q324523; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what religion was mary todd lincoln?\nEntities:Mary Todd Lincoln with QID Q215062;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q215062 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-688",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q215062 wdt:P140 ?x. }"
    },
    {
        "input": "Query: who is the house of representatives made up of?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:house_of_representative; pq:start_time ?y. } ORDER BY DESC (?y)",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-689",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q13218630; pq:P580 ?y. } ORDER BY DESC (?y)"
    },
    {
        "input": "Query: who all has jason kidd played for?\nEntities:Jason Kidd with QID Q221341;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q221341 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-690",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q221341 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where is headquarters of verizon?\nEntities:Verizon with QID Q467752;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q467752 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-691",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q467752 wdt:P159 ?x. }"
    },
    {
        "input": "Query: where is the country of cyprus located?\nEntities:Cyprus with QID Q229;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q229 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-692",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q229 wdt:P30 ?x. }"
    },
    {
        "input": "Query: who invented dell computer?\nEntities:Dell Inc. with QID Q30873;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30873 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-693",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30873 wdt:P112 ?x. }"
    },
    {
        "input": "Query: where did morgan freeman come from?\nEntities:Morgan Freeman with QID Q48337;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q48337 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-694",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q48337 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where did bob barker grow up?\nEntities:Bob Barker with QID Q381178;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q381178 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-695",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q381178 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what are king charles spaniels?\nEntities:King Charles Spaniel with QID Q38132;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38132 wdt:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-696",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38132 wdt:P279 ?x. }"
    },
    {
        "input": "Query: who played juni in spy kids 4?\nEntities:Spy Kids: All the Time in the World with QID Q550591; Spy Kids with QID Q550581; Juni Cortez with QID Q6313015;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q550591 p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q6313015. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-700",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q550591 p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q6313015. }"
    },
    {
        "input": "Query: what year did the new york mets start?\nEntities:New York Mets with QID Q692417;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q692417 wdt:inception ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-701",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q692417 wdt:P571 ?x. }"
    },
    {
        "input": "Query: where did neil gaiman grow up?\nEntities:Neil Gaiman with QID Q210059;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q210059 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-702",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q210059 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what books did aristotle wrote?\nEntities:Aristotle with QID Q868;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:written_work; wdt:author wd:Q868. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-703",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q47461344; wdt:P50 wd:Q868. }"
    },
    {
        "input": "Query: where is eu headquarters located?\nEntities:European Union with QID Q458;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q458 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-704",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q458 wdt:P159 ?x. }"
    },
    {
        "input": "Query: where did john muir die?\nEntities:John Muir with QID Q379580;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q379580 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-706",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q379580 wdt:P20 ?x. }"
    },
    {
        "input": "Query: where was selena gomez raised?\nEntities:Selena Gomez with QID Q83287;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q83287 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-707",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q83287 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what countries are in the andean region?\nEntities:Andes with QID Q5456;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5456 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-708",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5456 wdt:P17 ?x. }"
    },
    {
        "input": "Query: when was the last time the san francisco giants won a world series?\nEntities:San Francisco Giants with QID Q308966;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:world_series; wdt:winner wd:Q308966; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-710",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q308966; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what airport do you fly into for destin?\nEntities:Destin with QID Q2156427;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:airport; wdt:located_in_the_administrative_territorial_entity wd:Q2156427. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-711",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q1248784; wdt:P131 wd:Q2156427. }"
    },
    {
        "input": "Query: what country was george washington from?\nEntities:George Washington with QID Q23;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-713",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:P27 ?x. }"
    },
    {
        "input": "Query: what year did pete rose play?\nEntities:Pete Rose with QID Q739866;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q739866 wdt:work_period_(start) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-714",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q739866 wdt:P2031 ?x. }"
    },
    {
        "input": "Query: where does kyla ross live?\nEntities:Kyla Ross with QID Q602218;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q602218 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-715",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q602218 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what does jackson browne sing?\nEntities:Jackson Browne with QID Q355009;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:performer wd:Q355009. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-717",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P175 wd:Q355009. }"
    },
    {
        "input": "Query: what has anna kendrick been in?\nEntities:Anna Kendrick with QID Q67701;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q67701; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-719",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q67701; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what is the current government system in france?\nEntities:France with QID Q142;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-722",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what did roy rogers die of?\nEntities:Roy Rogers with QID Q367129;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q367129 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-723",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q367129 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what is calabria italy?\nEntities:Calabria with QID Q1458;",
        "output": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q1458 schema:description ?x. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-724",
        "sparql": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q1458 schema:description ?x. } }"
    },
    {
        "input": "Query: what are the major religions practiced in israel?\nEntities:Israel with QID Q801;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:official_religion ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-726",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:P3075 ?x. }"
    },
    {
        "input": "Query: what years did andrew jackson run for president?\nEntities:Andrew Jackson with QID Q11817; United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:united_states_presidential_election; wdt:candidate wd:Q11817; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-728",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31 wd:Q47566; wdt:P726 wd:Q11817; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what 4 countries make up great britain?\nEntities:United Kingdom with QID Q145; Great Britain with QID Q23666;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:contains_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-729",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P150 ?x. }"
    },
    {
        "input": "Query: how many languages are there in the philippines?\nEntities:Philippines with QID Q928;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q928 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-731",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q928 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who did heinrich himmler marry?\nEntities:Heinrich Himmler with QID Q43067;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43067 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-733",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43067 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who was josh groban in crazy stupid love?\nEntities:Crazy, Stupid, Love. with QID Q519490; Josh Groban with QID Q218083;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q519490 p:cast_member ?p. ?p ps:cast_member wd:Q218083; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-735",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q519490 p:P161 ?p. ?p ps:P161 wd:Q218083; pq:P453 ?x. }"
    },
    {
        "input": "Query: where is the columbia university located?\nEntities:Columbia University with QID Q49088;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q49088 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-736",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q49088 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what team does kris humphries play for in 2011?\nEntities:Kris Humphries with QID Q363421;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q363421 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-737",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q363421 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what did the scientist thomson discover?\nEntities:J. J. Thomson with QID Q47285;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q47285. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-738",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q47285. }"
    },
    {
        "input": "Query: where did john boehner come from?\nEntities:John Boehner with QID Q11702;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11702 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-739",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11702 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where did martin luther king junior go to college?\nEntities:Martin Luther King Jr. with QID Q8027;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8027 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-740",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8027 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: who was carrie underwood in soul surfer?\nEntities:Carrie Underwood with QID Q215546; Soul Surfer with QID Q1156089;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1156089 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q215546. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-741",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1156089 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q215546. }"
    },
    {
        "input": "Query: who plays lois griffin in family guy?\nEntities:Family Guy with QID Q5930; Lois Griffin with QID Q853073;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q853073. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-742",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q853073. }"
    },
    {
        "input": "Query: what did julian fellowes write?\nEntities:Julian Fellowes with QID Q336018;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:creator wd:Q336018. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-743",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P170 wd:Q336018. }"
    },
    {
        "input": "Query: where does selena gomez live map?\nEntities:Selena Gomez with QID Q83287;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q83287 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-744",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q83287 wdt:P551 ?x. }"
    },
    {
        "input": "Query: who does the islam worship?\nEntities:Islam with QID Q432;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:worshipped_by wd:Q432. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-745",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P1049 wd:Q432. }"
    },
    {
        "input": "Query: who was married to lance armstrong?\nEntities:Lance Armstrong with QID Q2172;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2172 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-746",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2172 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what is venus named for?\nEntities:Venus with QID Q313;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q313 wdt:named_after ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-747",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q313 wdt:P138 ?x. }"
    },
    {
        "input": "Query: what years have the dodgers won the world series?\nEntities:World Series with QID Q265538; Los Angeles Dodgers with QID Q334634;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:winner wd:Q334634; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-750",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q334634; wdt:P585 ?x. }"
    },
    {
        "input": "Query: who was the leader of the soviet union in 1945?\nEntities:Soviet Union with QID Q15180;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q15180 p:head_of_government ?p. ?p ps:head_of_government ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"1946-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1945-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-752",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q15180 p:P6 ?p. ?p ps:P6 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"1946-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1945-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who does john beck play for?\nEntities:John Beck with QID Q6221292;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6221292 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-753",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6221292 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what god do catholics believe in?\nEntities:",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:worshipped_by wd:catholics. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-754",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P1049 wd:Q1841. }"
    },
    {
        "input": "Query: where did robbie hummel go to high school?\nEntities:Robbie Hummel with QID Q1571580;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1571580 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-756",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1571580 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: what year did the cleveland indians go to the world series?\nEntities:Cleveland Guardians with QID Q642553; World Series with QID Q265538;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:participating_team wd:Q642553; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-757",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1923 wd:Q642553; wdt:P585 ?x. }"
    },
    {
        "input": "Query: who owns the cleveland browns?\nEntities:Cleveland Browns with QID Q223527;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q223527 wdt:owned_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-758",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q223527 wdt:P127 ?x. }"
    },
    {
        "input": "Query: what language do jewish speak?\nEntities:Jewish people with QID Q7325;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7325 wdt:native_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-759",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7325 wdt:P103 ?x. }"
    },
    {
        "input": "Query: who does danneel harris play on one tree hill?\nEntities:Danneel Ackles with QID Q230176; One Tree Hill with QID Q203385;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q203385 p:cast_member ?p. ?p ps:cast_member wd:Q230176; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-761",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q203385 p:P161 ?p. ?p ps:P161 wd:Q230176; pq:P453 ?x. }"
    },
    {
        "input": "Query: what inspired michelangelo?\nEntities:Michelangelo with QID Q5592;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5592 wdt:influenced_by|wdt:student_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-762",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5592 wdt:P737|wdt:P1066 ?x. }"
    },
    {
        "input": "Query: what airport is closer to downtown houston?\nEntities:Houston with QID Q16555;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:airport; wdt:located_in_the_administrative_territorial_entity wd:Q16555. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-765",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q1248784; wdt:P131 wd:Q16555. }"
    },
    {
        "input": "Query: where does liz mcclarnon live?\nEntities:Liz McClarnon with QID Q258010;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q258010 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-766",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q258010 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what city is fc schalke 04 in?\nEntities:FC Schalke 04 with QID Q32494;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q32494 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-767",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q32494 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what system of government is used in south korea?\nEntities:South Korea with QID Q884;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q884 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-768",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q884 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where did giovanni da verrazano come from?\nEntities:Giovanni da Verrazzano with QID Q147676;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q147676 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-769",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q147676 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what was omar epps first movie?\nEntities:Omar Epps with QID Q297334;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:cast_member ?p. ?p ps:cast_member wd:Q297334. ?x wdt:publication_date ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-771",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P161 ?p. ?p ps:P161 wd:Q297334. ?x wdt:P577 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: who did the baltimore ravens draft in 2011?\nEntities:Baltimore Ravens with QID Q276539;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:drafted_by ?p. ?p ps:drafted_by wd:Q276539; pq:point_in_time ?y. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-772",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P647 ?p. ?p ps:P647 wd:Q276539; pq:P585 ?y. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who won the governor election in puerto rico?\nEntities:Puerto Rico with QID Q1183; governor with QID Q132050;",
        "output": "SELECT DISTINCT ?x WHERE { wd:governor_election_in_puerto_rico wdt:officeholder ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-773",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q456951 wdt:P1308 ?x. }"
    },
    {
        "input": "Query: what group is aubrey o'day in?\nEntities:Aubrey O'Day with QID Q2724748;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:has_part(s) wd:Q2724748. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-775",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P527 wd:Q2724748. }"
    },
    {
        "input": "Query: what college did joe namath go to?\nEntities:Joe Namath with QID Q720558;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q720558 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-776",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q720558 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: who invented arabic alphabet?\nEntities:Arabic alphabet with QID Q8196;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8196 wdt:based_on ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-780",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8196 wdt:P144 ?x. }"
    },
    {
        "input": "Query: where was president lyndon johnson from?\nEntities:Lyndon B. Johnson with QID Q9640;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9640 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-781",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9640 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what did wagner compose?\nEntities:Richard Wagner with QID Q1511;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:composer wd:Q1511. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-782",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P86 wd:Q1511. }"
    },
    {
        "input": "Query: what language did jewish people speak?\nEntities:Jewish people with QID Q7325;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7325 wdt:native_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-783",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7325 wdt:P103 ?x. }"
    },
    {
        "input": "Query: who does michael oher play for in 2009?\nEntities:Michael Oher with QID Q977601;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q977601 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2010-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2009-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-784",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q977601 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2010-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2009-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what years did barry bonds play?\nEntities:Barry Bonds with QID Q314712;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q314712 wdt:participant_in ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-785",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q314712 wdt:P1344 ?x. }"
    },
    {
        "input": "Query: who played emma frost?\nEntities:Emma Frost with QID Q1995969;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q1995969. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-786",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q1995969. }"
    },
    {
        "input": "Query: what clubs has peter crouch played for?\nEntities:Peter Crouch with QID Q180939;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q180939 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-788",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q180939 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what team does lamar odom play for 2011?\nEntities:Lamar Odom with QID Q296403;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q296403 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-790",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q296403 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who owns skywest?\nEntities:SkyWest Airlines with QID Q773662;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q773662 wdt:parent_organization ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-792",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q773662 wdt:P749 ?x. }"
    },
    {
        "input": "Query: who did michael jordan marry?\nEntities:Michael Jordan with QID Q41421;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41421 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-793",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41421 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where is the syracuse university?\nEntities:Syracuse University with QID Q617433;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q617433 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-794",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q617433 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what has mario lopez been in?\nEntities:Mario Lopez with QID Q372559;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q372559; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-795",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q372559; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where do logan browning live?\nEntities:Logan Browning with QID Q1965719;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1965719 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-796",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1965719 wdt:P551 ?x. }"
    },
    {
        "input": "Query: when did mcdonalds officially open?\nEntities:McDonald\u2019s with QID Q38076;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38076 wdt:inception ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-797",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38076 wdt:P571 ?x. }"
    },
    {
        "input": "Query: where is lake waynoka ohio?\nEntities:",
        "output": "SELECT DISTINCT ?x WHERE { wd:lake_waynoka_ohio wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-800",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q111977403 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who did jeremy lin sign with?\nEntities:Jeremy Lin with QID Q309590;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q309590 wdt:member_of_sports_team ?x. } ",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-801",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q309590 wdt:P54 ?x. } "
    },
    {
        "input": "Query: who played emperor palpatine?\nEntities:Palpatine with QID Q51770;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q51770. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-804",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q51770. }"
    },
    {
        "input": "Query: where are the pyramids of giza located?\nEntities:",
        "output": "SELECT DISTINCT ?x WHERE { wd:pyramids_of_giza wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-806",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q13217298 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who were demeter's brothers and sisters?\nEntities:Demeter with QID Q40730;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q40730 wdt:sibling ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-808",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q40730 wdt:P3373 ?x. }"
    },
    {
        "input": "Query: what instrument was louis armstrong famous for?\nEntities:Louis Armstrong with QID Q1779;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1779 wdt:instrument ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-809",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1779 wdt:P1303 ?x. }"
    },
    {
        "input": "Query: what date did the san francisco giants win the world series?\nEntities:World Series with QID Q265538; San Francisco Giants with QID Q308966;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:winner wd:Q308966; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-810",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q308966; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what province is canada's capital located in?\nEntities:Canada with QID Q16;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:capital ?y. ?y wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:province. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-811",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:P36 ?y. ?y wdt:P131+ ?x. ?x wdt:P31/wdt:P279* wd:Q34876. }"
    },
    {
        "input": "Query: on which continent is the usa located?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-812",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P30 ?x. }"
    },
    {
        "input": "Query: where is singapore on a world map?\nEntities:Singapore with QID Q334;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q334 wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-813",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q334 wdt:P625 ?x. }"
    },
    {
        "input": "Query: what is the main language of israel?\nEntities:Israel with QID Q801;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-815",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what college did kerry collins?\nEntities:Kerry Collins with QID Q3195497;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3195497 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-816",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3195497 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what did bob ross die of?\nEntities:Bob Ross with QID Q455511;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q455511 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-817",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q455511 wdt:P509 ?x. }"
    },
    {
        "input": "Query: where did martin luther live in?\nEntities:Martin Luther with QID Q9554;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9554 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-819",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9554 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what are all the songs nicki minaj is in?\nEntities:Quincy Jones with QID Q193645; Nicki Minaj with QID Q162202;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:performer wd:Q162202. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-821",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P175 wd:Q162202. }"
    },
    {
        "input": "Query: what groups was hitler involved in?\nEntities:Adolf Hitler with QID Q352;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q352 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-822",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q352 wdt:P102 ?x. }"
    },
    {
        "input": "Query: what college did magic johnson go to?\nEntities:Magic Johnson with QID Q134183;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q134183 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-823",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q134183 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what kind of language do they speak in greece?\nEntities:Greece with QID Q41;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-824",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what to see in chicago downtown?\nEntities:Chicago with QID Q1297;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q1297. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-825",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q1297. }"
    },
    {
        "input": "Query: what kind of money does the philippines use?\nEntities:Philippines with QID Q928;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q928 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-826",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q928 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what did george eastman make?\nEntities:George Eastman with QID Q189147;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q189147. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-827",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q189147. }"
    },
    {
        "input": "Query: what movies has billy burke been in?\nEntities:Billy Burke with QID Q325020;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q325020; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-828",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q325020; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: who was rudolf virchow?\nEntities:Rudolf Virchow with QID Q76432;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76432 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-829",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76432 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what is the last movie brittany murphy made?\nEntities:Brittany Murphy with QID Q168847;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:film; wdt:publication_date ?y; p:cast_member ?p. ?p ps:cast_member wd:Q168847. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-831",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q11424; wdt:P577 ?y; p:P161 ?p. ?p ps:P161 wd:Q168847. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: what kind of language do they speak in china?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-833",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what office does hillary clinton hold?\nEntities:Hillary Clinton with QID Q6294;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6294 wdt:position_held ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-834",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6294 wdt:P39 ?x. }"
    },
    {
        "input": "Query: what are the major religions in uk?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-836",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P140 ?x. }"
    },
    {
        "input": "Query: where did jennifer hudson go to school?\nEntities:Jennifer Hudson with QID Q192410;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q192410 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-837",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q192410 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what type of guitar does john mayer play?\nEntities:guitar with QID Q6607; John Mayer with QID Q215215;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:subclass_of* wd:Q6607; wdt:used_by wd:Q215215. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-838",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P279* wd:Q6607; wdt:P1535 wd:Q215215. }"
    },
    {
        "input": "Query: when did toronto blue jays become a team?\nEntities:Toronto Blue Jays with QID Q650829;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q650829 wdt:inception ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-839",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q650829 wdt:P571 ?x. }"
    },
    {
        "input": "Query: what is the zip code for moorpark ca?\nEntities:Moorpark with QID Q983829;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q983829 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-840",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q983829 wdt:P281 ?x. }"
    },
    {
        "input": "Query: what continent is the usa located in?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-841",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what is the currency of spain called?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-842",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P38 ?x. }"
    },
    {
        "input": "Query: which country is to the north of the united states of america?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 p:shares_border_with ?p. ?p ps:shares_border_with ?x; pq:direction wd:north. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-843",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 p:P47 ?p. ?p ps:P47 ?x; pq:P560 wd:Q659. }"
    },
    {
        "input": "Query: what 3 states border the pacific ocean?\nEntities:Pacific Ocean with QID Q98;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:located_in_or_next_to_body_of_water wd:Q98; wdt:instance_of/wdt:subclass_of* wd:federated_state. } LIMIT 3",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-844",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P206 wd:Q98; wdt:P31 wd:Q107390. } LIMIT 3"
    },
    {
        "input": "Query: what did mozart do to become famous?\nEntities:Wolfgang Amadeus Mozart with QID Q254;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q254 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-845",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q254 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where was avril lavigne born?\nEntities:Avril Lavigne with QID Q30449;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30449 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-846",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30449 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what are the 3 official languages of spain?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-847",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what type of government does australia currently have?\nEntities:Australia with QID Q408;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-848",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:P122 ?x. }"
    },
    {
        "input": "Query: which countries do germany border?\nEntities:Germany with QID Q183;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q183 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-849",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q183 wdt:P47 ?x. }"
    },
    {
        "input": "Query: what county is tampa located in?\nEntities:Tampa with QID Q49255;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q49255 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-850",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q49255 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who has coached the minnesota vikings?\nEntities:Minnesota Vikings with QID Q221150;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q221150 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-851",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q221150 wdt:P286 ?x. }"
    },
    {
        "input": "Query: what movies have queen latifah played in?\nEntities:Queen Latifah with QID Q1112005;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q1112005; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-852",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q1112005; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where are they now jessica mcclure?\nEntities:Jessica McClure with QID Q2063360;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2063360 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-854",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2063360 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what year did tim duncan enter the nba?\nEntities:National Basketball Association with QID Q155223; Tim Duncan with QID Q193020;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q193020 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?y. ?y wdt:league wd:Q155223. ?p pq:start_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-855",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q193020 p:P54 ?p. ?p ps:P54 ?y. ?y wdt:P118 wd:Q155223. ?p pq:P580 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: who played alf on the tv show?\nEntities:ALF with QID Q8964731;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:television_program; p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q8964731. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-856",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31/wdt:P279* wd:Q15416; p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q8964731. }"
    },
    {
        "input": "Query: who was the vice president when bill clinton was in office?\nEntities:Bill Clinton with QID Q1124; President of the United States with QID Q11696; Vice President of the United States with QID Q11699;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:Q11699; pq:start_time ?y. wd:Q1124 p:position_held ?q. ?q ps:position_held wd:Q11696; pq:start_time ?z. FILTER(?y = ?z) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-857",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q11699; pq:P580 ?y. wd:Q1124 p:P39 ?q. ?q ps:P39 wd:Q11696; pq:P580 ?z. FILTER(?y = ?z) }"
    },
    {
        "input": "Query: what other cars does gm make?\nEntities:General Motors with QID Q81965;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q81965 wdt:has_subsidiary ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-860",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q81965 wdt:P355 ?x. }"
    },
    {
        "input": "Query: what movies does leo howard play in?\nEntities:Leo Howard with QID Q776957;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q776957; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-862",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q776957; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what instruments does john williams use?\nEntities:John Williams with QID Q370293;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q370293 wdt:instrument ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-863",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q370293 wdt:P1303 ?x. }"
    },
    {
        "input": "Query: who does messi play with?\nEntities:Lionel Messi with QID Q615;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q615 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-864",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q615 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what is the language spoken in brazil?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-865",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who was johnny cash's first wife?\nEntities:Johnny Cash with QID Q42775;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q42775 p:spouse ?p. ?p ps:spouse ?x; pq:start_time ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-866",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q42775 p:P26 ?p. ?p ps:P26 ?x; pq:P580 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: what a city in montana?\nEntities:Montana with QID Q1212;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:city; wdt:located_in_the_administrative_territorial_entity+ wd:Q1212. } LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-868",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q515; wdt:P131+ wd:Q1212. } LIMIT 1"
    },
    {
        "input": "Query: what timezone is toronto canada?\nEntities:Toronto with QID Q172;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q172 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-869",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q172 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what type of political system does russia have?\nEntities:Russia with QID Q159;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-871",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what is the political system in egypt?\nEntities:Egypt with QID Q79; Idaho with QID Q1221;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-872",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what team chris paul play for?\nEntities:Chris Paul with QID Q46040;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q46040 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-876",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q46040 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what currency should i take to jamaica?\nEntities:Jamaica with QID Q766;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-877",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what is illinois state bird?\nEntities:Illinois with QID Q1204;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1204 p:official_symbol ?p. ?p ps:official_symbol ?x; pq:object_has_role wd:bird. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-878",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1204 p:P2238 ?p. ?p ps:P2238 ?x; pq:P3831 wd:Q5113. }"
    },
    {
        "input": "Query: what language do u speak in egypt?\nEntities:Egypt with QID Q79;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-882",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what teams has lionel messi played for?\nEntities:Lionel Messi with QID Q615;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q615 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-883",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q615 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what countries in north america continent?\nEntities:North America with QID Q49;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q49 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-884",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q49 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what time zone is colorado springs co?\nEntities:Colorado Springs with QID Q49258;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q49258 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-885",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q49258 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what school did sergio romo go to?\nEntities:Sergio Romo with QID Q3041597;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3041597 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-886",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3041597 wdt:P69 ?x. }"
    },
    {
        "input": "Query: who did adam sandler married?\nEntities:Adam Sandler with QID Q132952;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q132952 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-887",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q132952 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who play luke skywalker?\nEntities:Luke Skywalker with QID Q51746;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q51746. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-889",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q51746. }"
    },
    {
        "input": "Query: where did john howard live?\nEntities:John Howard with QID Q51330;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q51330 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-891",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q51330 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what music did beethoven composed?\nEntities:Ludwig van Beethoven with QID Q255;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:musical_work_composition; wdt:composer wd:Q255. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-892",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q105543609; wdt:P86 wd:Q255. }"
    },
    {
        "input": "Query: what inspired scott fitzgerald?\nEntities:F. Scott Fitzgerald with QID Q93354;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q93354 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-894",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q93354 wdt:P737 ?x. }"
    },
    {
        "input": "Query: what did george steinbrenner do?\nEntities:George Steinbrenner with QID Q220210;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q220210 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-895",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q220210 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what influenced langston hughes to write?\nEntities:Langston Hughes with QID Q188093;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q188093 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-897",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q188093 wdt:P737 ?x. }"
    },
    {
        "input": "Query: where did pablo picasso die?\nEntities:Pablo Picasso with QID Q5593;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5593 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-898",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5593 wdt:P20 ?x. }"
    },
    {
        "input": "Query: who was judy collins married to?\nEntities:Judy Collins with QID Q254576;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q254576 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-901",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q254576 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what do they speak in cambodia?\nEntities:Cambodia with QID Q424;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q424 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-903",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q424 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what kind of insurance does geico offer?\nEntities:GEICO with QID Q1498689;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1498689 wdt:product_or_material_produced ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-904",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1498689 wdt:P1056 ?x. }"
    },
    {
        "input": "Query: who is the prime minister of new zealand now?\nEntities:New Zealand with QID Q664;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q664 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-905",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q664 wdt:P6 ?x. }"
    },
    {
        "input": "Query: what time is nebraska now?\nEntities:Nebraska with QID Q1553;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1553 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-906",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1553 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what did nick carter sister died of?\nEntities:Nick Carter with QID Q214466;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q214466 wdt:sibling ?p. ?p wdt:sex_or_gender wd:female; wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-907",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q214466 wdt:P3373 ?p. ?p wdt:P21 wd:Q6581072; wdt:P509 ?x. }"
    },
    {
        "input": "Query: who is james dean?\nEntities:James Dean with QID Q83359;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q83359 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-908",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q83359 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where did bob dylan live?\nEntities:Bob Dylan with QID Q392;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q392 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-909",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q392 wdt:P551 ?x. }"
    },
    {
        "input": "Query: where did pres. obama go to school?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-911",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P69 ?x. }"
    },
    {
        "input": "Query: who is nina dobrev playing in perks of being a wallflower?\nEntities:The Perks of Being a Wallflower with QID Q675468; Nina Dobrev with QID Q183439;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q675468 p:cast_member ?p. ?p ps:cast_member wd:Q183439; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-912",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q675468 p:P161 ?p. ?p ps:P161 wd:Q183439; pq:P453 ?x. }"
    },
    {
        "input": "Query: what is there to see in barcelona?\nEntities:Barcelona with QID Q1492;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q1492. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-914",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q1492. }"
    },
    {
        "input": "Query: who is larry ellison oracle?\nEntities:Larry Ellison with QID Q92759;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q92759 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-915",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q92759 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what is the zip code for fort stockton texas?\nEntities:Fort Stockton with QID Q979901;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q979901 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-916",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q979901 wdt:P281 ?x. }"
    },
    {
        "input": "Query: what teams drafted the morris twins?\nEntities:Markieff Morris with QID Q2629179;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2629179 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-917",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2629179 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: what state does obama come from?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 p:place_of_birth ?p. ?p ps:place_of_birth ?y; pq:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-918",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 p:P19 ?p. ?p ps:P19 ?y; pq:P131 ?x. }"
    },
    {
        "input": "Query: who does tim howard play for club?\nEntities:Tim Howard with QID Q200785;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q200785 wdt:member_of_sports_team ?x. ?x wdt:instance_of/wdt:subclass_of* wd:sports_club. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-919",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q200785 wdt:P54 ?x. ?x wdt:P31/wdt:P279* wd:Q847017. }"
    },
    {
        "input": "Query: what did egyptians speak?\nEntities:Egypt with QID Q79;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-920",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what is vanderbilt's mascot?\nEntities:Milwaukee Brewers with QID Q848103;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q848103 wdt:mascot ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-921",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q848103 wdt:P822 ?x. }"
    },
    {
        "input": "Query: what did whitney houston die off?\nEntities:Whitney Houston with QID Q34389;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34389 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-922",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34389 wdt:P509 ?x. }"
    },
    {
        "input": "Query: when was george w bush sworn in?\nEntities:President of the United States with QID Q11696; George W. Bush with QID Q207;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q207 p:position_held ?y. ?y ps:position_held wd:Q11696; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-923",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q207 p:P39 ?y. ?y ps:P39 wd:Q11696; pq:P580 ?x. }"
    },
    {
        "input": "Query: what middle school did barack obama attend?\nEntities:middle school with QID Q149566; Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { { wd:Q76 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:middle_school. } UNION { wd:Q76 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:secondary_school. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-924",
        "sparql": "SELECT DISTINCT ?x WHERE { { wd:Q76 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q149566. } UNION { wd:Q76 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q159334. } }"
    },
    {
        "input": "Query: what are the airports in chicago?\nEntities:airport with QID Q1248784; Chicago with QID Q1297;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:airport; wdt:located_in_the_administrative_territorial_entity wd:Q1297. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-925",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q1248784; wdt:P131 wd:Q1297. }"
    },
    {
        "input": "Query: what was van gogh famous for?\nEntities:Vincent van Gogh with QID Q5582;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5582 wdt:notable_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-926",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5582 wdt:P800 ?x. }"
    },
    {
        "input": "Query: where did jane goodall go to school?\nEntities:Jane Goodall with QID Q184746;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q184746 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-927",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q184746 wdt:P69 ?x. }"
    },
    {
        "input": "Query: who won 2012 presidential election in france?\nEntities:France with QID Q142; 2012 French presidential election with QID Q487666;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q487666 wdt:successful_candidate ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-928",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q487666 wdt:P991 ?x. }"
    },
    {
        "input": "Query: what does donald trump own?\nEntities:Donald Trump with QID Q22686;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q22686 wdt:owner_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-929",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q22686 wdt:P1830 ?x. }"
    },
    {
        "input": "Query: where did emily murphy go to school?\nEntities:Emily Murphy with QID Q439355;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q439355 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-931",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q439355 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what are the major religions in russia?\nEntities:Russia with QID Q159;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:official_religion ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-932",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:P3075 ?x. }"
    },
    {
        "input": "Query: what do most nigerians speak?\nEntities:Nigeria with QID Q1033;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-933",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who was the general for the british in the revolutionary war?\nEntities:Great Britain with QID Q161885; American Revolutionary War with QID Q40949;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:conflict wd:Q40949; wdt:country_of_citizenship wd:Q161885; wdt:military_rank wd:general. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-934",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P607 wd:Q40949; wdt:P27 wd:Q161885; wdt:P410 wd:Q83460. }"
    },
    {
        "input": "Query: where president nixon was born?\nEntities:Richard Nixon with QID Q9588;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9588 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-936",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9588 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what currency does thailand accept?\nEntities:Thailand with QID Q869;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-937",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what else did eli whitney invent?\nEntities:Eli Whitney with QID Q280930;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q280930. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-938",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q280930. }"
    },
    {
        "input": "Query: who founded collegehumor?\nEntities:CollegeHumor with QID Q4036407;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4036407 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-939",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4036407 wdt:P112 ?x. }"
    },
    {
        "input": "Query: where did barack obama attend school?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-940",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what jobs did albert einstein have?\nEntities:Albert Einstein with QID Q937;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q937 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-941",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q937 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where to travel around sydney?\nEntities:Sydney with QID Q3130;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q3130. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-942",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q3130. }"
    },
    {
        "input": "Query: what are the names of michael jackson movies?\nEntities:Michael Jackson with QID Q2831;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q2831; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-943",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q2831; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what are the islands of oceania?\nEntities:Oceania with QID Q55643; Pacific Islands with QID Q844857;",
        "output": "SELECT DISTINCT ?x WHERE { wd:islands_of_oceania wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-944",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q538 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what timezone is illinois on?\nEntities:Illinois with QID Q1204;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1204 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-945",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1204 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what is the currency in france?\nEntities:France with QID Q142;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-946",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where is the head office of hsbc bank?\nEntities:HSBC with QID Q190464;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q190464 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-947",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q190464 wdt:P159 ?x. }"
    },
    {
        "input": "Query: where was martin cooper from?\nEntities:Martin Cooper with QID Q319383;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q319383 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-949",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q319383 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where is spain exactly located?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-950",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what is the currency name of china?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-951",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what movies did charlie hunnam play in?\nEntities:Charlie Hunnam with QID Q356294;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q356294; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-952",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q356294; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what kind of government does italy have?\nEntities:Italy with QID Q38;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-953",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what medium is the school of athens?\nEntities:School of Athens with QID Q186953;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q186953 wdt:made_from_material ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-954",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q186953 wdt:P186 ?x. }"
    },
    {
        "input": "Query: what year michael jordan came in the nba?\nEntities:Michael Jordan with QID Q41421; National Basketball Association with QID Q155223;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41421 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?y. ?y wdt:league wd:Q155223. ?p pq:start_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-955",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41421 p:P54 ?p. ?p ps:P54 ?y. ?y wdt:P118 wd:Q155223. ?p pq:P580 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: what year did florida marlins win the world series?\nEntities:World Series with QID Q265538; Miami Marlins with QID Q652879;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:winner wd:Q652879; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-956",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q652879; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what movie did marlee matlin won an academy award for?\nEntities:Marlee Matlin with QID Q213287; Academy Awards with QID Q19020;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q213287 p:award_received ?p. ?p ps:award_received ?z; pq:statement_is_subject_of ?y; pq:for_work ?x. ?y wdt:instance_of/wdt:subclass_of* wd:academy_awards_ceremony. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-957",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q213287 p:P166 ?p. ?p ps:P166 ?z; pq:P805 ?y; pq:P1686 ?x. ?y wdt:P31 wd:Q16913666. }"
    },
    {
        "input": "Query: who is leann rimes with now?\nEntities:LeAnn Rimes with QID Q120533;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q120533 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-958",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q120533 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who is the current leader of china today?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-959",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P6 ?x. }"
    },
    {
        "input": "Query: where north dakota located?\nEntities:North Dakota with QID Q1207;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1207 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-960",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1207 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what countries did queen elizabeth ii rule?\nEntities:Elizabeth II with QID Q9682;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9682 wdt:position_held ?y. ?y wdt:applies_to_jurisdiction ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-961",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9682 wdt:P39 ?y. ?y wdt:P1001 ?x. }"
    },
    {
        "input": "Query: where was the battle of vicksburg held?\nEntities:Siege of Vicksburg with QID Q1066253;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1066253 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-963",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1066253 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what kind of artist is henri matisse?\nEntities:Henri Matisse with QID Q5589;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5589 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-964",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5589 wdt:P136 ?x. }"
    },
    {
        "input": "Query: who is the head coach of the tennessee titans?\nEntities:Tennessee Titans with QID Q320484;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q320484 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-969",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q320484 wdt:P286 ?x. }"
    },
    {
        "input": "Query: what type of government does fiji have?\nEntities:Fiji with QID Q712;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q712 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-970",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q712 wdt:P122 ?x. }"
    },
    {
        "input": "Query: in what state did the bloody battle of antietam take place?\nEntities:Battle of Antietam with QID Q719252; federated state with QID Q107390;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q719252 wdt:location ?p. ?p wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-971",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q719252 wdt:P276 ?p. ?p wdt:P131+ ?x. ?x wdt:P31 wd:Q107390. }"
    },
    {
        "input": "Query: who was dan cody?\nEntities:Dan Cody with QID Q5213273;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5213273 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-973",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5213273 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what language do people speak in turkey?\nEntities:Turkey with QID Q43;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-974",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what are all the inventions benjamin franklin made?\nEntities:Benjamin Franklin with QID Q34969;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q34969. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-975",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q34969. }"
    },
    {
        "input": "Query: what was wrong with joan crawford?\nEntities:Joan Crawford with QID Q40475;",
        "output": "SELECT DISTINCT ?x WHERE { wd:40475 wdt:medical_condition ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-976",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:40475 wdt:P1050 ?x. }"
    },
    {
        "input": "Query: what country was anton van leeuwenhoek from?\nEntities:Antoni van Leeuwenhoek with QID Q43522;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43522 wdt:place_of_birth ?p. ?p wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-978",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43522 wdt:P19 ?p. ?p wdt:P17 ?x. }"
    },
    {
        "input": "Query: who played todd manning on one life to live?\nEntities:Todd Manning with QID Q7812516; One Life to Live with QID Q624611;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q624611 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q7812516. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-980",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q624611 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q7812516. }"
    },
    {
        "input": "Query: what does latin america consist of?\nEntities:Latin America with QID Q12585;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q12585 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-981",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q12585 wdt:P527 ?x. }"
    },
    {
        "input": "Query: who is the manager of the st louis cardinals?\nEntities:St. Louis Cardinals with QID Q504309;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q504309 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-982",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q504309 wdt:P286 ?x. }"
    },
    {
        "input": "Query: where in oregon was stand by me filmed?\nEntities:Oregon with QID Q824; Stand by Me with QID Q494722;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q494722 wdt:filming_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-983",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q494722 wdt:P915 ?x. }"
    },
    {
        "input": "Query: what did writers of the harlem renaissance write about?\nEntities:Harlem Renaissance with QID Q829895;",
        "output": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q829895 schema:description ?x. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-985",
        "sparql": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q829895 schema:description ?x. } }"
    },
    {
        "input": "Query: what is the language they speak in jamaica?\nEntities:Jamaica with QID Q766;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-986",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where did prophet daniel died?\nEntities:Daniel with QID Q171724;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q171724 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-989",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q171724 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what state was theodore roosevelt from?\nEntities:Theodore Roosevelt with QID Q33866; federated state with QID Q107390;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q33866 p:place_of_birth ?p. ?p ps:place_of_birth ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-990",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q33866 p:P19 ?p. ?p ps:P19 ?x. ?x wdt:P31 wd:Q107390. }"
    },
    {
        "input": "Query: what form of government does brazil have?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-992",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where did lebron james go to highschool?\nEntities:LeBron James with QID Q36159; school with QID Q3914;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36159 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-993",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36159 wdt:P69 ?x. }"
    },
    {
        "input": "Query: where was toussaint l'ouverture from?\nEntities:Toussaint Louverture with QID Q205783;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q205783 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-994",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q205783 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where do the fla marlins play?\nEntities:Miami Marlins with QID Q652879;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q652879 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-995",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q652879 wdt:P115 ?x. }"
    },
    {
        "input": "Query: what type of art does wassily kandinsky do?\nEntities:Wassily Kandinsky with QID Q61064;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q61064 wdt:field_of_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-996",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q61064 wdt:P101 ?x. }"
    },
    {
        "input": "Query: who won london mayoral elections 2012?\nEntities:London mayoral election with QID Q6671135; Mayor of London with QID Q38931;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38931 p:officeholder ?p. ?p ps:officeholder ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-997",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38931 p:P1308 ?p. ?p ps:P1308 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who was arthur miller father?\nEntities:Arthur Miller with QID Q80596;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q80596 wdt:father ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-998",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q80596 wdt:P22 ?x. }"
    },
    {
        "input": "Query: what influenced william morris to be an artist?\nEntities:William Morris with QID Q182589;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q182589 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-999",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q182589 wdt:P737 ?x. }"
    },
    {
        "input": "Query: what super bowls have the giants won?\nEntities:New York Giants with QID Q190618; Super Bowl with QID Q32096;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:participating_team wd:Q190618. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1001",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q32096; wdt:P1923 wd:Q190618. }"
    },
    {
        "input": "Query: where was rod stewart born?\nEntities:Rod Stewart with QID Q182655;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q182655 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1002",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q182655 wdt:P19 ?x. }"
    },
    {
        "input": "Query: which country uses euro as its main currency?\nEntities:euro with QID Q4916;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:currency wd:Q4916; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1004",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P38 wd:Q4916; wdt:P31 wd:Q6256. }"
    },
    {
        "input": "Query: who is ruling tunisia now?\nEntities:Tunisia with QID Q948;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q948 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1005",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q948 wdt:P6 ?x. }"
    },
    {
        "input": "Query: who played eowyn in the lord of the rings movies?\nEntities:The Lord of the Rings: The Fellowship of the Ring with QID Q127367; \u00c9owyn with QID Q716565;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q716565. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1006",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q716565. }"
    },
    {
        "input": "Query: what important office did abraham lincoln hold?\nEntities:Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:position_held ?x. ?x wdt:instance_of/wdt:subclass_of* wd:public_office. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1008",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:P39 ?x. ?x wdt:P31/wdt:P279* wd:Q294414. }"
    },
    {
        "input": "Query: which country has adopted the euro as its currency ( 1 point )?\nEntities:euro with QID Q4916;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:currency wd:Q4916; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1009",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P38 wd:Q4916; wdt:P31 wd:Q6256. }"
    },
    {
        "input": "Query: where did michael jordan play high school basketball?\nEntities:Michael Jordan with QID Q41421;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41421 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1010",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41421 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: what type of cancer did huell howser die of?\nEntities:Huell Howser with QID Q2837916; cancer with QID Q12078;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2837916 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1011",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2837916 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what timezone is minneapolis in?\nEntities:Minneapolis with QID Q36091;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36091 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1012",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36091 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who is aidan davis?\nEntities:Aidan Davis with QID Q4696678;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4696678 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1013",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4696678 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what was nicolaus copernicus occupation?\nEntities:Nicolaus Copernicus with QID Q619;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q619 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1015",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q619 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what kind of currency does greece have?\nEntities:Greece with QID Q41;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1017",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41 wdt:P38 ?x. }"
    },
    {
        "input": "Query: when did manchester united first win a trophy?\nEntities:Manchester United F.C. with QID Q18656;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:winner wd:Q18656; wdt:point_in_time ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1018",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P1346 wd:Q18656; wdt:P585 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: where is the mozambique located?\nEntities:Mozambique with QID Q1029;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1029 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1019",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1029 wdt:P30 ?x. }"
    },
    {
        "input": "Query: where is isthmus of panama located?\nEntities:Isthmus of Panama with QID Q182139;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q182139 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1020",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q182139 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what to see in washington dc in 2 days?\nEntities:Washington, D.C. with QID Q61;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q61. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1021",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q61. }"
    },
    {
        "input": "Query: where is azerbaijan?\nEntities:Azerbaijan with QID Q227;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q227 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1022",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q227 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what is the money of argentina called?\nEntities:Argentina with QID Q414;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q414 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1023",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q414 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what college did matt schaub play for?\nEntities:Matt Schaub with QID Q795660;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q795660 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x. ?x wdt:instance_of/wdt:subclass_of* wd:college_sports_team. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1024",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q795660 p:P54 ?p. ?p ps:P54 ?x. ?x wdt:P31 wd:Q18558301. }"
    },
    {
        "input": "Query: what did bella abzug do?\nEntities:Bella Abzug with QID Q464724;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q464724 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1025",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q464724 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what sights to see in madrid?\nEntities:Madrid with QID Q2807;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q2807. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1026",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q2807. }"
    },
    {
        "input": "Query: what films has gerard butler starred in?\nEntities:Gerard Butler with QID Q169982;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q169982; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1028",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q169982; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what films did hans zimmer wrote music for?\nEntities:Hans Zimmer with QID Q76364;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:performer wd:Q76364; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1029",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P175 wd:Q76364; wdt:P31 wd:Q11424. }"
    },
    {
        "input": "Query: where was alice paul born?\nEntities:Alice Paul with QID Q127328;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q127328 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1030",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q127328 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what did john quincy adams died of?\nEntities:John Quincy Adams with QID Q11816;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11816 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1031",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11816 wdt:P509 ?x. }"
    },
    {
        "input": "Query: who did juan ponce de leon mary?\nEntities:Juan Ponce de Le\u00f3n with QID Q185974; Virgin Mary with QID Q345;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q185974 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1033",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q185974 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what time zone in the uk?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1034",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what is the political system in italy?\nEntities:Italy with QID Q38;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1035",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who is the leader of france 2012?\nEntities:France with QID Q142; Costa Rica with QID Q800; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:leader_of_france; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1036",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q27977064; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who is raquel welch's daughter?\nEntities:Raquel Welch with QID Q229545;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q229545 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1037",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q229545 wdt:P40 ?x. }"
    },
    {
        "input": "Query: what kind of art did leonardo da vinci produce?\nEntities:Leonardo da Vinci with QID Q762;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q762 wdt:field_of_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1038",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q762 wdt:P101 ?x. }"
    },
    {
        "input": "Query: what does the zambezi river flow into?\nEntities:Zambezi River with QID Q43106;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43106 wdt:mouth_of_the_watercourse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1039",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43106 wdt:P403 ?x. }"
    },
    {
        "input": "Query: what states does the connecticut river flow through?\nEntities:Connecticut River with QID Q379648; federated state with QID Q107390;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q379648 wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1040",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q379648 wdt:P131+ ?x. ?x wdt:P31/wdt:P279* wd:Q107390. }"
    },
    {
        "input": "Query: what money is used in the maldives?\nEntities:Maldives with QID Q826;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q826 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1041",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q826 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where does mike leach coach?\nEntities:Mike Leach with QID Q6847638;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:sports_team; wdt:head_coach wd:Q6847638. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1043",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q12973014; wdt:P286 wd:Q6847638. }"
    },
    {
        "input": "Query: what is the zip code of new york city?\nEntities:New York City with QID Q60;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q60 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1044",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q60 wdt:P281 ?x. }"
    },
    {
        "input": "Query: what condition does michael j fox have?\nEntities:Michael J. Fox with QID Q395274;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q395274 wdt:medical_condition ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1045",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q395274 wdt:P1050 ?x. }"
    },
    {
        "input": "Query: where did jrr tolkien live?\nEntities:J. R. R. Tolkien with QID Q892;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q892 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1046",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q892 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what are the major languages of italy?\nEntities:Italy with QID Q38;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1047",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what to do in panama city beach fl?\nEntities:Panama City Beach with QID Q1075852;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q1075852. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1048",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q1075852. }"
    },
    {
        "input": "Query: what is currency in dominican republic?\nEntities:Dominican Republic with QID Q786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1049",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where is san miguel mexico on map?\nEntities:San Miguel de Allende with QID Q753891;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q753891 wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1050",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q753891 wdt:P625 ?x. }"
    },
    {
        "input": "Query: where are the great pyramid of giza located?\nEntities:Great Pyramid of Giza with QID Q37200;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37200 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1052",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37200 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what was liam neeson's character in star wars?\nEntities:Liam Neeson with QID Q58444;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:media_franchise wd:star_wars; p:cast_member ?y. ?y ps:cast_member wd:Q58444; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1053",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P8345 wd:Q462; p:P161 ?y. ?y ps:P161 wd:Q58444; pq:P453 ?x. }"
    },
    {
        "input": "Query: who plays the voice of lois griffin?\nEntities:Lois Griffin with QID Q853073;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q853073. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1054",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q853073. }"
    },
    {
        "input": "Query: what team does sergio aguero play for?\nEntities:Sergio Ag\u00fcero with QID Q119562;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q119562 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1055",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q119562 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what is the capital of georgia?\nEntities:Georgia with QID Q1428;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1428 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1056",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1428 wdt:P36 ?x. }"
    },
    {
        "input": "Query: who is the present chief justice of the u.s. supreme court?\nEntities:Chief Justice of the United States with QID Q11147;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11147 wdt:officeholder ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1059",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11147 wdt:P1308 ?x. }"
    },
    {
        "input": "Query: who is susan st james?\nEntities:Susan Saint James with QID Q259559;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q259559 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1060",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q259559 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what is chris paul's son name?\nEntities:Chris Paul with QID Q46040;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q46040 wdt:child ?x. ?x wdt:sex_or_gender wd:male. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1061",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q46040 wdt:P40 ?x. ?x wdt:P21 wd:Q6581097. }"
    },
    {
        "input": "Query: who does josh hutcherson play in the hunger games?\nEntities:Josh Hutcherson with QID Q217004; The Hunger Games with QID Q212965;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q212965 p:cast_member ?p. ?p ps:cast_member wd:Q217004; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1063",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q212965 p:P161 ?p. ?p ps:P161 wd:Q217004; pq:P453 ?x. }"
    },
    {
        "input": "Query: what is the state flag of colorado called?\nEntities:Colorado with QID Q1261;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1261 wdt:flag ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1065",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1261 wdt:P163 ?x. }"
    },
    {
        "input": "Query: who plays claire in lost?\nEntities:Lost with QID Q23567; Claire Littleton with QID Q51310;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23567 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q51310. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1066",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23567 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q51310. }"
    },
    {
        "input": "Query: who are senators from new jersey?\nEntities:United States of America with QID Q30; New Jersey with QID Q1408;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:senators. ?p pq:electoral_district ?y. ?y wdt:located_in_the_administrative_territorial_entity wd:Q1408. FILTER NOT EXISTS { ?p pq:end_time ?z. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1067",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4416090. ?p pq:P768 ?y. ?y wdt:P131 wd:Q1408. FILTER NOT EXISTS { ?p pq:P582 ?z. } }"
    },
    {
        "input": "Query: who does jamie campbell bower play in breaking dawn?\nEntities:Jamie Campbell Bower with QID Q313283;",
        "output": "SELECT DISTINCT ?x WHERE { wd:breaking_dawn p:cast_member ?p. ?p ps:cast_member wd:Q313283; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1068",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q60506 p:P161 ?p. ?p ps:P161 wd:Q313283; pq:P453 ?x. }"
    },
    {
        "input": "Query: what language do denmark?\nEntities:Denmark with QID Q35;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1069",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where marie curie come from?\nEntities:Marie Curie with QID Q7186;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7186 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1070",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7186 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who is facebook's founder?\nEntities:Meta Platforms with QID Q380;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q380 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1071",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q380 wdt:P112 ?x. }"
    },
    {
        "input": "Query: what kind of money do you use in aruba?\nEntities:Aruba with QID Q21203;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q21203 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1072",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q21203 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what language do people speak in costa rica?\nEntities:Costa Rica with QID Q800;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q800 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1073",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q800 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what kind of music does john mayer play?\nEntities:John Mayer with QID Q215215;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q215215 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1074",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q215215 wdt:P136 ?x. }"
    },
    {
        "input": "Query: what is lil wayne real name?\nEntities:Lil Wayne with QID Q15615;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q15615 wdt:birth_name ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1075",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q15615 wdt:P1477 ?x. }"
    },
    {
        "input": "Query: what is the political system of the us?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1076",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what religions are practiced in afghanistan?\nEntities:Afghanistan with QID Q889;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q889 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1077",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q889 wdt:P140 ?x. }"
    },
    {
        "input": "Query: where is the world series 2012 being played?\nEntities:2012 World Series with QID Q1190373;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1190373 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1078",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1190373 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what kind of language do irish speak?\nEntities:Irish people with QID Q170826;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q170826 wdt:languages_spoken,_written_or_signed ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1079",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q170826 wdt:P1412 ?x. }"
    },
    {
        "input": "Query: what cancer did audrey hepburn died of?\nEntities:cancer with QID Q12078; Audrey Hepburn with QID Q42786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q42786 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1080",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q42786 wdt:P509 ?x. }"
    },
    {
        "input": "Query: where does allen iverson live now?\nEntities:Allen Iverson with QID Q190094;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q190094 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1081",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q190094 wdt:P551 ?x. }"
    },
    {
        "input": "Query: where was dwight howard born?\nEntities:Dwight Howard with QID Q25278;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q25278 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1082",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q25278 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what timezone is texas san antonio in?\nEntities:San Antonio with QID Q975; Texas with QID Q1439;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q975 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1084",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q975 wdt:P421 ?x. }"
    },
    {
        "input": "Query: where is alexandria located?\nEntities:Alexandria with QID Q87;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q87 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1085",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q87 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what is australian currency?\nEntities:Australia with QID Q408;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1087",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what team does chris humphrey play for?\nEntities:Chris Humphrey with QID Q797835;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q797835 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1089",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q797835 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where do most chinese live?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:country wd:Q148; wdt:population ?y. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1090",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P17 wd:Q148; wdt:P1082 ?y. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: when did the raiders win the superbowl?\nEntities:Las Vegas Raiders with QID Q324523; Super Bowl with QID Q32096;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner wd:Q324523; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1091",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1346 wd:Q324523; wdt:P585 ?x. }"
    },
    {
        "input": "Query: where is the euro used?\nEntities:euro with QID Q4916;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4916 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1092",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4916 wdt:P17 ?x. }"
    },
    {
        "input": "Query: where did pixie lott go to school?\nEntities:Pixie Lott with QID Q207177;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q207177 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1095",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q207177 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what date did we invade iraq?\nEntities:Iraq War with QID Q545449; 2003 invasion of Iraq with QID Q107802;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:part_of+ wd:Q545449; wdt:instance_of/wdt:subclass_of* wd:invasion; wdt:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1096",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P361+ wd:Q545449; wdt:P31/wdt:P279* wd:Q467011; wdt:P580 ?x. }"
    },
    {
        "input": "Query: what do the buddha believe in?\nEntities:Buddha with QID Q9441;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9441 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1100",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9441 wdt:P140 ?x. }"
    },
    {
        "input": "Query: when did braves win the world series?\nEntities:Atlanta Braves with QID Q461595; World Series with QID Q265538;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:winner wd:Q461595; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1101",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q461595; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what is the name of walt disney's son?\nEntities:Walt Disney with QID Q8704;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8704 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1102",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8704 wdt:P40 ?x. }"
    },
    {
        "input": "Query: what are some sights to see in rome?\nEntities:Rome with QID Q220;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q220. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1103",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q220. }"
    },
    {
        "input": "Query: where is jack daniels tennessee whiskey made?\nEntities:Jack Daniel's with QID Q371068;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:distillery; wdt:operator wd:Q371068; wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1104",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q1251750; wdt:P137 wd:Q371068; wdt:P131 ?x. }"
    },
    {
        "input": "Query: what time zone is it in london england?\nEntities:London with QID Q84;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q84 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1106",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q84 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who was governor of texas in 2003?\nEntities:Governor of Texas with QID Q5589725; Texas with QID Q1439;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:Q5589725; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2004-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2003-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1107",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q5589725; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2004-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2003-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what is yale university mascot?\nEntities:Yale University with QID Q49112;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q49112 wdt:mascot ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1108",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q49112 wdt:P822 ?x. }"
    },
    {
        "input": "Query: what is the currency used in tunisia?\nEntities:Tunisia with QID Q948;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q948 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1109",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q948 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what language group does polish belong to?\nEntities:Polish with QID Q809;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q809 wdt:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1110",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q809 wdt:P279 ?x. }"
    },
    {
        "input": "Query: what is the name of the new orleans saints football stadium?\nEntities:New Orleans Saints with QID Q172435;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q172435 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1111",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q172435 wdt:P115 ?x. }"
    },
    {
        "input": "Query: what are five countries that border france?\nEntities:France with QID Q142;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:shares_border_with ?x. } LIMIT 5",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1112",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:P47 ?x. } LIMIT 5"
    },
    {
        "input": "Query: what type of music was scott joplin noted for?\nEntities:SSQ with QID Q7393051; Scott Joplin with QID Q191499;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q191499 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1116",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q191499 wdt:P136 ?x. }"
    },
    {
        "input": "Query: where did sergio romo go to college?\nEntities:Sergio Romo with QID Q3041597;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3041597 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1117",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3041597 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where is adam smith from?\nEntities:Adam Smith with QID Q9381;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9381 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1119",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9381 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who became president after harding died?\nEntities:President of the United States with QID Q11696; Warren G. Harding with QID Q35286;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35286 p:position_held ?p. ?p ps:position_held wd:Q11696; pq:replaced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1120",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35286 p:P39 ?p. ?p ps:P39 wd:Q11696; pq:P1366 ?x. }"
    },
    {
        "input": "Query: in what city did machiavelli live?\nEntities:Niccol\u00f2 Machiavelli with QID Q1399;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1399 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1121",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1399 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what illnesses did george washington have?\nEntities:George Washington with QID Q23;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:medical_condition ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1122",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:P1050 ?x. }"
    },
    {
        "input": "Query: where is north port florida located?\nEntities:North Port with QID Q2155370;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2155370 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1123",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2155370 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who is jennifer lawrence boyfriend 2012?\nEntities:Jennifer Lawrence with QID Q189490;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q189490 p:unmarried_partner ?p. ?p ps:unmarried_partner ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1124",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q189490 p:P451 ?p. ?p ps:P451 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who was the voice of kitt?\nEntities:KITT with QID Q1088996;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q1088996. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1125",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q1088996. }"
    },
    {
        "input": "Query: who is the speaker of the house of representatives currently?\nEntities:Speaker of the United States House of Representatives with QID Q912994;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q912994 wdt:officeholder ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1126",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q912994 wdt:P1308 ?x. }"
    },
    {
        "input": "Query: when did sean murray first appear on ncis?\nEntities:Sean Murray with QID Q366939; NCIS with QID Q4525;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q366939 wdt:first_appearance ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1127",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q366939 wdt:P4584 ?x. }"
    },
    {
        "input": "Query: who is abraham maslow?\nEntities:Abraham Maslow with QID Q23357;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23357 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1128",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23357 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where did the cuban missile crisis happen?\nEntities:Cuban Missile Crisis with QID Q128160;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q128160 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1129",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q128160 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what is benedict arnold famous for?\nEntities:Benedict Arnold with QID Q298237;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q298237 wdt:notable_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1130",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q298237 wdt:P800 ?x. }"
    },
    {
        "input": "Query: where is the original mona lisa?\nEntities:Mona Lisa with QID Q12418;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q12418 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1131",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q12418 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what is jill wagner on wipeout?\nEntities:Wipeout with QID Q52497; Jill Wagner with QID Q432993;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q52497 p:cast_member ?p. ?p ps:cast_member wd:Q432993; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1132",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q52497 p:P161 ?p. ?p ps:P161 wd:Q432993; pq:P453 ?x. }"
    },
    {
        "input": "Query: what type of language does peru speak?\nEntities:Peru with QID Q419;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q419 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1133",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q419 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where is port lavaca tx?\nEntities:Port Lavaca with QID Q982477;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q982477 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1134",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q982477 wdt:P131 ?x. }"
    },
    {
        "input": "Query: which team does ronaldinho play for 2013?\nEntities:Ronaldinho with QID Q39444; Jeff Query with QID Q6174739;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39444 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2014-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1135",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39444 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2014-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what kind of books does nicholas sparks wrote?\nEntities:Nicholas Sparks with QID Q219377;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q219377 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1136",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q219377 wdt:P136 ?x. }"
    },
    {
        "input": "Query: what countries has spanish as their official language?\nEntities:Spanish with QID Q1321;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q1321; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1138",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q1321; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: what business does raj kundra do?\nEntities:Raj Kundra with QID Q7285320;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7285320 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1141",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7285320 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what movies is molly ringwald in?\nEntities:Molly Ringwald with QID Q231460;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q231460; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1142",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q231460; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what is the time zone in california called?\nEntities:California with QID Q99;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q99 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1143",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q99 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what team does drogba play for 2013?\nEntities:Didier Drogba with QID Q48892;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q48892 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2014-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1144",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q48892 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2014-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what is the northeast of the united states?\nEntities:Northeastern United States with QID Q24460;",
        "output": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q24460 schema:description ?x. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1148",
        "sparql": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q24460 schema:description ?x. } }"
    },
    {
        "input": "Query: what currency does brazil use?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1150",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what timezone does sweden have?\nEntities:Sweden with QID Q34;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1151",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who played lois en superman?\nEntities:Steel with QID Q2005691; Lois Lane with QID Q105883031;",
        "output": "SELECT DISTINCT ?x WHERE { wd:superman p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q105883031. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1152",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q622769 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q105883031. }"
    },
    {
        "input": "Query: where does the zambezi river end?\nEntities:Zambezi River with QID Q43106;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43106 wdt:mouth_of_the_watercourse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1153",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43106 wdt:P403 ?x. }"
    },
    {
        "input": "Query: what is the money currency in switzerland?\nEntities:Switzerland with QID Q39;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1155",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what state did george washington live in?\nEntities:George Washington with QID Q23; federated state with QID Q107390;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23 p:residence ?p. ?p ps:residence ?y. ?y wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1156",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23 p:P551 ?p. ?p ps:P551 ?y. ?y wdt:P131+ ?x. ?x wdt:P31 wd:Q107390. }"
    },
    {
        "input": "Query: where is mount vernon virginia?\nEntities:Mount Vernon with QID Q1375384;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1375384 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1157",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1375384 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where is kia car from?\nEntities:Kia with QID Q35349;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35349 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1158",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35349 wdt:P17 ?x. }"
    },
    {
        "input": "Query: when did george w bush take office?\nEntities:President of the United States with QID Q11696; George W. Bush with QID Q207;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q207 p:position_held ?y. ?y ps:position_held wd:Q11696; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1160",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q207 p:P39 ?y. ?y ps:P39 wd:Q11696; pq:P580 ?x. }"
    },
    {
        "input": "Query: where do the kansas city chiefs play?\nEntities:Kansas City Chiefs with QID Q223522;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q223522 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1161",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q223522 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what countries does the mississippi river run through?\nEntities:Mississippi River with QID Q1497;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1497 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1162",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1497 wdt:P17 ?x. }"
    },
    {
        "input": "Query: in what modern country is the yucatan peninsula located?\nEntities:Yucatan Peninsula with QID Q130978;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q130978 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1163",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q130978 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what does starbucks sell?\nEntities:Starbucks with QID Q37158;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37158 wdt:product_or_material_produced ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1164",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37158 wdt:P1056 ?x. }"
    },
    {
        "input": "Query: who is lincoln steffens?\nEntities:Lincoln Steffens with QID Q1825813;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1825813 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1165",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1825813 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what type of political system does iran have?\nEntities:Iran with QID Q794;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1166",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who does the voice of lois in family guy?\nEntities:Family Guy with QID Q5930; Lois Griffin with QID Q853073;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q853073. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1167",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q853073. }"
    },
    {
        "input": "Query: what are all the movies channing tatum has been in?\nEntities:Channing Tatum with QID Q212064;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q212064; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1168",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q212064; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where is the country of panama located?\nEntities:Panama with QID Q804;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q804 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1169",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q804 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what state did woodrow wilson represent?\nEntities:federated state with QID Q107390; Woodrow Wilson with QID Q34296;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34296 p:position_held ?p. ?p ps:position_held ?y. ?y wdt:applies_to_jurisdiction ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1170",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34296 p:P39 ?p. ?p ps:P39 ?y. ?y wdt:P1001 ?x. ?x wdt:P31 wd:Q107390. }"
    },
    {
        "input": "Query: where is university of alabama located?\nEntities:University of Alabama with QID Q492318;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q492318 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1172",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q492318 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who was arthur miller influenced by?\nEntities:Arthur Miller with QID Q80596;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q80596 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1173",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q80596 wdt:P737 ?x. }"
    },
    {
        "input": "Query: which countries use euro money?\nEntities:euro with QID Q4916;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4916 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1174",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4916 wdt:P17 ?x. }"
    },
    {
        "input": "Query: where is el salvador located?\nEntities:El Salvador with QID Q792;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q792 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1175",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q792 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what year was kevin durant drafted?\nEntities:Kevin Durant with QID Q29545;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29545 p:drafted_by ?y. ?y pq:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1176",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29545 p:P647 ?y. ?y pq:P585 ?x. }"
    },
    {
        "input": "Query: what illnesses did george washington suffer from?\nEntities:George Washington with QID Q23;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:medical_condition ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1177",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:P1050 ?x. }"
    },
    {
        "input": "Query: what are some places to visit in barcelona?\nEntities:Barcelona with QID Q1492;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q1492. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1178",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q1492. }"
    },
    {
        "input": "Query: what happened to nina simone?\nEntities:Nina Simone with QID Q174957;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q174957 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1179",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q174957 wdt:P509 ?x. }"
    },
    {
        "input": "Query: where is wellsville missouri?\nEntities:Wellsville with QID Q960182;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q960182 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1180",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q960182 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who played princess leia from star wars?\nEntities:Leia Organa with QID Q51797; Star Wars: Episode IV \u2013 A New Hope with QID Q17738;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q17738 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q51797. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1181",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q17738 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q51797. }"
    },
    {
        "input": "Query: where did galileo go to school?\nEntities:Galileo Galilei with QID Q307;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q307 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1183",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q307 wdt:P69 ?x. }"
    },
    {
        "input": "Query: who all was richard burton married to?\nEntities:Richard Burton with QID Q151973;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q151973 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1184",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q151973 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who did david villa play for?\nEntities:David Villa with QID Q83006;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q83006 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1185",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q83006 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what did copernicus invented?\nEntities:Nicolaus Copernicus with QID Q619;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q619. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1186",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q619. }"
    },
    {
        "input": "Query: what's jamaica country code?\nEntities:Jamaica with QID Q766;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:IOC_country_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1187",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:P984 ?x. }"
    },
    {
        "input": "Query: where robert frost went to school?\nEntities:Robert Frost with QID Q168728;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q168728 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1188",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q168728 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what county is plainfield il in?\nEntities:Plainfield with QID Q1012017;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1012017 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1191",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1012017 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what country is the mekong river located in?\nEntities:Mekong River with QID Q41179;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41179 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1192",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41179 wdt:P17 ?x. }"
    },
    {
        "input": "Query: who founded the sisters of saint joseph?\nEntities:Sisters of St. Joseph with QID Q33117;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q33117 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1193",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q33117 wdt:P112 ?x. }"
    },
    {
        "input": "Query: who shot and killed president john f kennedy?\nEntities:John F. Kennedy with QID Q9696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9696 wdt:killed_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1194",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9696 wdt:P157 ?x. }"
    },
    {
        "input": "Query: who is tony romo engaged to?\nEntities:Tony Romo with QID Q14027;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q14027 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1198",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q14027 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what do people in south africa speak?\nEntities:South Africa with QID Q258;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q258 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1199",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q258 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where great britain located?\nEntities:Great Britain with QID Q23666;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23666 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1200",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23666 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what state was hillary clinton a senator for?\nEntities:Hillary Clinton with QID Q6294;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6294 p:position_held ?p. ?p ps:position_held ?y; pq:electoral_district ?z. ?z wdt:located_in_the_administrative_territorial_entity ?x. ?y wdt:subclass_of wd:senator. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1201",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6294 p:P39 ?p. ?p ps:P39 ?y; pq:P768 ?z. ?z wdt:P131 ?x. ?y wdt:P279 wd:Q15686806. }"
    },
    {
        "input": "Query: what market does starbucks operate in?\nEntities:Starbucks with QID Q37158;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37158 wdt:product_or_material_produced ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1202",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37158 wdt:P1056 ?x. }"
    },
    {
        "input": "Query: what country does nike operate in?\nEntities:Nike with QID Q483915;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q483915 wdt:headquarters_location ?p. ?p wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1203",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q483915 wdt:P159 ?p. ?p wdt:P17 ?x. }"
    },
    {
        "input": "Query: what cities are in oakland county michigan?\nEntities:Oakland County with QID Q498024;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:city; wdt:located_in_the_administrative_territorial_entity wd:Q498024. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1204",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q515; wdt:P131 wd:Q498024. }"
    },
    {
        "input": "Query: what characters does trey parker voice?\nEntities:Trey Parker with QID Q44414;",
        "output": "SELECT DISTINCT ?x WHERE { { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q44414. } UNION { ?x wdt:voice_actor wd:Q44414. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1205",
        "sparql": "SELECT DISTINCT ?x WHERE { { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q44414. } UNION { ?x wdt:P725 wd:Q44414. } }"
    },
    {
        "input": "Query: where will euro 2012 be?\nEntities:UEFA Euro 2012 with QID Q22669;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q22669 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1206",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q22669 wdt:P276 ?x. }"
    },
    {
        "input": "Query: who the voice of lois griffin?\nEntities:Lois Griffin with QID Q853073;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q853073. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1207",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q853073. }"
    },
    {
        "input": "Query: when did the 7th harry potter book come out?\nEntities:Harry Potter and the Deathly Hallows with QID Q46758;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q46758 wdt:publication_date ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1208",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q46758 wdt:P577 ?x. }"
    },
    {
        "input": "Query: what is the parliament of canada called?\nEntities:Parliament of Canada with QID Q475689;",
        "output": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q475689 schema:description ?x. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1209",
        "sparql": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q475689 schema:description ?x. } }"
    },
    {
        "input": "Query: where is south carolina located?\nEntities:South Carolina with QID Q1456;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1456 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1210",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1456 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who are paul revere's parents?\nEntities:Paul Revere with QID Q327071;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q327071 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1211",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q327071 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: what political system does russia use?\nEntities:Russia with QID Q159;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1212",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what are american staffordshire terriers?\nEntities:Staffordshire Bull Terrier with QID Q39285;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39285 wdt:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1213",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39285 wdt:P279 ?x. }"
    },
    {
        "input": "Query: who is the current coach of the chicago bulls?\nEntities:Chicago Bulls with QID Q128109;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q128109 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1214",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q128109 wdt:P286 ?x. }"
    },
    {
        "input": "Query: what language is mainly spoken in england?\nEntities:England with QID Q21;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q21 wdt:language_used ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1215",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q21 wdt:P2936 ?x. }"
    },
    {
        "input": "Query: what awards has morgan freeman won?\nEntities:Morgan Freeman with QID Q48337;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q48337 wdt:award_received ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1216",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q48337 wdt:P166 ?x. }"
    },
    {
        "input": "Query: who will michael schumacher drive for in 2013?\nEntities:Michael Schumacher with QID Q9671;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9671 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2014-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1217",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9671 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2014-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what kind of government does the united states have today?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1218",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who were michael jackson's brothers and sisters?\nEntities:Michael Jackson with QID Q2831;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:sibling ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1219",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:P3373 ?x. }"
    },
    {
        "input": "Query: when is the last time the chicago bulls won a championship?\nEntities:NBA Finals with QID Q842375; Chicago Bulls with QID Q128109;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q128109; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1220",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q128109; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what is the braves mascot?\nEntities:Atlanta Braves with QID Q461595;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q461595 wdt:mascot ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1221",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q461595 wdt:P822 ?x. }"
    },
    {
        "input": "Query: where to stay in paris france?\nEntities:Paris with QID Q90; hotel with QID Q27686;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:hotel; wdt:located_in_the_administrative_territorial_entity wd:Q90. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1222",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q27686; wdt:P131 wd:Q90. }"
    },
    {
        "input": "Query: what teams did george steinbrenner own?\nEntities:George Steinbrenner with QID Q220210;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q220210 wdt:owner_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1223",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q220210 wdt:P1830 ?x. }"
    },
    {
        "input": "Query: who does christopher walken play in batman returns?\nEntities:Batman Returns with QID Q189054; Christopher Walken with QID Q185051;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q189054 p:cast_member ?p. ?p ps:cast_member wd:Q185051; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1224",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q189054 p:P161 ?p. ?p ps:P161 wd:Q185051; pq:P453 ?x. }"
    },
    {
        "input": "Query: what to see and do in revelstoke?\nEntities:Revelstoke with QID Q1893229;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q1893229. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1225",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q1893229. }"
    },
    {
        "input": "Query: what guitar did andres segovia use?\nEntities:Andr\u00e9s Segovia Torres with QID Q192529;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q192529 wdt:instrument ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1227",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q192529 wdt:P1303 ?x. }"
    },
    {
        "input": "Query: what style of art did vincent van gogh do?\nEntities:Vincent van Gogh with QID Q5582;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5582 wdt:movement ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1228",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5582 wdt:P135 ?x. }"
    },
    {
        "input": "Query: what was nicolaus copernicus discovery?\nEntities:Nicolaus Copernicus with QID Q619;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q619. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1229",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q619. }"
    },
    {
        "input": "Query: where did the tutsi come from?\nEntities:Tutsi with QID Q193092;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q193092 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1230",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q193092 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what country did osama bin laden live in?\nEntities:Osama bin Laden with QID Q1317;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1317 p:residence ?p. ?p ps:residence ?y. ?y wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1231",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1317 p:P551 ?p. ?p ps:P551 ?y. ?y wdt:P17 ?x. }"
    },
    {
        "input": "Query: where was the roman empire centered?\nEntities:Roman Empire with QID Q2277;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2277 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1232",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2277 wdt:P36 ?x. }"
    },
    {
        "input": "Query: who played samuel sullivan in heroes?\nEntities:Samuel Sullivan with QID Q3471244; Heroes with QID Q83401;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q83401 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q3471244. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1233",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q83401 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q3471244. }"
    },
    {
        "input": "Query: which ocean does the murray river flow into?\nEntities:Murray River with QID Q183078;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q183078 wdt:mouth_of_the_watercourse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1234",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q183078 wdt:P403 ?x. }"
    },
    {
        "input": "Query: what time zone is cincinnati oh in?\nEntities:Cincinnati with QID Q43196;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43196 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1235",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43196 wdt:P421 ?x. }"
    },
    {
        "input": "Query: where does peter king live?\nEntities:Peter King with QID Q7175203;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7175203 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1237",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7175203 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what are west african countries?\nEntities:West Africa with QID Q4412;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4412 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1238",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4412 wdt:P527 ?x. }"
    },
    {
        "input": "Query: who became president when jfk was killed?\nEntities:President of the United States with QID Q11696; John F. Kennedy with QID Q9696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9696 p:position_held ?p. ?p ps:position_held wd:Q11696; pq:replaced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1239",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9696 p:P39 ?p. ?p ps:P39 wd:Q11696; pq:P1366 ?x. }"
    },
    {
        "input": "Query: where is mallorca?\nEntities:Mallorca with QID Q8828;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8828 wdt:located_in_or_next_to_body_of_water ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1240",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8828 wdt:P206 ?x. }"
    },
    {
        "input": "Query: what years have the cubs been in the world series?\nEntities:Chicago Cubs with QID Q246782; World Series with QID Q265538;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:participating_team wd:Q246782; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1242",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1923 wd:Q246782; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what car companies does ford motor company own?\nEntities:Ford Motor Company with QID Q44294;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q44294 wdt:owner_of ?x. ?x wdt:instance_of/wdt:subclass_of* wd:car_brand. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1243",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q44294 wdt:P1830 ?x. ?x wdt:P31 wd:Q10429667. }"
    },
    {
        "input": "Query: what type of government does the bahamas?\nEntities:The Bahamas with QID Q778;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q778 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1245",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q778 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what style of music did jimi hendrix play?\nEntities:Jimi Hendrix with QID Q5928;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5928 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1246",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5928 wdt:P136 ?x. }"
    },
    {
        "input": "Query: what character does mila kunis play on family guy?\nEntities:Family Guy with QID Q5930; Mila Kunis with QID Q37628;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor wd:Q37628; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1247",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 wd:Q37628; pq:P453 ?x. }"
    },
    {
        "input": "Query: who played anakin skywalker in phantom menace?\nEntities:Anakin Skywalker with QID Q51752; Star Wars: Episode I \u2013 The Phantom Menace with QID Q165713;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q165713 p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q51752. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1248",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q165713 p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q51752. }"
    },
    {
        "input": "Query: what language do the people in ghana speak?\nEntities:Ghana with QID Q117;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q117 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1249",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q117 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where is luke afb arizona?\nEntities:Luke Air Force Base with QID Q1346991;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1346991 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1250",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1346991 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what language people speak in belgium?\nEntities:Belgium with QID Q31;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q31 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1251",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q31 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where was the battle of vicksburg located?\nEntities:",
        "output": "SELECT DISTINCT ?x WHERE { wd:battle_of_vicksburg wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1252",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1066253 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where was the gallipoli campaign waged?\nEntities:Gallipoli campaign with QID Q164983;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q164983 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1254",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q164983 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what was lincoln's wife's name?\nEntities:Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1255",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what did king george vi die of?\nEntities:George VI with QID Q280856;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q280856 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1257",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q280856 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what type of currency is used in the united kingdom?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1258",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where did brad paisley graduate from college?\nEntities:Brad Paisley with QID Q39639;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39639 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1259",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39639 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what city was robert kennedy killed in?\nEntities:Robert F. Kennedy with QID Q25310;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q25310 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1260",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q25310 wdt:P20 ?x. }"
    },
    {
        "input": "Query: who plays the new michael myers?\nEntities:Michael Myers with QID Q1426891;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y; wdt:publication_date ?z. ?y ps:cast_member ?x; pq:character_role wd:Q1426891. } ORDER BY DESC (?z) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1262",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y; wdt:P577 ?z. ?y ps:P161 ?x; pq:P453 wd:Q1426891. } ORDER BY DESC (?z) LIMIT 1"
    },
    {
        "input": "Query: who was killed first tupac or biggie?\nEntities:Tupac Shakur with QID Q6107; The Notorious B.I.G. with QID Q179157;",
        "output": "SELECT DISTINCT ?x WHERE { { wd:Q6107 wdt:date_of_death ?y; rdfs:label ?x. FILTER(LANGMATCHES(LANG(?x), \"EN\")) } UNION { wd:Q179157 wdt:date_of_death ?y; rdfs:label ?x. FILTER(LANGMATCHES(LANG(?x), \"EN\")) } } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1263",
        "sparql": "SELECT DISTINCT ?x WHERE { { wd:Q6107 wdt:P570 ?y; rdfs:label ?x. FILTER(LANGMATCHES(LANG(?x), \"EN\")) } UNION { wd:Q179157 wdt:P570 ?y; rdfs:label ?x. FILTER(LANGMATCHES(LANG(?x), \"EN\")) } } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: what kind of currency to bring to mexico?\nEntities:Mexico with QID Q96;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q96 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1264",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q96 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who won the nobel peace prize in 2007?\nEntities:Nobel Peace Prize with QID Q35637;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35637 p:winner ?p. ?p ps:winner ?x; pq:point_in_time ?z. FILTER((?z < \"2008-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2007-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1265",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35637 p:P1346 ?p. ?p ps:P1346 ?x; pq:P585 ?z. FILTER((?z < \"2008-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2007-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what theme songs did alan thicke wrote?\nEntities:Alan Thicke with QID Q277895;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:composer wd:Q277895. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1266",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P86 wd:Q277895. }"
    },
    {
        "input": "Query: what films did patrick swayze star in?\nEntities:Patrick Swayze with QID Q49004;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q49004; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1267",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q49004; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where is sony headquarters?\nEntities:Sony with QID Q41187;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41187 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1268",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41187 wdt:P159 ?x. }"
    },
    {
        "input": "Query: who is liz lemon getting married to?\nEntities:Liz Lemon with QID Q3835664;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3835664 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1269",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3835664 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what type of music is tchaikovsky?\nEntities:Pyotr Ilyich Tchaikovsky with QID Q7315;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7315 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1271",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7315 wdt:P136 ?x. }"
    },
    {
        "input": "Query: when is wimbledon tennis tournament?\nEntities:Wimbledon Championships with QID Q41520;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:wimbledon_championships; wdt:start_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1272",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31 wd:Q41520; wdt:P580 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: where did helen keller go to school?\nEntities:Helen Keller with QID Q38203;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38203 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1274",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38203 wdt:P69 ?x. }"
    },
    {
        "input": "Query: where is german an official language?\nEntities:German with QID Q188;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q188; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1276",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q188; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: what language do you speak in iran?\nEntities:Iran with QID Q794;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1277",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who did tupac shakur date?\nEntities:Tupac Shakur with QID Q6107;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6107 wdt:unmarried_partner|wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1278",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6107 wdt:P451|wdt:P26 ?x. }"
    },
    {
        "input": "Query: who does paul bettany play in the avengers?\nEntities:Paul Bettany with QID Q242707; The Avengers with QID Q182218;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q182218 p:voice_actor ?p. ?p ps:voice_actor wd:Q242707; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1279",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q182218 p:P725 ?p. ?p ps:P725 wd:Q242707; pq:P453 ?x. }"
    },
    {
        "input": "Query: what did larry hagman die of?\nEntities:Larry Hagman with QID Q100440;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q100440 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1281",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q100440 wdt:P509 ?x. }"
    },
    {
        "input": "Query: who is the governor of colorado 2009?\nEntities:governor with QID Q132050; Colorado with QID Q1261;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:governor_of_colorado; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2010-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2009-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1282",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q29514964; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2010-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2009-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what timezone is michigan usa?\nEntities:Michigan with QID Q1166;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1166 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1283",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1166 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what blood disease does robin roberts have?\nEntities:hematology with QID Q103824; Robin Roberts with QID Q2041541;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2041541 wdt:medical_condition ?x. ?x wdt:health_specialty wd:Q103824; wdt:instance_of/wdt:subclass_of* wd:disease. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1284",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2041541 wdt:P1050 ?x. ?x wdt:P1995 wd:Q103824; wdt:P31 wd:Q12136. }"
    },
    {
        "input": "Query: what show is jill wagner on?\nEntities:Jill Wagner with QID Q432993;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q432993. ?x wdt:instance_of/wdt:subclass_of* wd:television_series. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1286",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q432993. ?x wdt:P31/wdt:P279* wd:Q5398426. }"
    },
    {
        "input": "Query: what currency does senegal use?\nEntities:Senegal with QID Q1041;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1041 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1288",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1041 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what do ethnic russians look like?\nEntities:Russians with QID Q49542;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q49542 wdt:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1290",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q49542 wdt:P279 ?x. }"
    },
    {
        "input": "Query: what places made up the western roman empire?\nEntities:Western Roman Empire with QID Q42834; Roman province with QID Q182547;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:country wd:Q42834; wdt:instance_of/wdt:subclass_of* wd:roman_province. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1291",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P17 wd:Q42834; wdt:P31 wd:Q182547. }"
    },
    {
        "input": "Query: what company did mitt romney run?\nEntities:Mitt Romney with QID Q4496;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:business; p:owned_by|p:founded_by ?p. ?p ps:owned_by|ps:founded_by wd:Q4496. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1293",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q4830453; p:P127|p:P112 ?p. ?p ps:P127|ps:P112 wd:Q4496. }"
    },
    {
        "input": "Query: what is vito corleone real name?\nEntities:Vito Corleone with QID Q745077;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q745077. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1294",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q745077. }"
    },
    {
        "input": "Query: what is the king of spain's name?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:head_of_state ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1295",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P35 ?x. }"
    },
    {
        "input": "Query: where did justin bieber grew up?\nEntities:Justin Bieber with QID Q34086;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34086 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1297",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34086 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what district does john cornyn represent?\nEntities:Nancy Pelosi with QID Q170581; John Cornyn with QID Q719568;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q170581 p:position_held ?p. ?p pq:start_time ?z; pq:electoral_district ?x. } ORDER BY DESC (?z) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1298",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q170581 p:P39 ?p. ?p pq:P580 ?z; pq:P768 ?x. } ORDER BY DESC (?z) LIMIT 1"
    },
    {
        "input": "Query: when was the last superbowl win for the steelers?\nEntities:Pittsburgh Steelers with QID Q191477; Super Bowl with QID Q32096;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner wd:Q191477; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1299",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1346 wd:Q191477; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what language do they speak in argentina yahoo?\nEntities:Argentina with QID Q414;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q414 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1300",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q414 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who drafted kevin garnett?\nEntities:Kevin Garnett with QID Q189240;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q189240 wdt:drafted_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1301",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q189240 wdt:P647 ?x. }"
    },
    {
        "input": "Query: what is zip code for chicago illinois?\nEntities:Chicago with QID Q1297;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1297 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1302",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1297 wdt:P281 ?x. }"
    },
    {
        "input": "Query: what is the name of book written by helen keller?\nEntities:Helen Keller with QID Q38203;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:literary_work; wdt:author wd:Q38203. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1303",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q7725634; wdt:P50 wd:Q38203. }"
    },
    {
        "input": "Query: what did bruce jenner win gold for?\nEntities:Olympic Games with QID Q5389; Caitlyn Jenner with QID Q365144;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q365144 p:participant_in ?p. ?p ps:participant_in ?x; pq:award_received wd:gold. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1304",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q365144 p:P1344 ?p. ?p ps:P1344 ?x; pq:P166 wd:Q15243387. }"
    },
    {
        "input": "Query: who is prime minister of japan 2011?\nEntities:prime minister with QID Q14212; Japan with QID Q17;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:prime_minister_of_japan; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1307",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q274948; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what year did aaron rodgers get drafted?\nEntities:Aaron Rodgers with QID Q302581;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q302581 p:drafted_by ?y. ?y pq:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1308",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q302581 p:P647 ?y. ?y pq:P585 ?x. }"
    },
    {
        "input": "Query: who plays the voice of kovu?\nEntities:Kovu with QID Q10314672;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q10314672. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1310",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q10314672. }"
    },
    {
        "input": "Query: who is martin luther king jr wife?\nEntities:Martin Luther King Jr. with QID Q8027;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8027 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1311",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8027 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who is the new governor of florida 2011?\nEntities:Florida with QID Q812; governor with QID Q132050;",
        "output": "SELECT DISTINCT ?x WHERE { wd:governor_of_florida wdt:officeholder ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1312",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q20198851 wdt:P1308 ?x. }"
    },
    {
        "input": "Query: what kind of money does the uk use?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1313",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what books did jules verne wright?\nEntities:Jules Verne with QID Q33977;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:written_work; wdt:author wd:Q33977. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1314",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q47461344; wdt:P50 wd:Q33977. }"
    },
    {
        "input": "Query: where does the philadelphia union soccer team play?\nEntities:Philadelphia Union with QID Q689874;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q689874 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1316",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q689874 wdt:P115 ?x. }"
    },
    {
        "input": "Query: where is the portuguese language derived from?\nEntities:Portuguese with QID Q5146;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5146 wdt:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1317",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5146 wdt:P279 ?x. }"
    },
    {
        "input": "Query: what 5 countries border ethiopia?\nEntities:Ethiopia with QID Q115;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q115 wdt:shares_border_with ?x. } LIMIT 5",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1318",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q115 wdt:P47 ?x. } LIMIT 5"
    },
    {
        "input": "Query: what type of planes does virgin america fly?\nEntities:Virgin America with QID Q645084;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:aircraft_family; wdt:operator wd:Q645084. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1320",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q15056993; wdt:P137 wd:Q645084. }"
    },
    {
        "input": "Query: what city is the university of maryland university college in?\nEntities:University of Maryland with QID Q503415; University of Maryland Global Campus with QID Q14692455;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q503415 wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:city. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1321",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q503415 wdt:P131+ ?x. ?x wdt:P31/wdt:P279* wd:Q515. }"
    },
    {
        "input": "Query: where did anne frank live before the war?\nEntities:Anne Frank with QID Q4583; World War II with QID Q362;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4583 p:residence ?p. ?p ps:residence ?x; pq:start_time ?y; pq:end_time ?z. wd:Q362 wdt:start_time ?w. FILTER((?y < ?w) || (?z < ?w)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1322",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4583 p:P551 ?p. ?p ps:P551 ?x; pq:P580 ?y; pq:P582 ?z. wd:Q362 wdt:P580 ?w. FILTER((?y < ?w) || (?z < ?w)) }"
    },
    {
        "input": "Query: where was joseph p kennedy born?\nEntities:Joseph P. Kennedy Sr. with QID Q313696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q313696 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1323",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q313696 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where do the san francisco giants play baseball?\nEntities:San Francisco Giants with QID Q308966;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q308966 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1326",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q308966 wdt:P115 ?x. }"
    },
    {
        "input": "Query: what type of currency does egypt have?\nEntities:Egypt with QID Q79;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1328",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what club team is diego forlan on?\nEntities:Diego Forl\u00e1n with QID Q261534;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q261534 wdt:member_of_sports_team ?x. ?x wdt:instance_of/wdt:subclass_of* wd:sports_club. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1329",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q261534 wdt:P54 ?x. ?x wdt:P31/wdt:P279* wd:Q847017. }"
    },
    {
        "input": "Query: what state is kaplan university online located?\nEntities:Kaplan University with QID Q6366831;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6366831 wdt:located_in_the_administrative_territorial_entity ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1330",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6366831 wdt:P131 ?x. ?x wdt:P31 wd:Q107390. }"
    },
    {
        "input": "Query: what timezone are the bahamas?\nEntities:The Bahamas with QID Q778;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q778 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1332",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q778 wdt:P421 ?x. }"
    },
    {
        "input": "Query: where did l frank baum die?\nEntities:L. Frank Baum with QID Q207544;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q207544 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1333",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q207544 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what inspired steinbeck to write?\nEntities:John Steinbeck with QID Q39212;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39212 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1335",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39212 wdt:P737 ?x. }"
    },
    {
        "input": "Query: who is the leader of cuba 2012?\nEntities:Costa Rica with QID Q800; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:leader_of_cuba; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1336",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q27977064; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: where did gareth southgate play?\nEntities:Gareth Southgate with QID Q316681;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q316681 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1337",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q316681 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what musical instruments did duke ellington play?\nEntities:Duke Ellington with QID Q4030; Quincy Jones with QID Q193645;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4030 wdt:instrument ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1338",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4030 wdt:P1303 ?x. }"
    },
    {
        "input": "Query: where is the bank of america pavilion?\nEntities:Leader Bank Pavilion with QID Q4856037;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4856037 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1339",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4856037 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what all does google have?\nEntities:Google with QID Q95;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q95 wdt:owner_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1340",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q95 wdt:P1830 ?x. }"
    },
    {
        "input": "Query: what movies did robert blake play in?\nEntities:Robert Blake with QID Q524281;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q524281; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1345",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q524281; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what tv shows are taped in new york city?\nEntities:New York City with QID Q60;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:narrative_location wd:Q60; wdt:instance_of/wdt:subclass_of* wd:television_program. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1346",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P840 wd:Q60; wdt:P31/wdt:P279* wd:Q15416. }"
    },
    {
        "input": "Query: what did gerald ford die of?\nEntities:Gerald Ford with QID Q9582;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9582 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1347",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9582 wdt:P509 ?x. }"
    },
    {
        "input": "Query: where is the gobi desert located?\nEntities:Gobi Desert with QID Q42070;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q42070 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1348",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q42070 wdt:P17 ?x. }"
    },
    {
        "input": "Query: who is prime minister of japan 2012?\nEntities:Costa Rica with QID Q800; prime minister with QID Q14212; Japan with QID Q17; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:prime_minister_of_japan; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1350",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q27977064; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what city was barack obama born in?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 p:place_of_birth ?p. ?p ps:place_of_birth ?x. ?x wdt:instance_of/wdt:subclass_of* wd:city. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1351",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 p:P19 ?p. ?p ps:P19 ?x. ?x wdt:P31/wdt:P279* wd:Q515. }"
    },
    {
        "input": "Query: what countries speak spanish wikipedia?\nEntities:Spanish with QID Q1321;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q1321; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1353",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q1321; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: what films have johnny depp been in?\nEntities:Johnny Depp with QID Q37175;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q37175; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1354",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q37175; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: who runs china 2011?\nEntities:Chinese Communist Party with QID Q17427; People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:runs_china; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1355",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q849418; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what country did vasco da gama came from?\nEntities:Vasco da Gama with QID Q7328;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7328 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1357",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7328 wdt:P27 ?x. }"
    },
    {
        "input": "Query: what is the current government of vietnam?\nEntities:Vietnam with QID Q881;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q881 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1358",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q881 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what countries was the vietnam war between?\nEntities:Vietnam War with QID Q8740;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8740 wdt:participant ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1359",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8740 wdt:P710 ?x. }"
    },
    {
        "input": "Query: what to see outside of paris?\nEntities:Paris with QID Q90;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q90. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1360",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q90. }"
    },
    {
        "input": "Query: where did laura ingalls wilder live?\nEntities:Laura Ingalls Wilder with QID Q237514;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q237514 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1363",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q237514 wdt:P551 ?x. }"
    },
    {
        "input": "Query: who did jason segel date?\nEntities:Jason Segel with QID Q202304;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q202304 p:unmarried_partner|p:spouse ?p. ?p ps:unmarried_partner|ps:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1364",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q202304 p:P451|p:P26 ?p. ?p ps:P451|ps:P26 ?x. }"
    },
    {
        "input": "Query: where christopher columbus was born?\nEntities:Christopher Columbus with QID Q7322;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7322 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1365",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7322 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who did kat graham play in parent trap?\nEntities:The Parent Trap with QID Q729782; Kat Graham with QID Q151118;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q729782 p:cast_member ?p. ?p ps:cast_member wd:Q151118; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1366",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q729782 p:P161 ?p. ?p ps:P161 wd:Q151118; pq:P453 ?x. }"
    },
    {
        "input": "Query: what does sammy hagar sing?\nEntities:Sammy Hagar with QID Q435780;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:performer wd:Q435780. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1367",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P175 wd:Q435780. }"
    },
    {
        "input": "Query: who plays young lex luthor in smallville?\nEntities:Lex Luthor with QID Q735712; Smallville with QID Q180228;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q180228 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q735712. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1368",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q180228 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q735712. }"
    },
    {
        "input": "Query: who is lamar odom playing for in 2012?\nEntities:Lamar Odom with QID Q296403;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q296403 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1369",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q296403 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who makes lois griffin voice?\nEntities:Lois Griffin with QID Q853073;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q853073. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1371",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q853073. }"
    },
    {
        "input": "Query: what is the zip code for trenton ga?\nEntities:Trenton with QID Q25330;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q25330 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1372",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q25330 wdt:P281 ?x. }"
    },
    {
        "input": "Query: what language do you speak in finland?\nEntities:Finland with QID Q33;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q33 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1373",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q33 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what kind of system of government does the united states have?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1374",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what inventions did da vinci made?\nEntities:Leonardo da Vinci with QID Q762;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q762. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1375",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q762. }"
    },
    {
        "input": "Query: what was lebron james rookie year?\nEntities:LeBron James with QID Q36159; National Basketball Association with QID Q155223;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36159 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?y. ?y wdt:league wd:Q155223. ?p pq:start_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1376",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36159 p:P54 ?p. ?p ps:P54 ?y. ?y wdt:P118 wd:Q155223. ?p pq:P580 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: what are shirley temple kids names?\nEntities:Shirley Temple with QID Q182580;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q182580 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1377",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q182580 wdt:P40 ?x. }"
    },
    {
        "input": "Query: who does malcom floyd play for?\nEntities:Malcom Floyd with QID Q6742746;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6742746 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1378",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6742746 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what position does terrell owens play?\nEntities:Terrell Owens with QID Q1395269;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1395269 wdt:position_played_on_team_/_speciality ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1379",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1395269 wdt:P413 ?x. }"
    },
    {
        "input": "Query: what did kourtney kardashian go to college for?\nEntities:Kourtney Kardashian with QID Q575689;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q575689 p:educated_at ?y. ?y pq:academic_major ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1381",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q575689 p:P69 ?y. ?y pq:P812 ?x. }"
    },
    {
        "input": "Query: what are the four official languages of nigeria?\nEntities:Nigeria with QID Q1033;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:official_language ?x. } LIMIT 4",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1382",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:P37 ?x. } LIMIT 4"
    },
    {
        "input": "Query: where is bergen belsen concentration camp located?\nEntities:Bergen-Belsen concentration camp with QID Q7332;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7332 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1383",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7332 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who was louis xvi?\nEntities:Louis XVI of France with QID Q7732;",
        "output": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q7732 schema:description ?x. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1384",
        "sparql": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q7732 schema:description ?x. } }"
    },
    {
        "input": "Query: what was the name of tecumseh brother?\nEntities:Tecumseh with QID Q257808;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q257808 p:sibling ?p. ?p ps:sibling ?x. ?x wdt:sex_or_gender wd:male. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1385",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q257808 p:P3373 ?p. ?p ps:P3373 ?x. ?x wdt:P21 wd:Q6581097. }"
    },
    {
        "input": "Query: what did donna summers die from?\nEntities:Donna Summer with QID Q908933;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q908933 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1386",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q908933 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what year did allen iverson get married?\nEntities:Allen Iverson with QID Q190094;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q190094 p:spouse ?p. ?p ps:spouse ?y; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1387",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q190094 p:P26 ?p. ?p ps:P26 ?y; pq:P580 ?x. }"
    },
    {
        "input": "Query: where was selena gomez really born?\nEntities:Selena Gomez with QID Q83287;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q83287 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1388",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q83287 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who did lamar odom sign with?\nEntities:Lamar Odom with QID Q296403;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q296403 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1389",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q296403 wdt:P54 ?x. }"
    },
    {
        "input": "Query: when did the battle of thermopylae occur?\nEntities:Battle of Thermopylae with QID Q131969;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q131969 wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1391",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q131969 wdt:P585 ?x. }"
    },
    {
        "input": "Query: where did eleanor roosevelt go to school?\nEntities:Eleanor Roosevelt with QID Q83396;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q83396 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1392",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q83396 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what do people speak in singapore?\nEntities:Singapore with QID Q334;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q334 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1396",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q334 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what country is next to russia?\nEntities:Russia with QID Q159;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1399",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:P47 ?x. }"
    },
    {
        "input": "Query: who played jacob black?\nEntities:Jacob Black with QID Q716835;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q716835. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1400",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q716835. }"
    },
    {
        "input": "Query: what movies star adam sandler?\nEntities:Adam Sandler with QID Q132952;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q132952; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1402",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q132952; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what university did bill clinton graduated from?\nEntities:Bill Clinton with QID Q1124;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1124 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1403",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1124 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: who plays jackson gibbs on ncis?\nEntities:Jackson Gibbs with QID Q27662696; NCIS with QID Q4525;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4525 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q27662696. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1404",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4525 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q27662696. }"
    },
    {
        "input": "Query: where did president kennedy go to school?\nEntities:John F. Kennedy with QID Q9696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9696 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1405",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9696 wdt:P69 ?x. }"
    },
    {
        "input": "Query: when did the ny knicks last win a championship?\nEntities:New York Knicks with QID Q131364; NBA Finals with QID Q842375;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q131364; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1406",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q131364; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what happened at fukushima daiichi nuclear plant?\nEntities:Fukushima Daiichi Nuclear Power Plant with QID Q114295;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:location wd:Q114295; wdt:instance_of/wdt:subclass_of* wd:disaster. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1407",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P276 wd:Q114295; wdt:P31/wdt:P279* wd:Q3839081. }"
    },
    {
        "input": "Query: who was louis kossuth?\nEntities:Lajos Kossuth with QID Q157040;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q157040 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1408",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q157040 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what country do arabic people come from?\nEntities:Arabs with QID Q35323;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:ethnic_group wd:Q35323; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1409",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P172 wd:Q35323; wdt:P31 wd:Q6256. }"
    },
    {
        "input": "Query: when did the red sox win the pennant?\nEntities:Boston Red Sox with QID Q213959;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:pennant; p:participating_team ?z; wdt:point_in_time ?x. ?z ps:participating_team wd:Q213959. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1410",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; p:P1923 ?z; wdt:P585 ?x. ?z ps:P1923 wd:Q213959. }"
    },
    {
        "input": "Query: where did harry truman die?\nEntities:Harry S. Truman with QID Q11613;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11613 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1411",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11613 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what was prince charles last name?\nEntities:Charles III with QID Q43274;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43274 wdt:name_in_native_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1412",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43274 wdt:P1559 ?x. }"
    },
    {
        "input": "Query: what type of legal system does italy have?\nEntities:Italy with QID Q38;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1414",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what website did mark zuckerberg co founder?\nEntities:Mark Zuckerberg with QID Q36215;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:founded_by wd:Q36215; wdt:instance_of/wdt:subclass_of* wd:website. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1416",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P112 wd:Q36215; wdt:P31 wd:Q35127. }"
    },
    {
        "input": "Query: what bass does jared followill use?\nEntities:Jared Followill with QID Q3622348;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:subclass_of* wd:bass; wdt:used_by wd:Q3622348. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1417",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P279* wd:Q810447; wdt:P1535 wd:Q3622348. }"
    },
    {
        "input": "Query: who played captain kirk in star trek?\nEntities:James T. Kirk with QID Q16311;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q16311. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1418",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q16311. }"
    },
    {
        "input": "Query: what type of currency does the us have?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1419",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what currency does thailand use?\nEntities:Thailand with QID Q869;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1420",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where is canadian county oklahoma?\nEntities:Canadian County with QID Q486614;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q486614 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1421",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q486614 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what does rob kardashian do for living?\nEntities:Rob Kardashian with QID Q26318;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q26318 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1423",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q26318 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where is oceania on a map?\nEntities:Oceania with QID Q55643; Pacific Islands with QID Q844857;",
        "output": "SELECT DISTINCT ?x WHERE { wd:ocenia wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1424",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q538 wdt:P625 ?x. }"
    },
    {
        "input": "Query: what can you do in palm springs ca?\nEntities:Palm Springs with QID Q488004;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q488004. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1426",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q488004. }"
    },
    {
        "input": "Query: when was the last time the ny giants played in the superbowl?\nEntities:New York Giants with QID Q190618; Super Bowl with QID Q32096;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner wd:Q190618; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1428",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1346 wd:Q190618; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: who is adam sandler?\nEntities:Adam Sandler with QID Q132952;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q132952 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1429",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q132952 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who was the president of pakistan in 1980?\nEntities:Pakistan with QID Q843;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:president_of_pakistan; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"1981-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1980-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1430",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q473984; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"1981-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1980-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: which college did barack obama attend?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1431",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where was st elizabeth ann seton born?\nEntities:Elizabeth Ann Seton with QID Q459032;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q459032 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1432",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q459032 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what does the adriatic sea border?\nEntities:Adriatic Sea with QID Q13924;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q13924 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1433",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q13924 wdt:P47 ?x. }"
    },
    {
        "input": "Query: what teams played in the 2010 stanley cup?\nEntities:Stanley Cup with QID Q211872;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:stanley_cup; wdt:point_in_time ?y; wdt:participating_team ?x. FILTER((?y < \"2011-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2010-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1435",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31 wd:Q211872; wdt:P585 ?y; wdt:P1923 ?x. FILTER((?y < \"2011-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2010-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what colony is john adams from?\nEntities:John Adams with QID Q11806;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11806 p:place_of_birth ?p. ?p ps:place_of_birth ?y; pq:located_in_the_administrative_territorial_entity ?x. ?x wdt:instance_of/wdt:subclass_of* wd:colony. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1436",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11806 p:P19 ?p. ?p ps:P19 ?y; pq:P131 ?x. ?x wdt:P31/wdt:P279* wd:Q133156. }"
    },
    {
        "input": "Query: what countries do germany border?\nEntities:Germany with QID Q183;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q183 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1437",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q183 wdt:P47 ?x. }"
    },
    {
        "input": "Query: what language do the assyrians speak?\nEntities:Assyrian Empire with QID Q41137;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41137 wdt:language_used ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1439",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41137 wdt:P2936 ?x. }"
    },
    {
        "input": "Query: who plays mary jane in spiderman 3?\nEntities:Mary Jane Watson with QID Q63729056; Spider-Man 3 with QID Q182212;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q182212 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q63729056. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1440",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q182212 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q63729056. }"
    },
    {
        "input": "Query: where was abraham lincoln buried?\nEntities:Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:place_of_burial ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1441",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:P119 ?x. }"
    },
    {
        "input": "Query: who was the grandson of king david's father?\nEntities:David with QID Q41370;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41370 wdt:father ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1442",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41370 wdt:P22 ?x. }"
    },
    {
        "input": "Query: when president lincoln was elected?\nEntities:President-elect of the United States with QID Q1467287; Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 p:position_held ?y. ?y ps:position_held wd:Q1467287; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1443",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 p:P39 ?y. ?y ps:P39 wd:Q1467287; pq:P580 ?x. }"
    },
    {
        "input": "Query: when was the last time the oakland raiders won the super bowl?\nEntities:Las Vegas Raiders with QID Q324523; Super Bowl with QID Q32096;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner wd:Q324523; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1444",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1346 wd:Q324523; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: where is devon sawa now?\nEntities:Devon Sawa with QID Q317308;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q317308 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1446",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q317308 wdt:P551 ?x. }"
    },
    {
        "input": "Query: who did the cleveland browns draft?\nEntities:Cleveland Browns with QID Q223527;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:drafted_by wd:Q223527. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1447",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P647 wd:Q223527. }"
    },
    {
        "input": "Query: who was marilyn monroe's parents?\nEntities:Marilyn Monroe with QID Q4616;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4616 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1448",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4616 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: what to do when traveling to london?\nEntities:London with QID Q84;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q84. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1449",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q84. }"
    },
    {
        "input": "Query: where is shoreditch?\nEntities:Shoreditch with QID Q1027127;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1027127 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1450",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1027127 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where does the spanish language come from?\nEntities:Spanish with QID Q1321;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1321 wdt:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1452",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1321 wdt:P279 ?x. }"
    },
    {
        "input": "Query: where does ryan lochte live now?\nEntities:Ryan Lochte with QID Q201517;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q201517 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1454",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q201517 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what timezone is tennessee nashville?\nEntities:Nashville with QID Q23197;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23197 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1455",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23197 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what political party was henry clay?\nEntities:Henry Clay with QID Q319630;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q319630 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1456",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q319630 wdt:P102 ?x. }"
    },
    {
        "input": "Query: what is capital city of ontario?\nEntities:Ontario with QID Q1904;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1904 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1457",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1904 wdt:P36 ?x. }"
    },
    {
        "input": "Query: what money is used in england?\nEntities:England with QID Q21;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q21 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1458",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q21 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who did corey feldman married?\nEntities:Corey Feldman with QID Q375419;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q375419 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1459",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q375419 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who is the voice of lois from family guy?\nEntities:Family Guy with QID Q5930; Lois Griffin with QID Q853073;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q853073. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1460",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q853073. }"
    },
    {
        "input": "Query: what was walt disney's first cartoon called?\nEntities:Walt Disney Animation Studios with QID Q1047410;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:part_of_the_series wd:walt_disney's_first_cartoon; p:inception ?p. ?p pq:start_time ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1461",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P179 wd:Q56070713; p:P571 ?p. ?p pq:P580 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: what did mary harris jones accomplish?\nEntities:Mary Harris Jones with QID Q107082;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q107082 wdt:award_received ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1462",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q107082 wdt:P166 ?x. }"
    },
    {
        "input": "Query: what currency do i need in egypt?\nEntities:Egypt with QID Q79;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1463",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where is ellis park rugby stadium?\nEntities:Ellis Park Stadium with QID Q182081;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q182081 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1465",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q182081 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what does the letters eu stand for?\nEntities:European Union with QID Q458;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q458 wdt:official_name ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1466",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q458 wdt:P1448 ?x. }"
    },
    {
        "input": "Query: what are the 5 countries in the united kingdom?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:contains_the_administrative_territorial_entity ?x. } LIMIT 5",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1467",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P150 ?x. } LIMIT 5"
    },
    {
        "input": "Query: what label is jojo signed to?\nEntities:JoJo with QID Q215219;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q215219 wdt:record_label ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1468",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q215219 wdt:P264 ?x. }"
    },
    {
        "input": "Query: who is the state senator of kentucky?\nEntities:Kentucky with QID Q1603; United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:state_senator. ?p pq:electoral_district ?y. ?y wdt:located_in_the_administrative_territorial_entity wd:Q1603. FILTER NOT EXISTS { ?p pq:end_time ?z. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1469",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4416090. ?p pq:P768 ?y. ?y wdt:P131 wd:Q1603. FILTER NOT EXISTS { ?p pq:P582 ?z. } }"
    },
    {
        "input": "Query: where did douglas macarthur die?\nEntities:Douglas MacArthur with QID Q127417;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q127417 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1470",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q127417 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what does russian people speak?\nEntities:Russia with QID Q159;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1471",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who is playing jason morgan on general hospital?\nEntities:General Hospital with QID Q1136370; Jason Morgan with QID Q6163143;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1136370 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q6163143. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1472",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1136370 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q6163143. }"
    },
    {
        "input": "Query: where is hong kong china?\nEntities:Hong Kong with QID Q8646;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8646 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1473",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8646 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what countries do they speak italian?\nEntities:Italian with QID Q652;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q652; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1474",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q652; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: who does david beckham play for in 2013?\nEntities:David Beckham with QID Q10520;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q10520 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2014-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1475",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q10520 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2014-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who nikki reed play in twilight?\nEntities:Nikki Reed with QID Q234847; Twilight with QID Q60506;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q60506 p:cast_member ?p. ?p ps:cast_member wd:Q234847; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1476",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q60506 p:P161 ?p. ?p ps:P161 wd:Q234847; pq:P453 ?x. }"
    },
    {
        "input": "Query: who does blake griffin play for in the nba?\nEntities:Blake Griffin with QID Q309783;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q309783 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1477",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q309783 wdt:P54 ?x. }"
    },
    {
        "input": "Query: who played mulder in the x files?\nEntities:Fox Mulder with QID Q2738; The X-Files with QID Q2744;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2744 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q2738. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1478",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2744 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q2738. }"
    },
    {
        "input": "Query: what are bridgit mendler's parents names?\nEntities:Bridgit Mendler with QID Q213736;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q213736 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1479",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q213736 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: what tourist attractions are in houston texas?\nEntities:Houston with QID Q16555;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q16555. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1480",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q16555. }"
    },
    {
        "input": "Query: who are the current maryland senators?\nEntities:Maryland with QID Q1391; United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:senators. ?p pq:electoral_district ?y. ?y wdt:located_in_the_administrative_territorial_entity wd:Q1391. FILTER NOT EXISTS { ?p pq:end_time ?z. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1481",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4416090. ?p pq:P768 ?y. ?y wdt:P131 wd:Q1391. FILTER NOT EXISTS { ?p pq:P582 ?z. } }"
    },
    {
        "input": "Query: where is the capital of canada on the map?\nEntities:Canada with QID Q16;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:capital ?p. ?p wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1482",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:P36 ?p. ?p wdt:P625 ?x. }"
    },
    {
        "input": "Query: what kind of paintings did frida kahlo do?\nEntities:Frida Kahlo with QID Q5588;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5588 wdt:movement ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1484",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5588 wdt:P135 ?x. }"
    },
    {
        "input": "Query: what was francisco vasquez de coronado known for?\nEntities:Francisco V\u00e1zquez de Coronado with QID Q271974;",
        "output": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q271974 schema:description ?x. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1485",
        "sparql": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q271974 schema:description ?x. } }"
    },
    {
        "input": "Query: what form of government does greece use?\nEntities:Greece with QID Q41;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1486",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where did the columbia river begin?\nEntities:Columbia River with QID Q2251;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2251 wdt:origin_of_the_watercourse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1487",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2251 wdt:P885 ?x. }"
    },
    {
        "input": "Query: who was the original voice of meg on family guy?\nEntities:Family Guy with QID Q5930; Meg Griffin with QID Q908772;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q908772. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1488",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q908772. }"
    },
    {
        "input": "Query: what movies has michael clarke duncan been in?\nEntities:Michael Clarke Duncan with QID Q483148;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q483148; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1489",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q483148; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what is jessica ennis sport?\nEntities:Jessica Ennis-Hill with QID Q6091;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6091 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1492",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6091 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where is tahiti bora bora?\nEntities:Tahiti with QID Q42000;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q42000 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1493",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q42000 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what are all of michael jackson albums?\nEntities:Quincy Jones with QID Q193645; Michael Jackson with QID Q2831;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:album; wdt:performer wd:Q2831. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1494",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q482994; wdt:P175 wd:Q2831. }"
    },
    {
        "input": "Query: where did joe namath live?\nEntities:Joe Namath with QID Q720558;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q720558 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1495",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q720558 wdt:P551 ?x. }"
    },
    {
        "input": "Query: who is my state senator and representative minnesota?\nEntities:United States of America with QID Q30; Minnesota with QID Q1527;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:state_senator. ?p pq:electoral_district ?y. ?y wdt:located_in_the_administrative_territorial_entity wd:Q1527. FILTER NOT EXISTS { ?p pq:end_time ?z. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1496",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4416090. ?p pq:P768 ?y. ?y wdt:P131 wd:Q1527. FILTER NOT EXISTS { ?p pq:P582 ?z. } }"
    },
    {
        "input": "Query: what films has kristen stewart starred in?\nEntities:Kristen Stewart with QID Q126599;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q126599; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1497",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q126599; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where do samsung lions play?\nEntities:Samsung Lions with QID Q490418;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q490418 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1498",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q490418 wdt:P115 ?x. }"
    },
    {
        "input": "Query: what does annie leibovitz do?\nEntities:Annie Leibovitz with QID Q225283;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q225283 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1500",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q225283 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who did mike tomlin play for?\nEntities:Mike Tomlin with QID Q371118;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q371118 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1502",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q371118 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what kind of currency does cuba use?\nEntities:Cuba with QID Q241;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q241 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1503",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q241 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who is ben roethlisberger parents?\nEntities:Ben Roethlisberger with QID Q537679;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q537679 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1504",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q537679 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: what movies have robert pattinson starred in?\nEntities:Robert Pattinson with QID Q36767;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q36767; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1505",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q36767; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what are the zoroastrian scriptures called?\nEntities:Zoroastrianism with QID Q9601;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9601 wdt:foundational_text ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1506",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9601 wdt:P457 ?x. }"
    },
    {
        "input": "Query: what political party is barack obama from?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1507",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P102 ?x. }"
    },
    {
        "input": "Query: what organization did martin luther king lead?\nEntities:Martin Luther King Jr. with QID Q8027;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:founded_by wd:Q8027. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1508",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P112 wd:Q8027. }"
    },
    {
        "input": "Query: what year did michael jordan started his career?\nEntities:Michael Jordan with QID Q41421;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41421 wdt:work_period_(start) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1511",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41421 wdt:P2031 ?x. }"
    },
    {
        "input": "Query: what currency should you take to thailand?\nEntities:Thailand with QID Q869;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1512",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what kind of guitar does jemaine clement play?\nEntities:guitar with QID Q6607; Jemaine Clement with QID Q439315;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:subclass_of* wd:Q6607; wdt:used_by wd:Q439315. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1513",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P279* wd:Q6607; wdt:P1535 wd:Q439315. }"
    },
    {
        "input": "Query: where was lance armstrong born and in what year?\nEntities:Lance Armstrong with QID Q2172;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2172 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1515",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2172 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what kind of money is used in israel?\nEntities:Israel with QID Q801;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1516",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where is george bush from?\nEntities:George W. Bush with QID Q207;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q207 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1517",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q207 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who is the falcons quarterback 2012?\nEntities:quarterback with QID Q622747; Atlanta Falcons with QID Q272059; Bowling Green Falcons football with QID Q16953142;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:position_played_on_team_/_speciality wd:Q622747; p:member_of_sports_team ?p. ?p ps:member_of_sports_team wd:Q272059; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1519",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P413 wd:Q622747; p:P54 ?p. ?p ps:P54 wd:Q272059; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what is the zip code for trenton ohio?\nEntities:Trenton with QID Q2374079;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2374079 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1520",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2374079 wdt:P281 ?x. }"
    },
    {
        "input": "Query: what is north dakota state's mascot?\nEntities:North Dakota State University with QID Q2000624;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2000624 wdt:mascot ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1521",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2000624 wdt:P822 ?x. }"
    },
    {
        "input": "Query: what is the work of charles darwin?\nEntities:Charles Darwin with QID Q1035;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:author wd:Q1035. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1522",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P50 wd:Q1035. }"
    },
    {
        "input": "Query: what movies have adam sandler been in?\nEntities:Adam Sandler with QID Q132952;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q132952; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1523",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q132952; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what was one of benjamin franklin's inventions?\nEntities:Benjamin Franklin with QID Q34969;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q34969. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1524",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q34969. }"
    },
    {
        "input": "Query: where did phil mickelson go to college?\nEntities:Phil Mickelson with QID Q325374;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q325374 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1525",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q325374 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what does duffy sing?\nEntities:Duffy with QID Q192587;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:performer wd:Q192587. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1527",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P175 wd:Q192587. }"
    },
    {
        "input": "Query: what school did tupac go to?\nEntities:Tupac Shakur with QID Q6107;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6107 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1528",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6107 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what does guyana speak?\nEntities:Guyana with QID Q734;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q734 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1529",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q734 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where did the flemish live?\nEntities:Flemings with QID Q242485;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q242485 wdt:country_of_origin ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1530",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q242485 wdt:P495 ?x. }"
    },
    {
        "input": "Query: what year did the houston rockets win their first championship?\nEntities:Houston Rockets with QID Q161345; NBA Finals with QID Q842375;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q161345; wdt:point_in_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1531",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q161345; wdt:P585 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: what college did harry s. truman attend?\nEntities:Harry S. Truman with QID Q11613;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11613 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1532",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11613 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what county is minneapolis mn in?\nEntities:Minneapolis with QID Q36091;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36091 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1534",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36091 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what religion in thailand?\nEntities:Thailand with QID Q869;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1535",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:P140 ?x. }"
    },
    {
        "input": "Query: who is queen elizabeth 1 father?\nEntities:Elizabeth I of England with QID Q7207;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7207 wdt:father ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1536",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7207 wdt:P22 ?x. }"
    },
    {
        "input": "Query: what other languages does switzerland speak?\nEntities:Switzerland with QID Q39;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1537",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what team is ronaldinho on?\nEntities:Ronaldinho with QID Q39444;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39444 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1538",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39444 wdt:P54 ?x. }"
    },
    {
        "input": "Query: who plays paul blart?\nEntities:Paul Blart with QID Q55730078;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q55730078. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1539",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q55730078. }"
    },
    {
        "input": "Query: who is kobe bryant wife bio?\nEntities:Kobe Bryant with QID Q25369;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q25369 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1540",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q25369 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what kind of government system does canada have?\nEntities:Canada with QID Q16;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1541",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what type of government did sparta greece have?\nEntities:Sparta with QID Q5690;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5690 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1542",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5690 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what kind of voting system does japan have?\nEntities:Japan with QID Q17;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1545",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what are the names of all the countries in africa?\nEntities:Africa with QID Q15;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:continent wd:Q15; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1546",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P30 wd:Q15; wdt:P31 wd:Q6256. }"
    },
    {
        "input": "Query: what is the name of the pittsburgh steelers stadium?\nEntities:Pittsburgh Steelers with QID Q191477;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q191477 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1548",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q191477 wdt:P115 ?x. }"
    },
    {
        "input": "Query: who was cleopatra married too?\nEntities:Cleopatra with QID Q635;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q635 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1549",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q635 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where was nicki minaj born?\nEntities:Nicki Minaj with QID Q162202;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q162202 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1550",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q162202 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what was jesse james wife name?\nEntities:Jesse James with QID Q213626;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q213626 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1551",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q213626 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who plays spike in buffy the vampire slayer?\nEntities:Buffy the Vampire Slayer with QID Q183513; Spike with QID Q2276742;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q2276742. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1552",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q2276742. }"
    },
    {
        "input": "Query: where was emperor hadrian born?\nEntities:Hadrian with QID Q1427;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1427 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1553",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1427 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who became president when roosevelt died in office?\nEntities:President of the United States with QID Q11696; Franklin Delano Roosevelt with QID Q8007;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8007 p:position_held ?p. ?p ps:position_held wd:Q11696; pq:replaced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1555",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8007 p:P39 ?p. ?p ps:P39 wd:Q11696; pq:P1366 ?x. }"
    },
    {
        "input": "Query: where did martin luther king went to school?\nEntities:Martin Luther King Jr. with QID Q8027;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8027 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1556",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8027 wdt:P69 ?x. }"
    },
    {
        "input": "Query: where did charles drew go to college?\nEntities:Charles Richard Drew with QID Q1065848;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1065848 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1557",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1065848 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: who voice acts peter griffin?\nEntities:Peter Griffin with QID Q28465;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q28465. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1559",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q28465. }"
    },
    {
        "input": "Query: who was charles darwin married to?\nEntities:Charles Darwin with QID Q1035;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1035 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1560",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1035 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who plays lynette on desperate housewives?\nEntities:Lynette Scavo with QID Q536140; Desperate Housewives with QID Q131758;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q131758 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q536140. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1561",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q131758 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q536140. }"
    },
    {
        "input": "Query: what year was michael jordan rookie year?\nEntities:Michael Jordan with QID Q41421; National Basketball Association with QID Q155223;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41421 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?y. ?y wdt:league wd:Q155223. ?p pq:start_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1562",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41421 p:P54 ?p. ?p ps:P54 ?y. ?y wdt:P118 wd:Q155223. ?p pq:P580 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: what timezone is the state of texas?\nEntities:Texas with QID Q1439;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1439 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1563",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1439 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what did chadwick identify?\nEntities:James Chadwick with QID Q80884;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q80884. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1564",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q80884. }"
    },
    {
        "input": "Query: where did kurt cobain die?\nEntities:Kurt Cobain with QID Q8446;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8446 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1566",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8446 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what county is jackson michigan in?\nEntities:Jackson with QID Q984374;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q984374 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1567",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q984374 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where was the battle of verdun held?\nEntities:Battle of Verdun with QID Q130847;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q130847 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1568",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q130847 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what system of government does nigeria have?\nEntities:Nigeria with QID Q1033;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1569",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who played boss hogg dukes of hazzard?\nEntities:Boss Hogg with QID Q2911540; The Dukes of Hazzard with QID Q1304408;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1304408 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q2911540. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1570",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1304408 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q2911540. }"
    },
    {
        "input": "Query: who played kitt in knight rider?\nEntities:Knight Rider with QID Q464009; KITT with QID Q1088996;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q464009 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q1088996. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1571",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q464009 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q1088996. }"
    },
    {
        "input": "Query: what religion did the ottoman turks follow?\nEntities:Ottoman Empire with QID Q12560;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q12560 wdt:official_religion ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1572",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q12560 wdt:P3075 ?x. }"
    },
    {
        "input": "Query: what timezone is toronto gmt?\nEntities:Toronto with QID Q172;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q172 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1574",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q172 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what religion is king henry viii?\nEntities:Henry VIII of England with QID Q38370;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38370 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1575",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38370 wdt:P140 ?x. }"
    },
    {
        "input": "Query: where did james baldwin go to school?\nEntities:James Baldwin with QID Q273210;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q273210 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1577",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q273210 wdt:P69 ?x. }"
    },
    {
        "input": "Query: who was joseph pulitzer and what did he do?\nEntities:Joseph Pulitzer with QID Q173417;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q173417 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1578",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q173417 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where did jane austen grow up?\nEntities:Jane Austen with QID Q36322;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36322 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1580",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36322 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what was basketball player michael jordan's major in college?\nEntities:Michael Jordan with QID Q41421;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41421 p:educated_at ?y. ?y pq:academic_major ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1581",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41421 p:P69 ?y. ?y pq:P812 ?x. }"
    },
    {
        "input": "Query: who made the american red cross?\nEntities:American Red Cross with QID Q470110;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q470110 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1582",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q470110 wdt:P112 ?x. }"
    },
    {
        "input": "Query: what kind government does canada have?\nEntities:Canada with QID Q16;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1583",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where does dr. sanjay gupta practice?\nEntities:Sanjay Gupta with QID Q510034;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q510034 wdt:employer ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1584",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q510034 wdt:P108 ?x. }"
    },
    {
        "input": "Query: what did newton discover or invent?\nEntities:Isaac Newton with QID Q935;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q935. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1585",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q935. }"
    },
    {
        "input": "Query: who played daniel larusso?\nEntities:Daniel LaRusso with QID Q55315887;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q55315887. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1586",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q55315887. }"
    },
    {
        "input": "Query: what happened to umaga wwe?\nEntities:Umaga with QID Q298315;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q298315 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1587",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q298315 wdt:P509 ?x. }"
    },
    {
        "input": "Query: who does david beckham play for in 2012?\nEntities:David Beckham with QID Q10520;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q10520 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1589",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q10520 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what movies did jj abrams direct?\nEntities:J. J. Abrams with QID Q188137;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:director wd:Q188137. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1591",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P57 wd:Q188137. }"
    },
    {
        "input": "Query: what countries does armenia border?\nEntities:Armenia with QID Q399;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q399 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1592",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q399 wdt:P47 ?x. }"
    },
    {
        "input": "Query: what two countries speak italian?\nEntities:Italian with QID Q652;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:language_used wd:Q652. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1594",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P2936 wd:Q652. }"
    },
    {
        "input": "Query: when richard nixon was president?\nEntities:Richard Nixon with QID Q9588; President of the United States with QID Q11696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9588 p:position_held ?y. ?y ps:position_held wd:Q11696; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1595",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9588 p:P39 ?y. ?y ps:P39 wd:Q11696; pq:P580 ?x. }"
    },
    {
        "input": "Query: what job did martin luther king jr have?\nEntities:Martin Luther King Jr. with QID Q8027;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8027 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1596",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8027 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what characters does seth macfarlane voice?\nEntities:Seth MacFarlane with QID Q188492;",
        "output": "SELECT DISTINCT ?x WHERE { ?y p:voice_actor ?p. ?p ps:voice_actor wd:Q188492; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1597",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y p:P725 ?p. ?p ps:P725 wd:Q188492; pq:P453 ?x. }"
    },
    {
        "input": "Query: where did macho camacho got shot at?\nEntities:H\u00e9ctor Camacho with QID Q114355;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q114355 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1598",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q114355 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what has ian somerhalder played in?\nEntities:Ian Somerhalder with QID Q130447;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q130447; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1599",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q130447; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: who is andrew carnegie and what did he do?\nEntities:Andrew Carnegie with QID Q484265;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q484265 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1601",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q484265 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who plays lorne on angel?\nEntities:Angel with QID Q212156; Lorne with QID Q2295237;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q212156 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q2295237. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1602",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q212156 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q2295237. }"
    },
    {
        "input": "Query: what form of government exists in china?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1603",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what influenced abraham lincoln to become president?\nEntities:President of the United States with QID Q11696; Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1604",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:P737 ?x. }"
    },
    {
        "input": "Query: who is jeremy sumpter?\nEntities:Jeremy Sumpter with QID Q316964;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q316964 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1605",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q316964 wdt:P106 ?x. }"
    },
    {
        "input": "Query: when last did real madrid win the champions league?\nEntities:UEFA Champions League with QID Q18756; Real Madrid CF with QID Q8682;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:uefa_champions_league_final; wdt:winner wd:Q8682; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1606",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31 wd:Q80716240; wdt:P1346 wd:Q8682; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: who was the winner of the 2009 nobel peace prize?\nEntities:Nobel Peace Prize with QID Q35637;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35637 p:winner ?p. ?p ps:winner ?x; pq:point_in_time ?y. FILTER((?y < \"2010-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2009-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1607",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35637 p:P1346 ?p. ?p ps:P1346 ?x; pq:P585 ?y. FILTER((?y < \"2010-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2009-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who is ruling north korea now?\nEntities:North Korea with QID Q423;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q423 wdt:head_of_state ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1608",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q423 wdt:P35 ?x. }"
    },
    {
        "input": "Query: who does cristiano ronaldo play for now?\nEntities:Cristiano Ronaldo with QID Q11571;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11571 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1610",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11571 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what state did henry clay represent?\nEntities:Henry Clay with QID Q319630;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q319630 p:position_held ?p. ?p pq:start_time ?z; pq:electoral_district ?y. ?y wdt:located_in_the_administrative_territorial_entity ?x. } ORDER BY DESC (?z) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1611",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q319630 p:P39 ?p. ?p pq:P580 ?z; pq:P768 ?y. ?y wdt:P131 ?x. } ORDER BY DESC (?z) LIMIT 1"
    },
    {
        "input": "Query: what country was vasco nunez de balboa born in?\nEntities:Vasco N\u00fa\u00f1ez de Balboa with QID Q19080;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q19080 wdt:place_of_birth ?p. ?p wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1612",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q19080 wdt:P19 ?p. ?p wdt:P17 ?x. }"
    },
    {
        "input": "Query: which states does the mississippi river pass through?\nEntities:Mississippi River with QID Q1497;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1497 wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1613",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1497 wdt:P131+ ?x. ?x wdt:P31/wdt:P279* wd:Q107390. }"
    },
    {
        "input": "Query: where was san gabriel arcangel located?\nEntities:Mission San Gabriel Arc\u00e1ngel with QID Q1939046;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1939046 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1614",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1939046 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who was the emperor before nero?\nEntities:Nero with QID Q1413; Roman emperor with QID Q842606;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1413 p:position_held ?p. ?p ps:position_held wd:Q842606; pq:replaces ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1615",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1413 p:P39 ?p. ?p ps:P39 wd:Q842606; pq:P1365 ?x. }"
    },
    {
        "input": "Query: what type of artwork did henri matisse produce?\nEntities:Henri Matisse with QID Q5589;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5589 wdt:movement ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1616",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5589 wdt:P135 ?x. }"
    },
    {
        "input": "Query: what is gibby's mom's name?\nEntities:Gibby Haynes with QID Q5559079;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5559079 wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1617",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5559079 wdt:P25 ?x. }"
    },
    {
        "input": "Query: what type of music does ella fitzgerald sing?\nEntities:Ella Fitzgerald with QID Q1768;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1768 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1618",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1768 wdt:P136 ?x. }"
    },
    {
        "input": "Query: what are the best places to go in germany?\nEntities:Germany with QID Q183;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q183. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1620",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q183. }"
    },
    {
        "input": "Query: what movies are directed by steven spielberg?\nEntities:Steven Spielberg with QID Q8877;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:director wd:Q8877. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1621",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P57 wd:Q8877. }"
    },
    {
        "input": "Query: what instrument does mike huckabee play?\nEntities:Mike Huckabee with QID Q158813;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q158813 wdt:instrument ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1622",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q158813 wdt:P1303 ?x. }"
    },
    {
        "input": "Query: what movies does matt damon play in?\nEntities:Matt Damon with QID Q175535;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q175535; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1623",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q175535; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where is basque located?\nEntities:Basque Autonomous Community with QID Q3995;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3995 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1624",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3995 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what movies does alyson stoner play in?\nEntities:Alyson Stoner with QID Q229263;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q229263; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1625",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q229263; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: who did paul jr marry?\nEntities:",
        "output": "SELECT DISTINCT ?x WHERE { wd:paul_jr wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1626",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1977242 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what region is czech republic in?\nEntities:Czech Republic with QID Q213;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q213 wdt:part_of ?x. ?x wdt:instance_of/wdt:subclass_of* wd:geographic_region. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1628",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q213 wdt:P361 ?x. ?x wdt:P31 wd:Q82794. }"
    },
    {
        "input": "Query: who the voice of jack skellington?\nEntities:Jack Skellington with QID Q2708262;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q2708262. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1629",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q2708262. }"
    },
    {
        "input": "Query: who raised queen victoria?\nEntities:Victoria with QID Q9439;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9439 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1630",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9439 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: who are the famous athletes in kenya?\nEntities:Kenya with QID Q114;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:human; wdt:country_of_citizenship wd:Q114; wdt:occupation ?p. ?p wdt:country_of_citizenship9+ wd:athletes. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1631",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q5; wdt:P27 wd:Q114; wdt:P106 ?p. ?p wdt:P279+ wd:Q2066131. }"
    },
    {
        "input": "Query: what to see in staten island new york?\nEntities:Staten Island with QID Q18432;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q18432. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1632",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q18432. }"
    },
    {
        "input": "Query: what continent is greenland located?\nEntities:Greenland with QID Q4148644;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4148644 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1633",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4148644 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what language do egyptians use?\nEntities:Egypt with QID Q79;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1634",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what teams did gretzky play on?\nEntities:Wayne Gretzky with QID Q209518;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q209518 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1635",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q209518 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where was obama educated?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1636",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P69 ?x. }"
    },
    {
        "input": "Query: who did wayne gretzky play 4?\nEntities:Wayne Gretzky with QID Q209518;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q209518 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1637",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q209518 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what are the major languages in italy?\nEntities:Italy with QID Q38;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1644",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where did the battle of new orleans start?\nEntities:Battle of New Orleans with QID Q41894;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41894 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1645",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41894 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what does the dominican republic speak?\nEntities:Dominican Republic with QID Q786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1646",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P37 ?x. }"
    },
    {
        "input": "Query: when did barry zito won the cy young?\nEntities:Barry Zito with QID Q809118; Cy Young Award with QID Q634857;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q809118 p:award_received ?p. ?p ps:award_received wd:Q634857; pq:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1647",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q809118 p:P166 ?p. ?p ps:P166 wd:Q634857; pq:P585 ?x. }"
    },
    {
        "input": "Query: who is paul revere and what did he do?\nEntities:Paul Revere with QID Q327071;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q327071 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1648",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q327071 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what airlines hub in phoenix?\nEntities:Phoenix with QID Q16556;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:airline_hub ?p. ?p wdt:located_in_the_administrative_territorial_entity wd:Q16556. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1650",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P113 ?p. ?p wdt:P131 wd:Q16556. }"
    },
    {
        "input": "Query: where did cutler jay go to college?\nEntities:Jay Cutler with QID Q937778;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q937778 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1651",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q937778 wdt:P69 ?x. }"
    },
    {
        "input": "Query: who did etta james marry?\nEntities:Etta James with QID Q182725;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q182725 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1652",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q182725 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who played andy in toy story 3?\nEntities:Toy Story 3 with QID Q187278;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q187278 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:andy. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1653",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q187278 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q1808466. }"
    },
    {
        "input": "Query: where is ann romney from?\nEntities:Ann Romney with QID Q1100946;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1100946 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1654",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1100946 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who was galileo galilei?\nEntities:Galileo Galilei with QID Q307;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q307 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1655",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q307 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what school did bill gates go to?\nEntities:Bill Gates with QID Q5284;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5284 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1656",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5284 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what movies did miley cyrus play in?\nEntities:Miley Cyrus with QID Q4235;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q4235; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1657",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q4235; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what country does dubai come under?\nEntities:Emirate of Dubai with QID Q613;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q613 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1658",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q613 wdt:P17 ?x. }"
    },
    {
        "input": "Query: who do nate robinson play for?\nEntities:Nate Robinson with QID Q315104;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q315104 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1659",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q315104 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where does the panama canal run through?\nEntities:Panama Canal with QID Q7350;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7350 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1661",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7350 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what years did jackie robinson play baseball?\nEntities:Jackie Robinson with QID Q221048;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q221048 wdt:work_period_(start)|wdt:work_period_(end) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1662",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q221048 wdt:P2031|wdt:P2032 ?x. }"
    },
    {
        "input": "Query: what countries use english as national language?\nEntities:English with QID Q1860;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q1860; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1663",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q1860; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: who all has steve nash played for?\nEntities:Steve Nash with QID Q192955;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q192955 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1664",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q192955 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where does jason statham live?\nEntities:Jason Statham with QID Q169963;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q169963 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1665",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q169963 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what language is cyprus using?\nEntities:Cyprus with QID Q229;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q229 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1667",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q229 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what to do in roatan bay?\nEntities:Roat\u00e1n with QID Q1419813;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q1419813. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1668",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q1419813. }"
    },
    {
        "input": "Query: what is the rainforest in peru called?\nEntities:Peru with QID Q419;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:country wd:Q419; wdt:instance_of/wdt:subclass_of* wd:rainforest. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1670",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P17 wd:Q419; wdt:P31/wdt:P279* wd:Q9444. }"
    },
    {
        "input": "Query: where is mount jefferson located?\nEntities:Mount Jefferson with QID Q772492;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q772492 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1671",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q772492 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what is the state symbols of colorado?\nEntities:Colorado with QID Q1261;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1261 wdt:official_symbol ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1672",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1261 wdt:P2238 ?x. }"
    },
    {
        "input": "Query: where did buzz williams go to college?\nEntities:Buzz Williams with QID Q5003559;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5003559 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1673",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5003559 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what part of the world is south africa in?\nEntities:South Africa with QID Q258;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q258 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1676",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q258 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what movies did adam sandler play in?\nEntities:Adam Sandler with QID Q132952;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q132952; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1677",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q132952; wdt:P31 wd:Q11424. }"
    },
    {
        "input": "Query: where is washington d.c. at?\nEntities:Washington, D.C. with QID Q61;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q61 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1679",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q61 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who is the ravens quarterback 2012?\nEntities:quarterback with QID Q622747; Baltimore Ravens with QID Q276539;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:position_played_on_team_/_speciality wd:Q622747; p:member_of_sports_team ?p. ?p ps:member_of_sports_team wd:Q276539; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1680",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P413 wd:Q622747; p:P54 ?p. ?p ps:P54 wd:Q276539; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: when did aldi originate?\nEntities:Aldi with QID Q125054;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q125054 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1682",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q125054 wdt:P159 ?x. }"
    },
    {
        "input": "Query: who created microsoft windows?\nEntities:Microsoft Windows with QID Q1406;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1406 wdt:developer ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1683",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1406 wdt:P178 ?x. }"
    },
    {
        "input": "Query: what is john steinbeck best known for?\nEntities:John Steinbeck with QID Q39212;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39212 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1685",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39212 wdt:P106 ?x. }"
    },
    {
        "input": "Query: when was barack obama elected president?\nEntities:United States of America with QID Q30; President of the United States with QID Q11696; Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 p:position_held ?y. ?y ps:position_held wd:president-elect_of_the_united_states; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1686",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 p:P39 ?y. ?y ps:P39 wd:Q1467287; pq:P580 ?x. }"
    },
    {
        "input": "Query: who nominated anthony kennedy?\nEntities:Anthony Kennedy with QID Q11171;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11171 p:position_held ?p. ?p pq:nominated_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1687",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11171 p:P39 ?p. ?p pq:P4353 ?x. }"
    },
    {
        "input": "Query: who was the voice of darth vader in episode iii?\nEntities:Anakin Skywalker with QID Q51752; Star Wars: Episode III \u2013 Revenge of the Sith with QID Q42051;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q42051 p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q51752. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1688",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q42051 p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q51752. }"
    },
    {
        "input": "Query: what year did lamar odom play for the clippers?\nEntities:Los Angeles Clippers with QID Q976396; Lamar Odom with QID Q296403;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q296403 p:member_of_sports_team ?p. ?p ps:member_of_sports_team wd:Q976396; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1689",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q296403 p:P54 ?p. ?p ps:P54 wd:Q976396; pq:P580 ?x. }"
    },
    {
        "input": "Query: where the french language come from?\nEntities:French with QID Q150;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q150 p:subclass_of ?p. ?p ps:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1690",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q150 p:P279 ?p. ?p ps:P279 ?x. }"
    },
    {
        "input": "Query: what is the government of chile?\nEntities:Chile with QID Q298;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q298 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1691",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q298 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what movie does natalie portman play in?\nEntities:Natalie Portman with QID Q37876;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q37876; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1692",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q37876; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: who is the head coach of the new orleans saints?\nEntities:New Orleans Saints with QID Q172435;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q172435 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1693",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q172435 wdt:P286 ?x. }"
    },
    {
        "input": "Query: where does the shannon river flow?\nEntities:River Shannon with QID Q7488940;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7488940 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1694",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7488940 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what movies does zac efron star in?\nEntities:Zac Efron with QID Q45229;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q45229; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1695",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q45229; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what is the political system of nigeria?\nEntities:Nigeria with QID Q1033;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1696",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where is puerto galera?\nEntities:Puerto Galera with QID Q107593;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q107593 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1697",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q107593 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where is the battle of verdun located?\nEntities:Battle of Verdun with QID Q130847;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q130847 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1698",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q130847 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what currency does hungary have?\nEntities:Hungary with QID Q28;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q28 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1699",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q28 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what all did michael jackson own?\nEntities:Michael Jackson with QID Q2831;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:owner_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1701",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:P1830 ?x. }"
    },
    {
        "input": "Query: what form of government does canada have?\nEntities:Canada with QID Q16;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1702",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what language does people speak in australia?\nEntities:Australia with QID Q408;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1703",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who married jessica simpson?\nEntities:Jessica Simpson with QID Q168992;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q168992 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1704",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q168992 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who controls panama?\nEntities:Panama with QID Q804;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q804 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1706",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q804 wdt:P6 ?x. }"
    },
    {
        "input": "Query: when did baltimore orioles win the world series?\nEntities:Baltimore Orioles with QID Q650816; World Series with QID Q265538;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:winner wd:Q650816; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1707",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q650816; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what to do and see in miami florida?\nEntities:Miami with QID Q8652;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q8652. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1708",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q8652. }"
    },
    {
        "input": "Query: what movies did chris farley do?\nEntities:Chris Farley with QID Q311752;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q311752; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1711",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q311752; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where george washington carver go to school?\nEntities:George Washington Carver with QID Q296898;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q296898 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1715",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q296898 wdt:P69 ?x. }"
    },
    {
        "input": "Query: who plays steffy on bold and the beautiful?\nEntities:The Bold and the Beautiful with QID Q82729; Steffy Forrester with QID Q3972810;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q82729 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q3972810. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1716",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q82729 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q3972810. }"
    },
    {
        "input": "Query: where was the earthquake in christchurch?\nEntities:February 2011 Christchurch earthquake with QID Q151850;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q151850 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1717",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q151850 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what timezone is reno nv?\nEntities:Reno with QID Q49225;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q49225 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1718",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q49225 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who was niccolo machiavelli influenced by?\nEntities:Niccol\u00f2 Machiavelli with QID Q1399;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1399 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1719",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1399 wdt:P737 ?x. }"
    },
    {
        "input": "Query: what did cam newton do?\nEntities:Cam Newton with QID Q591678;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q591678 wdt:position_played_on_team_/_speciality ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1720",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q591678 wdt:P413 ?x. }"
    },
    {
        "input": "Query: what continent does the bahamas belong to?\nEntities:The Bahamas with QID Q778;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q778 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1722",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q778 wdt:P30 ?x. }"
    },
    {
        "input": "Query: where is baybrook mall?\nEntities:Baybrook Mall with QID Q4874388;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4874388 wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1723",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4874388 wdt:P625 ?x. }"
    },
    {
        "input": "Query: where did isaac newton go to high school?\nEntities:Isaac Newton with QID Q935;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q935 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1725",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q935 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: what planet did princess leia call home?\nEntities:Leia Organa with QID Q51797;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q51797 wdt:home_world ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1726",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q51797 wdt:P1165 ?x. }"
    },
    {
        "input": "Query: what kind of money do you use in costa rica?\nEntities:Costa Rica with QID Q800;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q800 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1728",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q800 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where is bob marley from where was he born?\nEntities:Bob Marley with QID Q409;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q409 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1729",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q409 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what did randy jackson play in journey?\nEntities:Randy Jackson with QID Q337521; Journey with QID Q464749;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q464749 p:has_part(s) ?p. ?p ps:has_part(s) wd:Q337521; pq:object_has_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1731",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q464749 p:P527 ?p. ?p ps:P527 wd:Q337521; pq:P3831 ?x. }"
    },
    {
        "input": "Query: what currency can you use in aruba?\nEntities:Aruba with QID Q21203;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q21203 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1735",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q21203 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where does roman abramovich live?\nEntities:Roman Abramovich with QID Q171428;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q171428 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1736",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q171428 wdt:P551 ?x. }"
    },
    {
        "input": "Query: who is nolan ryan married to?\nEntities:Nolan Ryan with QID Q721948;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q721948 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1737",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q721948 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who played carlton banks?\nEntities:Carlton Banks with QID Q9697446;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q9697446. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1741",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q9697446. }"
    },
    {
        "input": "Query: who is the current leader of cuba today?\nEntities:Cuba with QID Q241;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q241 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1743",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q241 wdt:P6 ?x. }"
    },
    {
        "input": "Query: what books did emily dickinson wrote?\nEntities:Emily Dickinson with QID Q4441;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:author wd:Q4441; wdt:instance_of/wdt:subclass_of* wd:literary_work. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1744",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P50 wd:Q4441; wdt:P31 wd:Q7725634. }"
    },
    {
        "input": "Query: what hotel should i stay in san francisco?\nEntities:San Francisco with QID Q62;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:hotel; wdt:located_in_the_administrative_territorial_entity wd:Q62. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1747",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q27686; wdt:P131 wd:Q62. }"
    },
    {
        "input": "Query: who created youtube?\nEntities:YouTube with QID Q866;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q866 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1751",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q866 wdt:P112 ?x. }"
    },
    {
        "input": "Query: what to do in hong kong for a week?\nEntities:Hong Kong with QID Q8646;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q8646. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1752",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q8646. }"
    },
    {
        "input": "Query: what influenced andy warhol's work?\nEntities:Andy Warhol with QID Q5603;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5603 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1754",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5603 wdt:P737 ?x. }"
    },
    {
        "input": "Query: what is fresno state's zip code?\nEntities:Fresno with QID Q43301;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43301 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1755",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43301 wdt:P281 ?x. }"
    },
    {
        "input": "Query: who is angelina jolie husband name?\nEntities:Angelina Jolie with QID Q13909;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q13909 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1756",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q13909 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what kourtney kardashian baby girls name?\nEntities:Kourtney Kardashian with QID Q575689;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q575689 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1757",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q575689 wdt:P40 ?x. }"
    },
    {
        "input": "Query: what is the present form of government in iran?\nEntities:Iran with QID Q794;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1758",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what does icelandic sound like?\nEntities:Icelandic with QID Q294;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q294 wdt:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1762",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q294 wdt:P279 ?x. }"
    },
    {
        "input": "Query: where does bill richardson live?\nEntities:Bill Richardson with QID Q311782;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q311782 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1763",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q311782 wdt:P551 ?x. }"
    },
    {
        "input": "Query: who are the judges on the us supreme court?\nEntities:Supreme Court of the United States with QID Q20706330;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:position_held ?y. ?y wdt:subclass_of wd:Q20706330. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1764",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P39 ?y. ?y wdt:P279 wd:Q20706330. }"
    },
    {
        "input": "Query: what club did aguero play for before man city?\nEntities:Manchester City F.C. with QID Q50602; Samir Nasri with QID Q1920; Sergio Ag\u00fcero with QID Q119562;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q119562 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:end_time ?y. ?x wdt:instance_of/wdt:subclass_of* wd:association_football_club. wd:Q1920 p:member_of_sports_team ?q. ?q ps:member_of_sports_team wd:Q50602; pq:start_time ?z. FILTER(?y <= ?z) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1766",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q119562 p:P54 ?p. ?p ps:P54 ?x; pq:P582 ?y. ?x wdt:P31 wd:Q476028. wd:Q1920 p:P54 ?q. ?q ps:P54 wd:Q50602; pq:P580 ?z. FILTER(?y <= ?z) }"
    },
    {
        "input": "Query: who plays jay adams in lords of dogtown?\nEntities:Lords of Dogtown with QID Q836622; Jay Adams with QID Q1350706;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q836622 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q1350706. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1767",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q836622 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q1350706. }"
    },
    {
        "input": "Query: what system of government is used in the united states of america?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1768",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what did the habsburg family control?\nEntities:House of Habsburg with QID Q65968;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q65968 wdt:owner_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1769",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q65968 wdt:P1830 ?x. }"
    },
    {
        "input": "Query: what is beyonce's daughters name?\nEntities:Beyonc\u00e9 with QID Q36153;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36153 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1770",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36153 wdt:P40 ?x. }"
    },
    {
        "input": "Query: when did the colts last win the superbowl?\nEntities:Super Bowl with QID Q32096; Indianapolis Colts with QID Q193753;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner wd:Q193753; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1771",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1346 wd:Q193753; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what college did michael jordan play basketball for?\nEntities:Michael Jordan with QID Q41421;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41421 wdt:member_of_sports_team ?x. ?x wdt:instance_of/wdt:subclass_of* wd:college_sports_team. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1772",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41421 wdt:P54 ?x. ?x wdt:P31/wdt:P279* wd:Q18558301. }"
    },
    {
        "input": "Query: what songs has madonna written?\nEntities:Quincy Jones with QID Q193645; Madonna with QID Q1744;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:composer wd:Q1744. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1773",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P86 wd:Q1744. }"
    },
    {
        "input": "Query: what countries are located in the netherlands?\nEntities:Netherlands with QID Q55;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q55 wdt:contains_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1774",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q55 wdt:P150 ?x. }"
    },
    {
        "input": "Query: who was lincoln's vice president when he died?\nEntities:President of the United States with QID Q11696; Vice President of the United States with QID Q11699; Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:Q11699; pq:start_time ?y; pq:end_time ?z. wd:Q91 p:position_held ?q. ?q ps:position_held wd:Q11696; pq:start_time ?w; pq:end_time ?v. FILTER((?y >= ?w) && (?z <= ?v)) } ORDER BY DESC (?z) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1777",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q11699; pq:P580 ?y; pq:P582 ?z. wd:Q91 p:P39 ?q. ?q ps:P39 wd:Q11696; pq:P580 ?w; pq:P582 ?v. FILTER((?y >= ?w) && (?z <= ?v)) } ORDER BY DESC (?z) LIMIT 1"
    },
    {
        "input": "Query: where did pope benedict xvi live?\nEntities:Benedict XVI with QID Q2494;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2494 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1778",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2494 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what language brazil use?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1780",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where is tommy emmanuel from?\nEntities:Tommy Emmanuel with QID Q310298;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q310298 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1781",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q310298 wdt:P19 ?x. }"
    },
    {
        "input": "Query: with which country does south africa border?\nEntities:South Africa with QID Q258;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q258 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1782",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q258 wdt:P47 ?x. }"
    },
    {
        "input": "Query: what is there to do around austin texas?\nEntities:Austin with QID Q16559;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q16559. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1783",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q16559. }"
    },
    {
        "input": "Query: what countries in the world speak german?\nEntities:German with QID Q188;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q188; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1784",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q188; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: who plays effy in skins uk?\nEntities:Effy Stonem with QID Q3028809;",
        "output": "SELECT DISTINCT ?x WHERE { wd:skins_uk p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q3028809. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1785",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q326180 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q3028809. }"
    },
    {
        "input": "Query: what countries use the euro as official currency?\nEntities:euro with QID Q4916;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4916 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1786",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4916 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what kind of money do the netherlands use?\nEntities:Netherlands with QID Q55;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q55 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1787",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q55 wdt:P38 ?x. }"
    },
    {
        "input": "Query: which college did obama graduated?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1788",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: who is henry david thoreau?\nEntities:Henry David Thoreau with QID Q131149;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q131149 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1789",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q131149 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who are richard pryor children?\nEntities:Richard Pryor with QID Q294912;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q294912 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1790",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q294912 wdt:P40 ?x. }"
    },
    {
        "input": "Query: what are the official languages in spain?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1792",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what club did santi cazorla play for?\nEntities:Santiago Cazorla with QID Q185225;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q185225 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1793",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q185225 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what highschool did bill gates graduated from?\nEntities:Bill Gates with QID Q5284;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5284 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1794",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5284 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: where does the atlanta braves play?\nEntities:Atlanta Braves with QID Q461595;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q461595 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1795",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q461595 wdt:P115 ?x. }"
    },
    {
        "input": "Query: what year did detroit pistons win nba championships?\nEntities:Detroit Pistons with QID Q169661; NBA Finals with QID Q842375;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q169661; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1796",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q169661; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what do people from spain speak?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1798",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who played danielle rousseau on lost?\nEntities:Lost with QID Q23567; Danielle Rousseau with QID Q51381;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23567 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q51381. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1799",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23567 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q51381. }"
    },
    {
        "input": "Query: who did king tut married?\nEntities:Tutankhamon with QID Q12154;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q12154 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1801",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q12154 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what political party did john bell belong to?\nEntities:John Bell with QID Q1349142;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1349142 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1803",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1349142 wdt:P102 ?x. }"
    },
    {
        "input": "Query: what religion is mary queen of scots?\nEntities:Mary, Queen of Scots with QID Q131412;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q131412 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1805",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q131412 wdt:P140 ?x. }"
    },
    {
        "input": "Query: who is chris cooley married to?\nEntities:Chris Cooley with QID Q2964688;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2964688 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1806",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2964688 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where is port st johns florida?\nEntities:Port St. John with QID Q945047;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q945047 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1807",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q945047 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what teams does kroenke own?\nEntities:Stan Kroenke with QID Q945207;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q945207 wdt:owner_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1808",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q945207 wdt:P1830 ?x. }"
    },
    {
        "input": "Query: where was the battle of shiloh?\nEntities:Battle of Shiloh with QID Q943277;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q943277 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1809",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q943277 wdt:P276 ?x. }"
    },
    {
        "input": "Query: where is kate spade from?\nEntities:Kate Spade with QID Q275094;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q275094 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1811",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q275094 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what countries are in the caribbean?\nEntities:Caribbean with QID Q664609;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q664609 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1812",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q664609 wdt:P527 ?x. }"
    },
    {
        "input": "Query: when did the new york mets start playing baseball?\nEntities:New York Mets with QID Q692417;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q692417 wdt:inception ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1814",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q692417 wdt:P571 ?x. }"
    },
    {
        "input": "Query: what party was woodrow wilson from?\nEntities:Woodrow Wilson with QID Q34296;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34296 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1815",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34296 wdt:P102 ?x. }"
    },
    {
        "input": "Query: what part does seth macfarlane play in family guy?\nEntities:Family Guy with QID Q5930; Seth MacFarlane with QID Q188492;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor wd:Q188492; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1816",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 wd:Q188492; pq:P453 ?x. }"
    },
    {
        "input": "Query: what type of government does vietnam have today?\nEntities:Vietnam with QID Q881;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q881 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1817",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q881 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what did ben hall do?\nEntities:Ben Hall with QID Q4885774;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4885774 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1818",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4885774 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what type of aircraft does virgin america use?\nEntities:Virgin America with QID Q645084;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:operator wd:Q645084; wdt:instance_of/wdt:subclass_of* wd:aircraft_family. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1819",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P137 wd:Q645084; wdt:P31 wd:Q15056993. }"
    },
    {
        "input": "Query: what currency do mexico use?\nEntities:Mexico with QID Q96;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q96 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1820",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q96 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where is the university of oregon state?\nEntities:Oregon State University with QID Q861888;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q861888 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1821",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q861888 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who did george wendt play on cheers?\nEntities:George Wendt with QID Q505969; Cheers with QID Q732063;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q732063 p:cast_member ?p. ?p ps:cast_member wd:Q505969; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1823",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q732063 p:P161 ?p. ?p ps:P161 wd:Q505969; pq:P453 ?x. }"
    },
    {
        "input": "Query: who played cruella deville in 102 dalmatians?\nEntities:Cruella de Vil with QID Q388605; 102 Dalmatians with QID Q165847; Cruella de Vil with QID Q42711675;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q165847 p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q388605. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1824",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q165847 p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q388605. }"
    },
    {
        "input": "Query: what division did the baltimore colts play in?\nEntities:Indianapolis Colts with QID Q193753;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q193753 wdt:part_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1825",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q193753 wdt:P361 ?x. }"
    },
    {
        "input": "Query: what year did us invaded iraq?\nEntities:Iraq War with QID Q545449; 2003 invasion of Iraq with QID Q107802;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q545449 wdt:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1826",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q545449 wdt:P580 ?x. }"
    },
    {
        "input": "Query: what is the local currency in the dominican republic?\nEntities:Dominican Republic with QID Q786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1827",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what is the capital city of canada on a map?\nEntities:Canada with QID Q16;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:capital ?p. ?p wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1828",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:P36 ?p. ?p wdt:P625 ?x. }"
    },
    {
        "input": "Query: what is the name of currency used in spain?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1829",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what movie did tom hanks won his first oscar?\nEntities:Tom Hanks with QID Q2263; Academy Awards with QID Q19020;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2263 p:award_received ?p. ?p ps:award_received ?y; pq:for_work ?x; pq:point_in_time ?z. ?y wdt:instance_of/wdt:subclass_of* wd:academy_awards. } ORDER BY ?z LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1832",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2263 p:P166 ?p. ?p ps:P166 ?y; pq:P1686 ?x; pq:P585 ?z. ?y wdt:P31 wd:Q19020. } ORDER BY ?z LIMIT 1"
    },
    {
        "input": "Query: who played bilbo baggins?\nEntities:Bilbo Baggins with QID Q185737;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q185737. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1834",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q185737. }"
    },
    {
        "input": "Query: what famous people are from kansas city?\nEntities:Kansas City with QID Q41819;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:place_of_birth wd:Q41819. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1835",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P19 wd:Q41819. }"
    },
    {
        "input": "Query: what country did francis drake represent?\nEntities:Francis Drake with QID Q36517;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36517 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1836",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36517 wdt:P27 ?x. }"
    },
    {
        "input": "Query: what timezone is indianapolis indiana in?\nEntities:Indianapolis with QID Q6346;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6346 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1837",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6346 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who ran against bill clinton for president?\nEntities:Bill Clinton with QID Q1124; United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:united_states_presidential_election; wdt:candidate wd:Q1124; p:candidate ?y. ?y ps:candidate ?x. FILTER(?x NOT IN(wd:Q1124)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1839",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31 wd:Q47566; wdt:P726 wd:Q1124; p:P726 ?y. ?y ps:P726 ?x. FILTER(?x NOT IN(wd:Q1124)) }"
    },
    {
        "input": "Query: what books did lincoln write?\nEntities:Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:written_work; wdt:author wd:Q91. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1840",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q47461344; wdt:P50 wd:Q91. }"
    },
    {
        "input": "Query: what did corey haim act in?\nEntities:Corey Haim with QID Q342370;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q342370; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1842",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q342370; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: who is the publisher of the wall street journal?\nEntities:The Wall Street Journal with QID Q164746;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q164746 wdt:publisher ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1843",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q164746 wdt:P123 ?x. }"
    },
    {
        "input": "Query: what do tibetan people speak?\nEntities:Tibetan people with QID Q187985;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q187985 wdt:language_used ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1845",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q187985 wdt:P2936 ?x. }"
    },
    {
        "input": "Query: what form of government does afghanistan have?\nEntities:Afghanistan with QID Q889;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q889 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1846",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q889 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who was the wife of king edward vii?\nEntities:Edward VII with QID Q20875;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q20875 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1847",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q20875 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what position did john stockton play?\nEntities:John Stockton with QID Q213346;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q213346 wdt:position_played_on_team_/_speciality ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1848",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q213346 wdt:P413 ?x. }"
    },
    {
        "input": "Query: when did freddy krueger die?\nEntities:Freddy Krueger with QID Q329466;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q329466 wdt:date_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1850",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q329466 wdt:P570 ?x. }"
    },
    {
        "input": "Query: who did troy aikman play for?\nEntities:Troy Aikman with QID Q525002;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q525002 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1853",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q525002 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where is universal studios california theme park?\nEntities:Universal Studios Hollywood with QID Q1337576;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1337576 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1856",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1337576 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where the grimm brothers were born?\nEntities:Jacob Grimm with QID Q6701;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6701 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1857",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6701 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what to do with kids in phx az?\nEntities:Phoenix with QID Q16556;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q16556. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1859",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q16556. }"
    },
    {
        "input": "Query: where does kirk cameron live now?\nEntities:Kirk Cameron with QID Q471858;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q471858 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1860",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q471858 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what continent is greenland apart of?\nEntities:Greenland with QID Q4148644;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4148644 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1861",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4148644 wdt:P30 ?x. }"
    },
    {
        "input": "Query: who made the ancient egyptian pyramids?\nEntities:Egyptian pyramids with QID Q175582; Great Pyramid of Giza with QID Q37200;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37200 wdt:commissioned_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1863",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37200 wdt:P88 ?x. }"
    },
    {
        "input": "Query: which asian country has the biggest population?\nEntities:Asia with QID Q48;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:country; wdt:continent wd:Q48; wdt:population ?y. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1864",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q6256; wdt:P30 wd:Q48; wdt:P1082 ?y. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: where did the san diego chargers originate?\nEntities:Los Angeles Chargers with QID Q272220;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q272220 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1865",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q272220 wdt:P159 ?x. }"
    },
    {
        "input": "Query: who was the voice of nemo's dad?\nEntities:",
        "output": "SELECT DISTINCT ?x WHERE { wd:nemo wdt:father ?y. ?p p:voice_actor ?z. ?z ps:voice_actor ?x; pq:character_role ?y. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1866",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3338016 wdt:P22 ?y. ?p p:P725 ?z. ?z ps:P725 ?x; pq:P453 ?y. }"
    },
    {
        "input": "Query: what 4 countries are part of the united kingdom?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:contains_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1867",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P150 ?x. }"
    },
    {
        "input": "Query: who was king george v father?\nEntities:George V with QID Q269412; George VI with QID Q280856;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q269412 wdt:father ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1868",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q269412 wdt:P22 ?x. }"
    },
    {
        "input": "Query: who won last year's nfl super bowl?\nEntities:Super Bowl with QID Q32096;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner ?x; wdt:point_in_time ?y. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1869",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31 wd:Q32096; wdt:P1346 ?x; wdt:P585 ?y. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: who played michael myers in halloween 4?\nEntities:Michael Myers with QID Q1426891; Halloween 4: The Return of Michael Myers with QID Q959853;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q959853 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q1426891. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1870",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q959853 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q1426891. }"
    },
    {
        "input": "Query: what language do chinese?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1871",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what happened to nagasaki?\nEntities:Nagasaki with QID Q38234;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38234 wdt:significant_event ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1873",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38234 wdt:P793 ?x. }"
    },
    {
        "input": "Query: what movies did james franco play in?\nEntities:James Franco with QID Q306403;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q306403; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1875",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q306403; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what does bob dylan sing?\nEntities:Bob Dylan with QID Q392;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:performer wd:Q392. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1876",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P175 wd:Q392. }"
    },
    {
        "input": "Query: what year did john adams get elected president?\nEntities:John Adams with QID Q11806; President of the United States with QID Q11696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11806 p:position_held ?y. ?y ps:position_held wd:president-elect_of_the_united_states; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1877",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11806 p:P39 ?y. ?y ps:P39 wd:Q1467287; pq:P580 ?x. }"
    },
    {
        "input": "Query: what to do in palo alto ca with kids?\nEntities:Palo Alto with QID Q47265;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q47265. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1878",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q47265. }"
    },
    {
        "input": "Query: what country did jacques cartier came from?\nEntities:Jacques Cartier with QID Q7321;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7321 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1879",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7321 wdt:P27 ?x. }"
    },
    {
        "input": "Query: what disease did abe lincoln have?\nEntities:Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:medical_condition ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1880",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:P1050 ?x. }"
    },
    {
        "input": "Query: what are the holidays of islam?\nEntities:Islam with QID Q432;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:public_holiday; wdt:religion_or_worldview wd:Q432. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1881",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q1197685; wdt:P140 wd:Q432. }"
    },
    {
        "input": "Query: what represents ghana?\nEntities:Ghana with QID Q117;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q117 wdt:official_symbol ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1884",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q117 wdt:P2238 ?x. }"
    },
    {
        "input": "Query: what to see in downtown asheville nc?\nEntities:Asheville with QID Q648501;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q648501. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1885",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q648501. }"
    },
    {
        "input": "Query: where did carrie underwood live?\nEntities:Carrie Underwood with QID Q215546;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q215546 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1886",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q215546 wdt:P19 ?x. }"
    },
    {
        "input": "Query: when did carolina hurricanes win the cup?\nEntities:Carolina Hurricanes with QID Q201857; Stanley Cup with QID Q211872;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:stanley_cup; wdt:point_in_time ?x; wdt:winner wd:Q201857. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1888",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31 wd:Q211872; wdt:P585 ?x; wdt:P1346 wd:Q201857. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: who does jr smith play for 2012?\nEntities:J. R. Smith with QID Q669334;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q669334 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1889",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q669334 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who currently owns the steelers?\nEntities:Pittsburgh Steelers with QID Q191477;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q191477 wdt:owned_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1890",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q191477 wdt:P127 ?x. }"
    },
    {
        "input": "Query: where was toni braxton born and raised?\nEntities:Toni Braxton with QID Q155412;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155412 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1891",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155412 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who has dirk nowitzki played for?\nEntities:Dirk Nowitzki with QID Q44068;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q44068 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1892",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q44068 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what is the currency in the dominican republic called?\nEntities:Dominican Republic with QID Q786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1893",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where is shoreview mn?\nEntities:Shoreview with QID Q989471;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q989471 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1894",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q989471 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what did maria theresa rule?\nEntities:Maria Theresa of Austria with QID Q131706;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q131706 wdt:noble_title ?p. ?p wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1895",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q131706 wdt:P97 ?p. ?p wdt:P17 ?x. }"
    },
    {
        "input": "Query: what was jack london's education?\nEntities:Jack London with QID Q45765;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q45765 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1896",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q45765 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what club team does ronaldinho play for?\nEntities:Ronaldinho with QID Q39444;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39444 wdt:member_of_sports_team ?x. ?x wdt:instance_of/wdt:subclass_of* wd:sports_club. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1897",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39444 wdt:P54 ?x. ?x wdt:P31/wdt:P279* wd:Q847017. }"
    },
    {
        "input": "Query: which countries share borders with spain?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1898",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P47 ?x. }"
    },
    {
        "input": "Query: what is the official currency in france?\nEntities:France with QID Q142;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1899",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what state did roger sherman represent at the constitutional convention?\nEntities:Roger Sherman with QID Q354721; Constitutional Convention with QID Q405475;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q405475 p:participant ?p. ?p ps:participant wd:Q354721; pq:electoral_district ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1901",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q405475 p:P710 ?p. ?p ps:P710 wd:Q354721; pq:P768 ?x. }"
    },
    {
        "input": "Query: what type of money do japanese use?\nEntities:Japan with QID Q17;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1902",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what county is bradenton fl located in?\nEntities:Bradenton with QID Q582121;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q582121 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1903",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q582121 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what is molly ringwald in?\nEntities:Molly Ringwald with QID Q231460;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q231460; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1904",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q231460; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what movies has scarlett johansson played in?\nEntities:Scarlett Johansson with QID Q34436;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q34436; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1905",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q34436; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what is the philadelphia church of god?\nEntities:Philadelphia Church of God with QID Q7182646;",
        "output": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q7182646 schema:description ?x. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1906",
        "sparql": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q7182646 schema:description ?x. } }"
    },
    {
        "input": "Query: where did david duke go to college?\nEntities:David Duke with QID Q163042;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q163042 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1907",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q163042 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where does bradley cooper live now?\nEntities:Bradley Cooper with QID Q205707;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q205707 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1908",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q205707 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what country did vasco da gama come from?\nEntities:Vasco da Gama with QID Q7328;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7328 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1910",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7328 wdt:P27 ?x. }"
    },
    {
        "input": "Query: what country do they speak farsi?\nEntities:Iran with QID Q794; Persian with QID Q9168;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q9168; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1911",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q9168; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: where does luke skywalker live in star wars?\nEntities:Luke Skywalker with QID Q51746;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q51746 wdt:home_world ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1913",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q51746 wdt:P1165 ?x. }"
    },
    {
        "input": "Query: what basketball team does kris humphrey play for?\nEntities:Kris Humphries with QID Q363421;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q363421 wdt:member_of_sports_team ?x. ?x wdt:instance_of/wdt:subclass_of* wd:basketball_team. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1914",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q363421 wdt:P54 ?x. ?x wdt:P31 wd:Q13393265. }"
    },
    {
        "input": "Query: what is time zone in hawaii?\nEntities:Hawaii with QID Q782;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q782 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1915",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q782 wdt:P421 ?x. }"
    },
    {
        "input": "Query: where did kobe bryant attend high school?\nEntities:Kobe Bryant with QID Q25369;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q25369 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1918",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q25369 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: what did doctor kevorkian do?\nEntities:Jack Kevorkian with QID Q46636;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q46636 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1919",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q46636 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where is chowchilla located?\nEntities:Chowchilla with QID Q985260;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q985260 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1920",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q985260 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what country is vatican city in?\nEntities:Vatican City with QID Q237;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q237 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1921",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q237 wdt:P17 ?x. }"
    },
    {
        "input": "Query: who played princess leia's mother in star wars?\nEntities:Leia Organa with QID Q51797;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q51797 wdt:mother ?z. ?w wdt:media_franchise wd:star_wars; p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role ?y. FILTER(?y = ?z) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1922",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q51797 wdt:P25 ?z. ?w wdt:P8345 wd:Q462; p:P161 ?p. ?p ps:P161 ?x; pq:P453 ?y. FILTER(?y = ?z) }"
    },
    {
        "input": "Query: what type of voting system does the uk have?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1923",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where donald trump went to college?\nEntities:Donald Trump with QID Q22686;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q22686 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1925",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q22686 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what did john howard study at university?\nEntities:John Howard with QID Q51330;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q51330 p:educated_at ?p. ?p ps:educated_at ?y; pq:academic_degree ?x. ?y wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1926",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q51330 p:P69 ?p. ?p ps:P69 ?y; pq:P512 ?x. ?y wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what did duke ellington do?\nEntities:Duke Ellington with QID Q4030;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4030 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1927",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4030 wdt:P106 ?x. }"
    },
    {
        "input": "Query: from which university did president obama receive his bachelor's degree?\nEntities:bachelor's degree with QID Q163727; Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 p:educated_at ?p. ?p ps:educated_at ?x; pq:academic_degree ?y. ?y wdt:instance_of/wdt:subclass_of* wd:bachelor's_degree. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1928",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 p:P69 ?p. ?p ps:P69 ?x; pq:P512 ?y. ?y wdt:P31 wd:Q163727. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what year did yankees win their first world series?\nEntities:New York Yankees with QID Q213417; World Series with QID Q265538;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:winner wd:Q213417; wdt:point_in_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1929",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q213417; wdt:P585 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: when was the last time the new england patriots won the superbowl?\nEntities:Super Bowl with QID Q32096; New England Patriots with QID Q193390;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner wd:Q193390; wdt:point_in_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1930",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1346 wd:Q193390; wdt:P585 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what films has morgan freeman narrated?\nEntities:Morgan Freeman with QID Q48337;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q48337; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1931",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q48337; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where are the atlanta falcons located?\nEntities:Atlanta Falcons with QID Q272059;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q272059 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1932",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q272059 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what is st francis patron saint of?\nEntities:Francis of Assisi with QID Q676555;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q676555 wdt:domain_of_saint_or_deity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1933",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q676555 wdt:P2925 ?x. }"
    },
    {
        "input": "Query: where was obama born?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1934",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where was tommy emmanuel born?\nEntities:Tommy Emmanuel with QID Q310298;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q310298 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1935",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q310298 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what techniques did frida kahlo use in her paintings?\nEntities:Frida Kahlo with QID Q5588;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5588 wdt:movement ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1936",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5588 wdt:P135 ?x. }"
    },
    {
        "input": "Query: who does larry david play in seinfeld?\nEntities:Larry David with QID Q23728; Seinfeld with QID Q23733;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23733 p:cast_member ?p. ?p ps:cast_member wd:Q23728; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1937",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23733 p:P161 ?p. ?p ps:P161 wd:Q23728; pq:P453 ?x. }"
    },
    {
        "input": "Query: what type of government does israel?\nEntities:Israel with QID Q801;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1938",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what political experience did abraham lincoln have?\nEntities:Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:position_held ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1939",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:P39 ?x. }"
    },
    {
        "input": "Query: where does brian williams live?\nEntities:Brian Williams with QID Q459695;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q459695 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1940",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q459695 wdt:P551 ?x. }"
    },
    {
        "input": "Query: where is downtown littleton?\nEntities:Littleton with QID Q953583;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q953583 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1941",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q953583 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what did shawnee smith star in?\nEntities:Shawnee Smith with QID Q233313;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q233313; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1942",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q233313; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what division is cincinnati bengals in?\nEntities:Cincinnati Bengals with QID Q223511;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q223511 wdt:part_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1943",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q223511 wdt:P361 ?x. }"
    },
    {
        "input": "Query: where was toussaint charbonneau from?\nEntities:Toussaint Charbonneau with QID Q1356512;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1356512 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1945",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1356512 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what countries include western europe?\nEntities:Western Europe with QID Q27496;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q27496 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1946",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q27496 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what timezone is new mexico currently in?\nEntities:New Mexico with QID Q1522;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1522 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1947",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1522 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who is the current president of china?\nEntities:people's republic with QID Q465613; People's Republic of China with QID Q148; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:head_of_state ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1948",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P35 ?x. }"
    },
    {
        "input": "Query: what is the legislature of missouri called?\nEntities:Missouri with QID Q1581;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1581 wdt:legislative_body ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1949",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1581 wdt:P194 ?x. }"
    },
    {
        "input": "Query: what did harriet beecher stowe do as an abolitionist?\nEntities:Harriet Beecher Stowe with QID Q102513;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q102513 wdt:notable_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1950",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q102513 wdt:P800 ?x. }"
    },
    {
        "input": "Query: what college did jerry rice attend?\nEntities:Jerry Rice with QID Q505423;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q505423 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1952",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q505423 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: who is liz lemon marrying on 30 rock?\nEntities:Liz Lemon with QID Q3835664;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3835664 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1953",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3835664 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where was the battle of appomattox located?\nEntities:Battle of Appomattox Court House with QID Q1355391;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1355391 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1954",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1355391 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where did the name rome come from?\nEntities:Rome with QID Q220;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q220 wdt:named_after ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1957",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q220 wdt:P138 ?x. }"
    },
    {
        "input": "Query: what time zone is fresno ca?\nEntities:Fresno with QID Q43301;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43301 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1958",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43301 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who was the governor of missouri in 1996?\nEntities:governor with QID Q132050;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:governoer_of_missouri; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"1997-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1996-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1959",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q20801667; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"1997-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1996-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what was the cause of death for sage stallone?\nEntities:Sage Stallone with QID Q440932;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q440932 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1960",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q440932 wdt:P509 ?x. }"
    },
    {
        "input": "Query: where did queen isabella live?\nEntities:Isabella I of Castile with QID Q45859;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q45859 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1961",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q45859 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who played carl fredricksen in up?\nEntities:Carl Fredricksen with QID Q3658760; Up with QID Q174811;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q174811 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q3658760. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1962",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q174811 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q3658760. }"
    },
    {
        "input": "Query: what language does the country italy speak?\nEntities:Italy with QID Q38;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1964",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who won the super bowl xliv 2010?\nEntities:2010 NFL season with QID Q622675; Super Bowl with QID Q32096; Super Bowl X with QID Q620277;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner ?x; wdt:point_in_time ?y. FILTER((?y < \"2011-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2010-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1965",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31 wd:Q32096; wdt:P1346 ?x; wdt:P585 ?y. FILTER((?y < \"2011-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2010-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what years did the yankees win the championship?\nEntities:New York Yankees with QID Q213417;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:championship; p:participating_team ?z; wdt:point_in_time ?x. ?z ps:participating_team wd:Q213417. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1969",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; p:P1923 ?z; wdt:P585 ?x. ?z ps:P1923 wd:Q213417. }"
    },
    {
        "input": "Query: what did samuel de champlain?\nEntities:Samuel de Champlain with QID Q68529;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q68529 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1970",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q68529 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what was william faulkner known for?\nEntities:William Faulkner with QID Q38392;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38392 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1971",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38392 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who was audrey hepburn's husbands?\nEntities:Audrey Hepburn with QID Q42786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q42786 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1973",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q42786 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who were queen elizabeth 1 parents?\nEntities:Elizabeth I of England with QID Q7207;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7207 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1974",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7207 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: what did robert koch do?\nEntities:Robert Koch with QID Q37193;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37193 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1976",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37193 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who does cristiano ronaldo play for?\nEntities:Cristiano Ronaldo with QID Q11571;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11571 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1977",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11571 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what currency is best to take to dominican republic?\nEntities:Dominican Republic with QID Q786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1978",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who's betty white?\nEntities:Betty White with QID Q373895;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q373895 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1979",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q373895 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who is lleyton hewitt?\nEntities:Lleyton Hewitt with QID Q180104;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q180104 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1981",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q180104 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what movies did quentin tarantino star in?\nEntities:Quentin Tarantino with QID Q3772;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q3772; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1982",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q3772; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what language does the new zealand speak?\nEntities:New Zealand with QID Q664;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q664 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1983",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q664 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what kind of cancer killed larry hagman have?\nEntities:Larry Hagman with QID Q100440; cancer with QID Q12078;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q100440 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1984",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q100440 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what kind of drugs does charlie sheen do?\nEntities:Charlie Sheen with QID Q103939;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q103939 wdt:medical_condition ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1985",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q103939 wdt:P1050 ?x. }"
    },
    {
        "input": "Query: what county is sacramento located in?\nEntities:Sacramento with QID Q18013;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q18013 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1987",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q18013 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what did audrey hepburn died of?\nEntities:Audrey Hepburn with QID Q42786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q42786 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1988",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q42786 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what country was the treaty of versailles written?\nEntities:Treaty of Versailles with QID Q8736;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8736 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1989",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8736 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what is st mary mascot?\nEntities:Saint Mary's College of California with QID Q7401829;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7401829 wdt:mascot ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1990",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7401829 wdt:P822 ?x. }"
    },
    {
        "input": "Query: who was irving berlin and what did he do?\nEntities:Irving Berlin with QID Q128746;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q128746 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1991",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q128746 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who shot j lennon?\nEntities:John Lennon with QID Q1203;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1203 wdt:killed_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1992",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1203 wdt:P157 ?x. }"
    },
    {
        "input": "Query: where is the denver broncos stadium located?\nEntities:Denver Broncos with QID Q223507;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q223507 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1994",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q223507 wdt:P115 ?x. }"
    },
    {
        "input": "Query: where did sir ernest shackleton live?\nEntities:Ernest Shackleton with QID Q957543;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q957543 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1995",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q957543 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what type of music is scott joplin?\nEntities:Scott Joplin with QID Q191499;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q191499 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1996",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q191499 wdt:P136 ?x. }"
    },
    {
        "input": "Query: where did the welsh language originate from?\nEntities:Welsh with QID Q9309;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9309 wdt:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1997",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9309 wdt:P279 ?x. }"
    },
    {
        "input": "Query: who does leia think her father is?\nEntities:Leia Organa with QID Q51797;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q51797 wdt:father ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1998",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q51797 wdt:P22 ?x. }"
    },
    {
        "input": "Query: what languages do people speak in switzerland?\nEntities:Switzerland with QID Q39;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-1999",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who is president of france?\nEntities:France with QID Q142; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2000",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:P6 ?x. }"
    },
    {
        "input": "Query: who did alf's voice?\nEntities:ALF with QID Q264221;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q264221. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2001",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q264221. }"
    },
    {
        "input": "Query: what was theodore roosevelt's political party?\nEntities:Theodore Roosevelt with QID Q33866;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q33866 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2002",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q33866 wdt:P102 ?x. }"
    },
    {
        "input": "Query: what year were the cincinnati reds founded?\nEntities:Cincinnati Reds with QID Q826751;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q826751 wdt:inception ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2003",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q826751 wdt:P571 ?x. }"
    },
    {
        "input": "Query: where ulysses s grant go to school?\nEntities:Ulysses S. Grant with QID Q34836;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34836 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2004",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34836 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what magazine did edgar allan poe work for?\nEntities:Edgar Allan Poe with QID Q16867;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16867 p:employer ?p. ?p ps:employer ?x. ?x wdt:instance_of/wdt:subclass_of* wd:magazine. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2006",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16867 p:P108 ?p. ?p ps:P108 ?x. ?x wdt:P31 wd:Q41298. }"
    },
    {
        "input": "Query: where did chickasaw indians live?\nEntities:Chickasaw with QID Q622728;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q622728 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2008",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q622728 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what music did antonio vivaldi compose?\nEntities:Antonio Vivaldi with QID Q1340;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1340 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2010",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1340 wdt:P136 ?x. }"
    },
    {
        "input": "Query: who plays batman in 2012?\nEntities:Batman with QID Q2695156;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?w; wdt:start_time ?y; wdt:end_time ?z. ?w ps:cast_member ?x; pq:character_role wd:Q2695156. FILTER((?y >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z < \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2011",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?w; wdt:P580 ?y; wdt:P582 ?z. ?w ps:P161 ?x; pq:P453 wd:Q2695156. FILTER((?y >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z < \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what is the timezone in vancouver?\nEntities:Vancouver with QID Q234053;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q234053 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2012",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q234053 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what time is world cup soccer?\nEntities:FIFA World Cup with QID Q19317;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q19317 wdt:event_interval ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2013",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q19317 wdt:P2257 ?x. }"
    },
    {
        "input": "Query: what county is stockton ca located in?\nEntities:Stockton with QID Q49240;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q49240 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2014",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q49240 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what did ronnie radke do?\nEntities:Ronnie Radke with QID Q2019307;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2019307 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2015",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2019307 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where does selena gomez live right now?\nEntities:Selena Gomez with QID Q83287;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q83287 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2016",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q83287 wdt:P551 ?x. }"
    },
    {
        "input": "Query: who is the member of rajya sabha?\nEntities:Rajya Sabha with QID Q244730;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:position_held wd:Q244730. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2017",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P39 wd:Q244730. }"
    },
    {
        "input": "Query: what form of government does czech republic have?\nEntities:Czech Republic with QID Q213;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q213 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2018",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q213 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who is the leader of syria now?\nEntities:Syria with QID Q858;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q858 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2019",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q858 wdt:P6 ?x. }"
    },
    {
        "input": "Query: what was eli whitney education?\nEntities:Eli Whitney with QID Q280930;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q280930 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2020",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q280930 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what movies has renee zellweger been in?\nEntities:Ren\u00e9e Zellweger with QID Q122614;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q122614; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2021",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q122614; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what other writers influenced charles dickens?\nEntities:Charles Dickens with QID Q5686;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5686 wdt:influenced_by ?x. ?x wdt:occupation wd:writers. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2022",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5686 wdt:P737 ?x. ?x wdt:P106 wd:Q36180. }"
    },
    {
        "input": "Query: where jay z was raised?\nEntities:Jay-Z with QID Q62766;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q62766 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2023",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q62766 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what currency does the dominican republic?\nEntities:Dominican Republic with QID Q786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2026",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what is daniel radcliffe name in the woman in black?\nEntities:Daniel Radcliffe with QID Q38119; The Woman in Black with QID Q841274;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q841274 p:cast_member ?p. ?p ps:cast_member wd:Q38119; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2027",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q841274 p:P161 ?p. ?p ps:P161 wd:Q38119; pq:P453 ?x. }"
    },
    {
        "input": "Query: what money do they use in thailand?\nEntities:Thailand with QID Q869;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2028",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where was battle of verdun located?\nEntities:Battle of Verdun with QID Q130847;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q130847 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2029",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q130847 wdt:P276 ?x. }"
    },
    {
        "input": "Query: where does avril lavigne live now?\nEntities:Avril Lavigne with QID Q30449;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30449 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2030",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30449 wdt:P551 ?x. }"
    },
    {
        "input": "Query: who plays stewie griffin's voice family guy?\nEntities:Family Guy with QID Q5930; Stewie Griffin with QID Q837909;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q837909. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2031",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q837909. }"
    },
    {
        "input": "Query: what should i see in london england?\nEntities:London with QID Q84;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q84. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2032",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q84. }"
    },
    {
        "input": "Query: what language do iraqi people speak?\nEntities:Iraq with QID Q796;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q796 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2034",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q796 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where did paul rudd go to high school?\nEntities:Paul Rudd with QID Q276525;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q276525 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2035",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q276525 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: what did regina hall play in?\nEntities:Regina Hall with QID Q235141;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q235141; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2038",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q235141; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: who plays jacob black in twilight?\nEntities:Twilight with QID Q160071; Jacob Black with QID Q716835;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q160071 p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q716835. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2039",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q160071 p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q716835. }"
    },
    {
        "input": "Query: what american penny is worth money?\nEntities:penny with QID Q161604;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q161604 wdt:face_value ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2040",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q161604 wdt:P3934 ?x. }"
    },
    {
        "input": "Query: what book did jacob riis wrote?\nEntities:Jacob Riis with QID Q379211;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:written_work; wdt:author wd:Q379211. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2041",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q47461344; wdt:P50 wd:Q379211. }"
    },
    {
        "input": "Query: who plays noah bennet?\nEntities:Noah Bennet with QID Q1063270;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q1063270. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2043",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q1063270. }"
    },
    {
        "input": "Query: who won american idol 2006 season 5?\nEntities:American Idol, season 5 with QID Q2666341; American Idol with QID Q201052;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2666341 wdt:winner ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2045",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2666341 wdt:P1346 ?x. }"
    },
    {
        "input": "Query: where do the chicago cubs play?\nEntities:Chicago Cubs with QID Q246782;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q246782 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2047",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q246782 wdt:P115 ?x. }"
    },
    {
        "input": "Query: where did reagan die?\nEntities:Ronald Reagan with QID Q9960;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9960 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2048",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9960 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what is the language used in indonesia?\nEntities:Indonesia with QID Q252;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q252 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2050",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q252 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what was irving langmuir famous for?\nEntities:Irving Langmuir with QID Q184286;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q184286 wdt:notable_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2051",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q184286 wdt:P800 ?x. }"
    },
    {
        "input": "Query: what is the official language of china called?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2053",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what was the name of martin luther king jr parents?\nEntities:Martin Luther King Jr. with QID Q8027;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8027 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2056",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8027 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: what money does guatemala use?\nEntities:Guatemala with QID Q774;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q774 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2057",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q774 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who was president when nelson rockefeller was vice president?\nEntities:President of the United States with QID Q11696; Nelson Rockefeller with QID Q11237;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?y. ?y ps:position_held wd:Q11696; pq:start_time ?p; pq:end_time ?q. wd:Q11237 p:position_held ?z. ?z ps:position_held wd:vice_president; pq:start_time ?w; pq:end_time ?v. FILTER((?w >= ?p) && (?v <= ?q)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2058",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?y. ?y ps:P39 wd:Q11696; pq:P580 ?p; pq:P582 ?q. wd:Q11237 p:P39 ?z. ?z ps:P39 wd:Q11699; pq:P580 ?w; pq:P582 ?v. FILTER((?w >= ?p) && (?v <= ?q)) }"
    },
    {
        "input": "Query: what year magic johnson retired?\nEntities:Magic Johnson with QID Q134183;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q134183 p:member_of_sports_team ?p. ?p pq:end_time ?x. } ORDER BY DESC (?x) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2059",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q134183 p:P54 ?p. ?p pq:P582 ?x. } ORDER BY DESC (?x) LIMIT 1"
    },
    {
        "input": "Query: what kind of government does spain have now?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2060",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who plays young john winchester in supernatural?\nEntities:Supernatural with QID Q130585; John Winchester with QID Q1088616;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q130585 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q1088616. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2062",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q130585 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q1088616. }"
    },
    {
        "input": "Query: where is shakira from originally?\nEntities:Shakira with QID Q34424;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34424 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2064",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34424 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where was the gettysburg war located?\nEntities:Battle of Gettysburg with QID Q33132;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q33132 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2066",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q33132 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what do people go to amsterdam for?\nEntities:Amsterdam with QID Q727;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q727. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2067",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q727. }"
    },
    {
        "input": "Query: who is the elected governor of california?\nEntities:governor with QID Q132050; California with QID Q99;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q99 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2068",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q99 wdt:P6 ?x. }"
    },
    {
        "input": "Query: what language chile speak?\nEntities:Chile with QID Q298;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q298 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2069",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q298 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what currency to take to side turkey?\nEntities:Turkey with QID Q43;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2071",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who founded the new democratic party?\nEntities:New Democratic Party with QID Q129634;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q129634 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2072",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q129634 wdt:P112 ?x. }"
    },
    {
        "input": "Query: what team did john madden play football for?\nEntities:John Madden with QID Q1345694;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1345694 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2074",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1345694 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what does julian clary do?\nEntities:Julian Clary with QID Q6307060;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6307060 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2075",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6307060 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where does the potomac river flow into?\nEntities:Potomac River with QID Q179444;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q179444 wdt:mouth_of_the_watercourse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2076",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q179444 wdt:P403 ?x. }"
    },
    {
        "input": "Query: where is the olympic national park located?\nEntities:Olympic National Park with QID Q372093;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q372093 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2077",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q372093 wdt:P131 ?x. }"
    },
    {
        "input": "Query: when does the world cup occur?\nEntities:FIFA World Cup with QID Q19317;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q19317 wdt:event_interval ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2078",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q19317 wdt:P2257 ?x. }"
    },
    {
        "input": "Query: what years the steelers won the super bowl?\nEntities:Pittsburgh Steelers with QID Q191477; Super Bowl with QID Q32096;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner wd:Q191477; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2079",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1346 wd:Q191477; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what art movement was vincent van gogh apart of?\nEntities:Vincent van Gogh with QID Q5582;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5582 wdt:movement ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2080",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5582 wdt:P135 ?x. }"
    },
    {
        "input": "Query: where does danish language come from?\nEntities:Danish with QID Q9035;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9035 wdt:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2081",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9035 wdt:P279 ?x. }"
    },
    {
        "input": "Query: what countries are in the baltic region?\nEntities:Baltic region with QID Q579938;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:continent wd:Q579938; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2082",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P30 wd:Q579938; wdt:P31 wd:Q6256. }"
    },
    {
        "input": "Query: what nation did hitler lead?\nEntities:Adolf Hitler with QID Q352;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q352 wdt:position_held ?y. ?y wdt:applies_to_jurisdiction ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2083",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q352 wdt:P39 ?y. ?y wdt:P1001 ?x. }"
    },
    {
        "input": "Query: what time is in london heathrow?\nEntities:Heathrow Airport with QID Q8691;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8691 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2084",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8691 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what continent does the amazon river flow through?\nEntities:Amazon with QID Q3783;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3783 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2086",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3783 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what is a city in belgium?\nEntities:Belgium with QID Q31;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:city; wdt:country wd:Q31. } LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2087",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q515; wdt:P17 wd:Q31. } LIMIT 1"
    },
    {
        "input": "Query: who played elle greenaway?\nEntities:Elle Greenaway with QID Q5364662;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q5364662. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2088",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q5364662. }"
    },
    {
        "input": "Query: what did captain scott die of?\nEntities:Robert Falcon Scott with QID Q102527;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q102527 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2092",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q102527 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what city did elvis presley grew up in?\nEntities:Elvis Presley with QID Q303;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q303 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2094",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q303 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what continent is belize located in?\nEntities:Belize with QID Q242;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q242 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2095",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q242 wdt:P30 ?x. }"
    },
    {
        "input": "Query: who was donald duck's girlfriend?\nEntities:Donald Duck with QID Q6550;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6550 wdt:unmarried_partner ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2096",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6550 wdt:P451 ?x. }"
    },
    {
        "input": "Query: what party was winston churchill in politics?\nEntities:Winston Churchill with QID Q8016;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8016 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2097",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8016 wdt:P102 ?x. }"
    },
    {
        "input": "Query: what 4 teams did wayne gretzky play for?\nEntities:Wayne Gretzky with QID Q209518;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q209518 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x. } LIMIT 4",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2098",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q209518 p:P54 ?p. ?p ps:P54 ?x. } LIMIT 4"
    },
    {
        "input": "Query: who was philip randolph?\nEntities:A. Philip Randolph with QID Q720153;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q720153 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2099",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q720153 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where are brembo brakes from?\nEntities:Brembo with QID Q907265;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q907265 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2100",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q907265 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what to see and do in san diego california?\nEntities:San Diego with QID Q16552;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q16552. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2103",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q16552. }"
    },
    {
        "input": "Query: what is the zip code for clarksville tn?\nEntities:Clarksville with QID Q328941;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q328941 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2104",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q328941 wdt:P281 ?x. }"
    },
    {
        "input": "Query: where's wayne state?\nEntities:Wayne State College with QID Q7976637;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7976637 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2105",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7976637 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who is the president of cuba in 2009?\nEntities:Cuba with QID Q241; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:president_of_cuba; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2010-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2009-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2107",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q1370482; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2010-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2009-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who does avril lavigne play in over the hedge?\nEntities:Over the Hedge with QID Q245366; Avril Lavigne with QID Q30449;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q245366 p:voice_actor ?p. ?p ps:voice_actor wd:Q30449; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2108",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q245366 p:P725 ?p. ?p ps:P725 wd:Q30449; pq:P453 ?x. }"
    },
    {
        "input": "Query: where is the university of alabama?\nEntities:University of Alabama with QID Q492318;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q492318 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2109",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q492318 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where is the country of armenia?\nEntities:Armenia with QID Q399;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q399 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2110",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q399 wdt:P30 ?x. }"
    },
    {
        "input": "Query: who tom cruise been married to?\nEntities:Tom Cruise with QID Q37079;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37079 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2111",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37079 wdt:P26 ?x. }"
    },
    {
        "input": "Query: which country is gaza city located?\nEntities:Gaza City with QID Q47492;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q47492 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2112",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q47492 wdt:P17 ?x. }"
    },
    {
        "input": "Query: who is president of pakistan 2012?\nEntities:Pakistan with QID Q843;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:president_of_pakistan; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2113",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q473984; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what country did james watt come from?\nEntities:James Watt with QID Q9041;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9041 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2114",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9041 wdt:P27 ?x. }"
    },
    {
        "input": "Query: what instrument did louis armstrong like to play?\nEntities:Louis Armstrong with QID Q1779;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1779 wdt:instrument ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2115",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1779 wdt:P1303 ?x. }"
    },
    {
        "input": "Query: what types of government does china have?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2117",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where is the boeing company?\nEntities:Boeing with QID Q66;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q66 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2118",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q66 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what does bill gates own?\nEntities:Bill Gates with QID Q5284;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5284 wdt:owner_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2119",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5284 wdt:P1830 ?x. }"
    },
    {
        "input": "Query: what are the two houses in congress?\nEntities:United States Congress with QID Q11268;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11268 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2121",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11268 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what team does ladainian tomlinson play 4?\nEntities:LaDainian Tomlinson with QID Q537463;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q537463 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2122",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q537463 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what is the major language spoken in canada?\nEntities:Canada with QID Q16;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2123",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what did camille grammer do for a living?\nEntities:Camille Grammer with QID Q2034653;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2034653 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2124",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2034653 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what jamaican language called?\nEntities:Jamaica with QID Q766;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2125",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what planet was luke skywalker raised on?\nEntities:Luke Skywalker with QID Q51746;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q51746 wdt:home_world ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2126",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q51746 wdt:P1165 ?x. }"
    },
    {
        "input": "Query: who did georgia o'keeffe inspired?\nEntities:Georgia O'Keeffe with QID Q46408;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:influenced_by wd:Q46408. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2127",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P737 wd:Q46408. }"
    },
    {
        "input": "Query: who does brandon jacobs play for?\nEntities:Brandon Jacobs with QID Q304532;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q304532 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2128",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q304532 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what is the government structure of germany?\nEntities:Germany with QID Q183;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q183 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2129",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q183 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who was queen elizabeth the first's mother?\nEntities:Elizabeth I of England with QID Q7207;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7207 wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2130",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7207 wdt:P25 ?x. }"
    },
    {
        "input": "Query: who is the leader of the dominican republic 2011?\nEntities:Dominican Republic with QID Q786; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:leader_of_the_dominican_republic; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2131",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q607982; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who does obama look up to?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2133",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P737 ?x. }"
    },
    {
        "input": "Query: where did william mckinley go to high school?\nEntities:William McKinley with QID Q35041; school with QID Q3914;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35041 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2134",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35041 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: what year did baltimore ravens win the superbowl?\nEntities:Super Bowl with QID Q32096; Baltimore Ravens with QID Q276539;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner wd:Q276539; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2136",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1346 wd:Q276539; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what is the name of the money used in spain?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2137",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what did edward jenner do for a living?\nEntities:Edward Jenner with QID Q40852;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q40852 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2138",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q40852 wdt:P106 ?x. }"
    },
    {
        "input": "Query: when did shawn johnson won the gold medal?\nEntities:Olympic Games with QID Q5389; Shawn Johnson East with QID Q229044;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q229044 p:award_received ?p. ?p ps:award_received wd:gold_medal; pq:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2139",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q229044 p:P166 ?p. ?p ps:P166 wd:Q15243387; pq:P585 ?x. }"
    },
    {
        "input": "Query: what did brittany murphy died of?\nEntities:Brittany Murphy with QID Q168847;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q168847 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2140",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q168847 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what type of political system does north korea have?\nEntities:North Korea with QID Q423;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q423 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2141",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q423 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who will play clary in city of bones?\nEntities:The Mortal Instruments: City of Bones with QID Q59346; Clary Fray with QID Q65510149;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q59346 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q65510149. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2143",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q59346 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q65510149. }"
    },
    {
        "input": "Query: what books did frances hodgson burnett wrote?\nEntities:Frances Hodgson Burnett with QID Q276028;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:written_work; wdt:author wd:Q276028. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2144",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q47461344; wdt:P50 wd:Q276028. }"
    },
    {
        "input": "Query: what year did edgar allan poe go to college?\nEntities:Edgar Allan Poe with QID Q16867;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16867 p:educated_at ?p. ?p ps:educated_at ?y; pq:start_time ?x. ?y wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2145",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16867 p:P69 ?p. ?p ps:P69 ?y; pq:P580 ?x. ?y wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where is amsterdam ohio?\nEntities:Amsterdam with QID Q2049529;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2049529 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2146",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2049529 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who are the two current senators of illinois?\nEntities:United States of America with QID Q30; Illinois with QID Q1204;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:senators. ?p pq:electoral_district ?y. ?y wdt:located_in_the_administrative_territorial_entity wd:Q1204. FILTER NOT EXISTS { ?p pq:end_time ?z. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2147",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4416090. ?p pq:P768 ?y. ?y wdt:P131 wd:Q1204. FILTER NOT EXISTS { ?p pq:P582 ?z. } }"
    },
    {
        "input": "Query: when did the orioles win the pennant?\nEntities:Baltimore Orioles with QID Q650816;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:sports_season_of_league_or_competition wd:pennant; p:winner ?y; wdt:point_in_time ?x. ?y ps:winner wd:Q650816. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2148",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P3450 wd:Q265538; p:P1346 ?y; wdt:P585 ?x. ?y ps:P1346 wd:Q650816. }"
    },
    {
        "input": "Query: who did stephenie meyer play in twilight?\nEntities:Twilight with QID Q160071; Stephenie Meyer with QID Q160219;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q160071 p:cast_member ?p. ?p ps:cast_member wd:Q160219; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2149",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q160071 p:P161 ?p. ?p ps:P161 wd:Q160219; pq:P453 ?x. }"
    },
    {
        "input": "Query: what 3 countries does mexico border?\nEntities:Mexico with QID Q96;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q96 wdt:shares_border_with ?x. } LIMIT 3",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2150",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q96 wdt:P47 ?x. } LIMIT 3"
    },
    {
        "input": "Query: who played giles on buffy the vampire slayer?\nEntities:Rupert Giles with QID Q2340312; Buffy the Vampire Slayer with QID Q183513;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q183513 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q2340312. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2151",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q183513 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q2340312. }"
    },
    {
        "input": "Query: what teams are in the american league west?\nEntities:American League West with QID Q1349939;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1349939 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2152",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1349939 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what books did robert burns wrote?\nEntities:Robert Burns with QID Q81960;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:written_work; wdt:author wd:Q81960. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2153",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q47461344; wdt:P50 wd:Q81960. }"
    },
    {
        "input": "Query: where does drogba play now?\nEntities:Didier Drogba with QID Q48892;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q48892 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2154",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q48892 wdt:P54 ?x. }"
    },
    {
        "input": "Query: who owns chrysler corporation 2012?\nEntities:Stellantis North America with QID Q181114;",
        "output": "SELECT DISTINCT ?x WHERE { wd:chysler_corporation wdt:owned_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2155",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29610 wdt:P127 ?x. }"
    },
    {
        "input": "Query: what are the name of mitt romney sons?\nEntities:Mitt Romney with QID Q4496;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4496 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2156",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4496 wdt:P40 ?x. }"
    },
    {
        "input": "Query: what was the cause of death of larry hagman?\nEntities:Larry Hagman with QID Q100440;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q100440 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2157",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q100440 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what school did sir isaac newton go to?\nEntities:Isaac Newton with QID Q935;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q935 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2159",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q935 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what was robert hooke's contributions to science?\nEntities:Robert Hooke with QID Q46830;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q46830. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2160",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q46830. }"
    },
    {
        "input": "Query: in which country is mount everest found?\nEntities:Mount Everest with QID Q513;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q513 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2162",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q513 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what form of government does germany use?\nEntities:Germany with QID Q183;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q183 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2163",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q183 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what language do haitian speak?\nEntities:Haiti with QID Q790;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q790 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2165",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q790 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who is nick grimshaw?\nEntities:Nick Grimshaw with QID Q547486;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q547486 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2166",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q547486 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what did florence sabin do?\nEntities:Florence R. Sabin with QID Q449487;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q449487 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2167",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q449487 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who played betty rizzo in grease?\nEntities:Rizzo with QID Q63885189; Grease with QID Q267721;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q267721 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q63885189. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2168",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q267721 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q63885189. }"
    },
    {
        "input": "Query: who played wesley crusher on star trek the next generation?\nEntities:Wesley Crusher with QID Q2000355; Star Trek: The Next Generation with QID Q16290;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16290 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q2000355. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2169",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16290 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q2000355. }"
    },
    {
        "input": "Query: where did audie murphy grow up?\nEntities:Audie Murphy with QID Q337185;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q337185 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2171",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q337185 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what school does bart simpson go to?\nEntities:Bart Simpson with QID Q5480;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5480 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2172",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5480 wdt:P69 ?x. }"
    },
    {
        "input": "Query: where is mark sanchez now?\nEntities:Mark Sanchez with QID Q946184;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q946184 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2173",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q946184 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where was the battle of verdun ww1?\nEntities:Battle of Verdun with QID Q130847;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q130847 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2174",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q130847 wdt:P276 ?x. }"
    },
    {
        "input": "Query: where is okemos michigan?\nEntities:Okemos with QID Q1870758;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1870758 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2176",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1870758 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where did caroline kennedy go to school?\nEntities:Caroline Kennedy with QID Q230303;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q230303 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2177",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q230303 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what type of government is the us government?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2178",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what is shakespeare's parents names?\nEntities:William Shakespeare with QID Q692;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q692 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2179",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q692 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: who is the ravens coach?\nEntities:Baltimore Ravens with QID Q276539;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q276539 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2181",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q276539 wdt:P286 ?x. }"
    },
    {
        "input": "Query: what college did ron jaworski go to?\nEntities:Ron Jaworski with QID Q1416079;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1416079 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2182",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1416079 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what team does allen iverson play for now?\nEntities:Allen Iverson with QID Q190094;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q190094 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2183",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q190094 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what years did the atlanta braves win the world series?\nEntities:Atlanta Braves with QID Q461595; World Series with QID Q265538;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:winner wd:Q461595; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2185",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q461595; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what are the basic beliefs of islam religion?\nEntities:Islam with QID Q432;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:worshipped_by wd:Q432. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2188",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P1049 wd:Q432. }"
    },
    {
        "input": "Query: what is modern egyptian language?\nEntities:Egypt with QID Q79;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2189",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where does sam shepard live?\nEntities:Sam Shepard with QID Q294583;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q294583 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2190",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q294583 wdt:P551 ?x. }"
    },
    {
        "input": "Query: in what state was the air force academy established?\nEntities:United States Air Force Academy with QID Q1331280;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1331280 wdt:headquarters_location ?y. ?y wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2191",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1331280 wdt:P159 ?y. ?y wdt:P131+ ?x. ?x wdt:P31 wd:Q107390. }"
    },
    {
        "input": "Query: what are the names of harry potter books in order?\nEntities:Harry Potter with QID Q8337;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8337 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2194",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8337 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what currency should i bring to italy?\nEntities:Italy with QID Q38;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2195",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what years did the orioles play in the world series?\nEntities:Baltimore Orioles with QID Q650816; World Series with QID Q265538;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:participating_team wd:Q650816; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2196",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1923 wd:Q650816; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what does the roman empire consist of?\nEntities:Roman Empire with QID Q2277;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2277 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2197",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2277 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what did fred goodwin do?\nEntities:Fred Goodwin with QID Q1885214;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1885214 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2198",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1885214 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what school did burne hogarth establish?\nEntities:Burne Hogarth with QID Q981472;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:founded_by wd:Q981472; wdt:instance_of/wdt:subclass_of+ wd:educational_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2200",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P112 wd:Q981472; wdt:P31/wdt:P279+ wd:Q2385804. }"
    },
    {
        "input": "Query: who is marilyn monroe and why is she famous?\nEntities:Marilyn Monroe with QID Q4616;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4616 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2202",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4616 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where is port charlotte florida located?\nEntities:Port Charlotte with QID Q1022776;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1022776 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2203",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1022776 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what time zone is it in california?\nEntities:California with QID Q99;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q99 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2204",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q99 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who is reba mcentire's son?\nEntities:Reba McEntire with QID Q229430;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q229430 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2205",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q229430 wdt:P40 ?x. }"
    },
    {
        "input": "Query: who helped form the american federation of labor?\nEntities:American Federation of Labor with QID Q464242;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q464242 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2206",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q464242 wdt:P112 ?x. }"
    },
    {
        "input": "Query: who did julie andrews play in shrek?\nEntities:Julie Andrews with QID Q161819; Shrek 2 with QID Q485983;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q485983 p:voice_actor ?p. ?p ps:voice_actor wd:Q161819; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2207",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q485983 p:P725 ?p. ?p ps:P725 wd:Q161819; pq:P453 ?x. }"
    },
    {
        "input": "Query: when did the celtics win championship?\nEntities:Boston Celtics with QID Q131371; NBA Finals with QID Q842375;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q131371; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2209",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q131371; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what episode does eric northman come in?\nEntities:True Blood with QID Q186219; Eric Northman with QID Q1771759;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:part_of_the_series wd:Q186219; wdt:has_part(s) ?x. ?x p:cast_member ?z. ?z ps:cast_member wd:Q1771759. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2211",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P179 wd:Q186219; wdt:P527 ?x. ?x p:P161 ?z. ?z ps:P161 wd:Q1771759. }"
    },
    {
        "input": "Query: what was elijah mccoy famous for?\nEntities:Elijah McCoy with QID Q1329419;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1329419 wdt:notable_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2212",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1329419 wdt:P800 ?x. }"
    },
    {
        "input": "Query: who did john paul jones fight for?\nEntities:John Paul Jones with QID Q314333;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q314333 wdt:military_branch ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2213",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q314333 wdt:P241 ?x. }"
    },
    {
        "input": "Query: where does hudson river start?\nEntities:Hudson River with QID Q3140;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3140 wdt:origin_of_the_watercourse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2214",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3140 wdt:P885 ?x. }"
    },
    {
        "input": "Query: where was brad paisley born and raised?\nEntities:Brad Paisley with QID Q39639;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39639 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2215",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39639 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what is charlotte north carolina known for?\nEntities:Charlotte with QID Q16565;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q16565. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2216",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q16565. }"
    },
    {
        "input": "Query: where is glastonbury connecticut?\nEntities:Glastonbury with QID Q753943;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q753943 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2217",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q753943 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what is george washington's hometown?\nEntities:George Washington with QID Q23;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2218",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what is arlington texas zip code?\nEntities:Arlington with QID Q17943;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q17943 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2219",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q17943 wdt:P281 ?x. }"
    },
    {
        "input": "Query: what years did yankees win championships?\nEntities:New York Yankees with QID Q213417;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:championships; p:participating_team ?z; wdt:point_in_time ?x. ?z ps:participating_team wd:Q213417. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2220",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; p:P1923 ?z; wdt:P585 ?x. ?z ps:P1923 wd:Q213417. }"
    },
    {
        "input": "Query: what characters does seth macfarlane play in family guy?\nEntities:Family Guy with QID Q5930; Seth MacFarlane with QID Q188492;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor wd:Q188492; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2221",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 wd:Q188492; pq:P453 ?x. }"
    },
    {
        "input": "Query: what year did steve nash play for the mavericks?\nEntities:Dallas Mavericks with QID Q132893; Steve Nash with QID Q192955;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q192955 p:member_of_sports_team ?p. ?p ps:member_of_sports_team wd:Q132893; pq:start_time ?x; pq:end_time ?y. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2223",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q192955 p:P54 ?p. ?p ps:P54 wd:Q132893; pq:P580 ?x; pq:P582 ?y. }"
    },
    {
        "input": "Query: where is arabic used?\nEntities:Arabic with QID Q13955;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q13955; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2224",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q13955; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: what book did charles darwin write on evolution?\nEntities:evolution with QID Q1063; Charles Darwin with QID Q1035;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:written_work; wdt:author wd:Q1035; wdt:main_subject ?y. ?y wdt:subclass_of|wdt:part_of+ wd:Q1063. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2225",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q47461344; wdt:P50 wd:Q1035; wdt:P921 ?y. ?y wdt:P279|wdt:P361+ wd:Q1063. }"
    },
    {
        "input": "Query: what are all songs by taylor swift?\nEntities:Quincy Jones with QID Q193645; Taylor Swift with QID Q26876;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:performer wd:Q26876. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2226",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P175 wd:Q26876. }"
    },
    {
        "input": "Query: what instruments does katy perry play?\nEntities:Katy Perry with QID Q42493;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q42493 wdt:instrument ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2227",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q42493 wdt:P1303 ?x. }"
    },
    {
        "input": "Query: who was francis drake married to?\nEntities:Francis Drake with QID Q36517;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36517 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2228",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36517 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where does don king live?\nEntities:Don King with QID Q344977;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q344977 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2230",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q344977 wdt:P551 ?x. }"
    },
    {
        "input": "Query: who did deborah sampson married?\nEntities:Deborah Sampson with QID Q3020894;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3020894 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2232",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3020894 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what form of government does mexico?\nEntities:Mexico with QID Q96;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q96 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2233",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q96 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who played mickey on days of our lives?\nEntities:Days of Our Lives with QID Q185059; Mickey Horton with QID Q2094650;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q185059 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q2094650. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2234",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q185059 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q2094650. }"
    },
    {
        "input": "Query: what movies does nicole kidman star in?\nEntities:Nicole Kidman with QID Q37459;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q37459; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2235",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q37459; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where to stay in san francisco ca?\nEntities:San Francisco with QID Q62; hotel with QID Q27686;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:hotel; wdt:located_in_the_administrative_territorial_entity wd:Q62. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2237",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q27686; wdt:P131 wd:Q62. }"
    },
    {
        "input": "Query: what team does reggie bush play for 2011?\nEntities:Reggie Bush with QID Q555271;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q555271 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2238",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q555271 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: where did kate chopin grow up?\nEntities:Kate Chopin with QID Q230476;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q230476 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2239",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q230476 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who is the current president of dominican republic?\nEntities:Dominican Republic with QID Q786; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2240",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P6 ?x. }"
    },
    {
        "input": "Query: what money system does greece use?\nEntities:Greece with QID Q41;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2241",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who played obi wan kenobi in phantom menace?\nEntities:I with QID Q12975794; Star Wars: Episode I \u2013 The Phantom Menace with QID Q165713; Obi-Wan Kenobi with QID Q51740;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q165713 p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q51740. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2242",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q165713 p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q51740. }"
    },
    {
        "input": "Query: what is the newspaper in phoenix?\nEntities:Phoenix with QID Q16556;",
        "output": "SELECT DISTINCT ?x WHERE { { ?x wdt:instance_of/wdt:subclass_of* wd:newspaper. } UNION { ?x wdt:instance_of/wdt:subclass_of* wd:daily_newspaper. } ?x wdt:located_in_the_administrative_territorial_entity wd:Q16556. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2243",
        "sparql": "SELECT DISTINCT ?x WHERE { { ?x wdt:P31/wdt:P279* wd:Q11032. } UNION { ?x wdt:P31/wdt:P279* wd:Q1110794. } ?x wdt:P131 wd:Q16556. }"
    },
    {
        "input": "Query: where is luke bryan from?\nEntities:Luke Bryan with QID Q166197;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q166197 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2244",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q166197 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who invented facebook wikipedia?\nEntities:Meta Platforms with QID Q380;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q380 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2245",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q380 wdt:P112 ?x. }"
    },
    {
        "input": "Query: what country surrounds spain?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2246",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P47 ?x. }"
    },
    {
        "input": "Query: where did captain james cook grow up?\nEntities:James Cook with QID Q7324;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7324 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2249",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7324 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where is sony headquarters located?\nEntities:Sony with QID Q41187;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41187 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2250",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41187 wdt:P159 ?x. }"
    },
    {
        "input": "Query: who wore the darth vader suit in revenge of the sith?\nEntities:Anakin Skywalker with QID Q51752; Star Wars: Episode III \u2013 Revenge of the Sith with QID Q42051;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q42051 p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q51752. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2251",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q42051 p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q51752. }"
    },
    {
        "input": "Query: what movies has scarlett johansson in?\nEntities:Scarlett Johansson with QID Q34436;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q34436; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2252",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q34436; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where is alex rodriguez from?\nEntities:Alex Rodriguez with QID Q558664;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q558664 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2253",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q558664 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who invented morse code?\nEntities:Morse code with QID Q79897;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79897 wdt:discoverer_or_inventor ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2255",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79897 wdt:P61 ?x. }"
    },
    {
        "input": "Query: what happened to adolf hitler at the end of the war?\nEntities:Adolf Hitler with QID Q352;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q352 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2256",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q352 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what is the political system in england?\nEntities:England with QID Q21;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q21 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2257",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q21 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who was vice president under ronald reagan?\nEntities:Ronald Reagan with QID Q9960; President of the United States with QID Q11696; Vice President of the United States with QID Q11699;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:Q11699; pq:start_time ?y. wd:Q9960 p:position_held ?q. ?q ps:position_held wd:Q11696; pq:start_time ?z. FILTER(?y = ?z) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2258",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q11699; pq:P580 ?y. wd:Q9960 p:P39 ?q. ?q ps:P39 wd:Q11696; pq:P580 ?z. FILTER(?y = ?z) }"
    },
    {
        "input": "Query: what does rupert murdoch own 2012?\nEntities:Rupert Murdoch with QID Q53944;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:founded_by wd:Q53944. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2259",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P112 wd:Q53944. }"
    },
    {
        "input": "Query: where did william howard taft go to high school?\nEntities:school with QID Q3914; William Howard Taft with QID Q35648;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35648 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2260",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35648 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: when did the chicago bulls win their first championship?\nEntities:NBA Finals with QID Q842375; Chicago Bulls with QID Q128109;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q128109; wdt:point_in_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2261",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q128109; wdt:P585 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: what did sammy davis jr die of?\nEntities:Sammy Davis Jr. with QID Q297816;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q297816 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2263",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q297816 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what did anna nicole smith died from?\nEntities:Anna Nicole Smith with QID Q180710;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q180710 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2264",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q180710 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what country did francis drake explored for?\nEntities:Francis Drake with QID Q36517;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36517 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2265",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36517 wdt:P27 ?x. }"
    },
    {
        "input": "Query: what two countries share a border with the great lakes?\nEntities:Great Lakes with QID Q7347;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7347 wdt:country ?x. } LIMIT 2",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2266",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7347 wdt:P17 ?x. } LIMIT 2"
    },
    {
        "input": "Query: what year did dwayne wade came to the nba?\nEntities:Dwyane Wade with QID Q31683; National Basketball Association with QID Q155223;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q31683 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?y. ?y wdt:league wd:Q155223. ?p pq:start_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2267",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q31683 p:P54 ?p. ?p ps:P54 ?y. ?y wdt:P118 wd:Q155223. ?p pq:P580 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: where did jackie kennedy go to college?\nEntities:Jacqueline Kennedy Onassis with QID Q165421;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q165421 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2269",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q165421 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what religion does tom cruise follow?\nEntities:Tom Cruise with QID Q37079;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37079 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2271",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37079 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what is the president of france's name?\nEntities:France with QID Q142; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2272",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:P6 ?x. }"
    },
    {
        "input": "Query: what language do lakota indians speak?\nEntities:Lakota people with QID Q333049;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q333049 wdt:native_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2273",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q333049 wdt:P103 ?x. }"
    },
    {
        "input": "Query: what is the money called in spain?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2274",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where is the great pyramid of giza situated?\nEntities:Great Pyramid of Giza with QID Q37200;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37200 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2275",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37200 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what money is used in the ukraine?\nEntities:Ukraine with QID Q212;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q212 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2277",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q212 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where did ayn rand live?\nEntities:Ayn Rand with QID Q132524;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q132524 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2278",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q132524 wdt:P551 ?x. }"
    },
    {
        "input": "Query: when was the civil war in libya?\nEntities:First Libyan Civil War with QID Q81545;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q81545 wdt:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2279",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q81545 wdt:P580 ?x. }"
    },
    {
        "input": "Query: where are the headquarters of the united nations organization found?\nEntities:United Nations with QID Q1065;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1065 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2280",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1065 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what influenced roy lichtenstein artwork?\nEntities:Roy Lichtenstein with QID Q151679;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q151679 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2282",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q151679 wdt:P737 ?x. }"
    },
    {
        "input": "Query: what state did romney governor?\nEntities:Mitt Romney with QID Q4496; governor with QID Q132050;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4496 p:position_held ?p. ?p ps:position_held ?y. ?y wdt:subclass_of wd:governor; wdt:applies_to_jurisdiction ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2283",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4496 p:P39 ?p. ?p ps:P39 ?y. ?y wdt:P279 wd:Q889821; wdt:P1001 ?x. }"
    },
    {
        "input": "Query: which countries border lake victoria?\nEntities:Lake Victoria with QID Q5505;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5505 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2284",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5505 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what movies does ryan gosling star in?\nEntities:Ryan Gosling with QID Q193815;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q193815; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2285",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q193815; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where is kentucky located?\nEntities:Kentucky with QID Q1603;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1603 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2286",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1603 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where john tyler was born?\nEntities:John Tyler with QID Q11881;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11881 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2287",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11881 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what place did thomas jefferson died?\nEntities:Thomas Jefferson with QID Q11812;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11812 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2289",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11812 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what is the time zone in france?\nEntities:France with QID Q142;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2291",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q142 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what kind of economy was the soviet union?\nEntities:Soviet Union with QID Q15180;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q15180 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2292",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q15180 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what county is lancaster ca located in?\nEntities:Lancaster with QID Q494711;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q494711 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2293",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q494711 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who is steve nash married to?\nEntities:Steve Nash with QID Q192955;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q192955 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2294",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q192955 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what is the name of the bengals quarterback?\nEntities:quarterback with QID Q622747; Cincinnati Bengals with QID Q223511;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:position_played_on_team_/_speciality wd:Q622747; p:member_of_sports_team ?y. ?y ps:member_of_sports_team wd:Q223511; pq:start_time ?z. } ORDER BY DESC (?z) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2296",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P413 wd:Q622747; p:P54 ?y. ?y ps:P54 wd:Q223511; pq:P580 ?z. } ORDER BY DESC (?z) LIMIT 1"
    },
    {
        "input": "Query: what do michelle obama do for a living?\nEntities:Michelle Obama with QID Q13133;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q13133 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2298",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q13133 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who does paul wesley play in 24?\nEntities:24 with QID Q56194; Paul Wesley with QID Q270149;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q56194 p:cast_member ?p. ?p ps:cast_member wd:Q270149; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2301",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q56194 p:P161 ?p. ?p ps:P161 wd:Q270149; pq:P453 ?x. }"
    },
    {
        "input": "Query: what continent is australia in?\nEntities:Australia with QID Q408;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2302",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what is roshon fegan's heritage?\nEntities:Roshon Fegan with QID Q507999;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q507999 wdt:ethnic_group ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2303",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q507999 wdt:P172 ?x. }"
    },
    {
        "input": "Query: where is spanish springs nv?\nEntities:Spanish Springs with QID Q376269;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q376269 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2304",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q376269 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what club does ronaldinho play for 2012?\nEntities:Ronaldo with QID Q529207; Ronaldinho with QID Q39444;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q529207 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2305",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q529207 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what is the name of the sacred text of islam?\nEntities:Islam with QID Q432;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q432 wdt:foundational_text ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2306",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q432 wdt:P457 ?x. }"
    },
    {
        "input": "Query: where did richard nixon go to high school?\nEntities:Richard Nixon with QID Q9588;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9588 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2307",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9588 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: who stars in the movie fred claus?\nEntities:Fred Claus with QID Q1212854;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1212854 wdt:cast_member ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2308",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1212854 wdt:P161 ?x. }"
    },
    {
        "input": "Query: where did madoff live?\nEntities:Bernard Madoff with QID Q14043;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q14043 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2310",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q14043 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what killed sammy davis jr?\nEntities:Sammy Davis Jr. with QID Q297816;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q297816 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2311",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q297816 wdt:P509 ?x. }"
    },
    {
        "input": "Query: where to hang out in chicago?\nEntities:Chicago with QID Q1297;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q1297. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2312",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q1297. }"
    },
    {
        "input": "Query: what are the best things to do in san diego?\nEntities:San Diego with QID Q16552;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q16552. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2313",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q16552. }"
    },
    {
        "input": "Query: what currency do you use in costa rica?\nEntities:Costa Rica with QID Q800;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q800 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2314",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q800 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who are the senators of kansas 2013?\nEntities:United States of America with QID Q30; Kansas with QID Q1558;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:senators; pq:electoral_district ?w; pq:start_time ?y; pq:end_time ?z. ?w wdt:located_in_the_administrative_territorial_entity wd:Q1558. FILTER((?y < \"2014-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2315",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4416090; pq:P768 ?w; pq:P580 ?y; pq:P582 ?z. ?w wdt:P131 wd:Q1558. FILTER((?y < \"2014-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2013-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what influenced jackson pollock's work?\nEntities:Jackson Pollock with QID Q37571;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37571 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2316",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37571 wdt:P737 ?x. }"
    },
    {
        "input": "Query: what is the official language of the ukraine?\nEntities:Ukraine with QID Q212;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q212 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2319",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q212 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who won 2001 fa cup?\nEntities:FA Cup with QID Q11151; 2000\u201301 FA Cup with QID Q1386640; 2000\u201301 FA Premier League with QID Q833562;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1386640 wdt:winner ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2320",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1386640 wdt:P1346 ?x. }"
    },
    {
        "input": "Query: what songs did duane allman sing?\nEntities:Duane Allman with QID Q313820;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:performer wd:Q313820. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2321",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P175 wd:Q313820. }"
    },
    {
        "input": "Query: who played darth vader in the original star wars movies?\nEntities:Darth Vader with QID Q12206942; Star Wars: Episode IV \u2013 A New Hope with QID Q17738;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q17738 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q12206942. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2322",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q17738 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q12206942. }"
    },
    {
        "input": "Query: what team did joe hart play for before man city?\nEntities:Manchester City F.C. with QID Q50602; David Beckham with QID Q10520; Joe Hart with QID Q187184;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q187184 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:end_time ?y. wd:Q10520 p:member_of_sports_team ?q. ?q ps:member_of_sports_team wd:Q50602; pq:start_time ?z. FILTER(?y < ?z) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2324",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q187184 p:P54 ?p. ?p ps:P54 ?x; pq:P582 ?y. wd:Q10520 p:P54 ?q. ?q ps:P54 wd:Q50602; pq:P580 ?z. FILTER(?y < ?z) }"
    },
    {
        "input": "Query: who did scarlett johansson married?\nEntities:Scarlett Johansson with QID Q34436;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34436 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2325",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34436 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what team did doug williams play for?\nEntities:Doug Williams with QID Q951164;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q951164 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2326",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q951164 wdt:P54 ?x. }"
    },
    {
        "input": "Query: who won the presidential race in venezuela?\nEntities:Venezuela with QID Q717;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:presidential_election; wdt:country wd:Q717; wdt:successful_candidate ?x; wdt:point_in_time ?y. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2328",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31 wd:Q858439; wdt:P17 wd:Q717; wdt:P991 ?x; wdt:P585 ?y. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: where did willy wonka take place?\nEntities:Willy Wonka & the Chocolate Factory with QID Q936327;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q936327 wdt:filming_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2329",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q936327 wdt:P915 ?x. }"
    },
    {
        "input": "Query: what degree did martin luther king get?\nEntities:Martin Luther King Jr. with QID Q8027;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8027 p:educated_at ?p. ?p ps:educated_at ?y; pq:academic_degree ?x. ?y wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2330",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8027 p:P69 ?p. ?p ps:P69 ?y; pq:P512 ?x. ?y wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what type of music did vivaldi write?\nEntities:Antonio Vivaldi with QID Q1340;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1340 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2331",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1340 wdt:P136 ?x. }"
    },
    {
        "input": "Query: what books has elie wiesel written?\nEntities:Elie Wiesel with QID Q18391;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:written_work; wdt:author wd:Q18391. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2332",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q47461344; wdt:P50 wd:Q18391. }"
    },
    {
        "input": "Query: when did the boston celtics win their first championship?\nEntities:Boston Celtics with QID Q131371; NBA Finals with QID Q842375;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q131371; wdt:point_in_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2333",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q131371; wdt:P585 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: who is cameron crowe?\nEntities:Cameron Crowe with QID Q318287;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q318287 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2334",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q318287 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what is the national anthem of russia?\nEntities:Russia with QID Q159;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:anthem ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2335",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:P85 ?x. }"
    },
    {
        "input": "Query: what college did lee corso attend?\nEntities:Lee Corso with QID Q6513335;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6513335 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2336",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6513335 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what films did liam neeson star in?\nEntities:Liam Neeson with QID Q58444;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q58444; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2337",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q58444; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what does tim gunn do for a living?\nEntities:Tim Gunn with QID Q978646;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q978646 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2339",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q978646 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what was eli whitney job?\nEntities:Eli Whitney with QID Q280930;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q280930 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2340",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q280930 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what political party was adolf hitler from?\nEntities:Adolf Hitler with QID Q352;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q352 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2342",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q352 wdt:P102 ?x. }"
    },
    {
        "input": "Query: who did hermione granger marry?\nEntities:Hermione Granger with QID Q174009;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q174009 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2343",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q174009 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what does taiwan people speak?\nEntities:Taiwan with QID Q865;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q865 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2346",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q865 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what state is george washington university located in?\nEntities:George Washington University with QID Q432637;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q432637 wdt:located_in_the_administrative_territorial_entity+ ?x. { ?x wdt:instance_of/wdt:subclass_of* wd:federal_district. } UNION { ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2348",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q432637 wdt:P131+ ?x. { ?x wdt:P31/wdt:P279* wd:Q475050. } UNION { ?x wdt:P31/wdt:P279* wd:Q107390. } }"
    },
    {
        "input": "Query: what is the state bird and flower of michigan?\nEntities:Michigan with QID Q1166;",
        "output": "SELECT DISTINCT ?x WHERE { { wd:Q1166 p:official_symbol ?p. ?p ps:official_symbol ?x; pq:object_has_role wd:bird. } UNION { wd:Q1166 p:official_symbol ?p. ?p ps:official_symbol ?x; pq:object_has_role wd:flower. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2349",
        "sparql": "SELECT DISTINCT ?x WHERE { { wd:Q1166 p:P2238 ?p. ?p ps:P2238 ?x; pq:P3831 wd:Q5113. } UNION { wd:Q1166 p:P2238 ?p. ?p ps:P2238 ?x; pq:P3831 wd:Q506. } }"
    },
    {
        "input": "Query: where was governor cuomo born?\nEntities:Andrew Cuomo with QID Q11673;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11673 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2351",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11673 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who are the judges of the supreme court?\nEntities:Supreme Court of the United States with QID Q20706330;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:position_held ?y. ?y wdt:subclass_of wd:Q20706330. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2352",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P39 ?y. ?y wdt:P279 wd:Q20706330. }"
    },
    {
        "input": "Query: who is the president of brazil now?\nEntities:Brazil with QID Q155; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { wd:president_of_brazil wdt:officeholder ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2353",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5176750 wdt:P1308 ?x. }"
    },
    {
        "input": "Query: what years have the ravens won the super bowl?\nEntities:Super Bowl with QID Q32096; Baltimore Ravens with QID Q276539;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner wd:Q276539; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2354",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1346 wd:Q276539; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what money to take to sri lanka?\nEntities:Sri Lanka with QID Q854;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q854 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2355",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q854 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what year did the mets win their first world series?\nEntities:World Series with QID Q265538; New York Mets with QID Q692417;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:winner wd:Q692417; wdt:point_in_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2356",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q692417; wdt:P585 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: who was leonardo da vinci teacher?\nEntities:Leonardo da Vinci with QID Q762;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q762 wdt:student_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2357",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q762 wdt:P1066 ?x. }"
    },
    {
        "input": "Query: where did newt gingrich attend college?\nEntities:Newt Gingrich with QID Q182788;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q182788 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2358",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q182788 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where did thomas jefferson died?\nEntities:Thomas Jefferson with QID Q11812;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11812 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2359",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11812 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what football teams did emmitt smith play for?\nEntities:Emmitt Smith with QID Q1338802;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1338802 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2360",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1338802 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where did joe namath attend college?\nEntities:Joe Namath with QID Q720558;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q720558 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2361",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q720558 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what city is purdue university located?\nEntities:Purdue University with QID Q217741;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q217741 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2362",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q217741 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what language does people in thailand speak?\nEntities:Thailand with QID Q869;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2363",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what does beth tweddle compete in?\nEntities:Beth Tweddle with QID Q259259;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q259259 wdt:sport ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2365",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q259259 wdt:P641 ?x. }"
    },
    {
        "input": "Query: what did emily bronte died of?\nEntities:Emily Bront\u00eb with QID Q80137;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q80137 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2367",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q80137 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what to do around krabi thailand?\nEntities:Krabi with QID Q1000353;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q1000353. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2368",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q1000353. }"
    },
    {
        "input": "Query: what country is george washington carver from?\nEntities:George Washington Carver with QID Q296898;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q296898 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2369",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q296898 wdt:P27 ?x. }"
    },
    {
        "input": "Query: who is playing bilbo in the hobbit movie?\nEntities:Bilbo Baggins with QID Q185737; The Hobbit trilogy with QID Q74331;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:part_of_the_series wd:Q74331; p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q185737. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2370",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P179 wd:Q74331; p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q185737. }"
    },
    {
        "input": "Query: when did kennedy get elected?\nEntities:John F. Kennedy with QID Q9696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9696 p:position_held ?y. ?y ps:position_held wd:president-elect_of_the_united_states; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2372",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9696 p:P39 ?y. ?y ps:P39 wd:Q1467287; pq:P580 ?x. }"
    },
    {
        "input": "Query: what kind of currency do they use in thailand?\nEntities:Thailand with QID Q869;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2373",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who is the actor that plays rico in hannah montana?\nEntities:Hannah Montana with QID Q126631;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q126631 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q126631. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2374",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q126631 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q126631. }"
    },
    {
        "input": "Query: what time zone is birmingham england?\nEntities:Birmingham with QID Q2256;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2256 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2375",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2256 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what does andy warhol do?\nEntities:Andy Warhol with QID Q5603;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5603 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2376",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5603 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where is colombia the country?\nEntities:Colombia with QID Q739;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q739 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2377",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q739 wdt:P30 ?x. }"
    },
    {
        "input": "Query: who does jodelle ferland play in eclipse?\nEntities:The Twilight Saga: Eclipse with QID Q217010; Jodelle Ferland with QID Q144785; The Twilight Saga with QID Q652599;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q217010 p:cast_member ?p. ?p ps:cast_member wd:Q144785; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2378",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q217010 p:P161 ?p. ?p ps:P161 wd:Q144785; pq:P453 ?x. }"
    },
    {
        "input": "Query: where was karl marx buried?\nEntities:Karl Marx with QID Q9061;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9061 wdt:place_of_burial ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2380",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9061 wdt:P119 ?x. }"
    },
    {
        "input": "Query: what timezone is nevada in right now?\nEntities:Nevada with QID Q1227;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1227 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2382",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1227 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what team did deion sanders play for in baseball?\nEntities:Deion Sanders with QID Q954184;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q954184 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2383",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q954184 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what did dr carter g woodson do?\nEntities:Carter Godwin Woodson with QID Q5047158;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5047158 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2384",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5047158 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who invented the ford motor company?\nEntities:Ford Motor Company with QID Q44294;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q44294 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2385",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q44294 wdt:P112 ?x. }"
    },
    {
        "input": "Query: what is ayrton senna?\nEntities:Ayrton Senna with QID Q10490;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q10490 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2386",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q10490 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where was stephen g. breyer born?\nEntities:Stephen Breyer with QID Q11124;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11124 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2387",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11124 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what films have taylor lautner starred in?\nEntities:Taylor Lautner with QID Q23359;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q23359; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2388",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q23359; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what did charles dickens believe in?\nEntities:Charles Dickens with QID Q5686;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5686 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2389",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5686 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what religion is sammy davis jr?\nEntities:Sammy Davis Jr. with QID Q297816;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q297816 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2391",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q297816 wdt:P140 ?x. }"
    },
    {
        "input": "Query: who started google?\nEntities:Google with QID Q9366;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9366 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2393",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9366 wdt:P112 ?x. }"
    },
    {
        "input": "Query: in what timezone is arizona?\nEntities:Arizona with QID Q816;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q816 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2394",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q816 wdt:P421 ?x. }"
    },
    {
        "input": "Query: where kurdish people from?\nEntities:Kurds with QID Q12223;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q12223 wdt:country_of_origin ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2395",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q12223 wdt:P495 ?x. }"
    },
    {
        "input": "Query: what year did arizona diamondbacks win the world series?\nEntities:Arizona Diamondbacks with QID Q670376; World Series with QID Q265538;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:winner wd:Q670376; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2397",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q670376; wdt:P585 ?x. }"
    },
    {
        "input": "Query: where was jesus born and raised?\nEntities:Jesus with QID Q302;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q302 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2398",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q302 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what currency do i take to turkey?\nEntities:Turkey with QID Q43;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2399",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who portrayed indiana jones in raiders of the lost ark?\nEntities:Raiders of the Lost Ark with QID Q174284; Indiana Jones with QID Q148659;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q174284 p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q148659. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2400",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q174284 p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q148659. }"
    },
    {
        "input": "Query: what money is used in ukraine?\nEntities:Ukraine with QID Q212;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q212 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2401",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q212 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where is greyton western cape?\nEntities:Greyton with QID Q1003335;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1003335 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2402",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1003335 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what is the buddhist holy book?\nEntities:Buddhism with QID Q748;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q748 wdt:foundational_text ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2403",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q748 wdt:P457 ?x. }"
    },
    {
        "input": "Query: who is jason morgan married to in real life?\nEntities:Jason Morgan with QID Q6163143;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6163143 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2404",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6163143 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what is colorado's state flower?\nEntities:Colorado with QID Q1261;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1261 p:official_symbol ?p. ?p ps:official_symbol ?x; pq:object_has_role wd:flower. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2405",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1261 p:P2238 ?p. ?p ps:P2238 ?x; pq:P3831 wd:Q506. }"
    },
    {
        "input": "Query: who was phil harris married to?\nEntities:Phil Harris with QID Q596717;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q596717 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2407",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q596717 wdt:P26 ?x. }"
    },
    {
        "input": "Query: which jane austen books are movies?\nEntities:Jane Austen with QID Q36322;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:film; p:based_on ?p. ?p ps:based_on ?x; pq:author wd:Q36322. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2408",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q11424; p:P144 ?p. ?p ps:P144 ?x; pq:P50 wd:Q36322. }"
    },
    {
        "input": "Query: where did antoine laurent lavoisier die?\nEntities:Antoine Lavoisier with QID Q39607;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39607 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2409",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39607 wdt:P20 ?x. }"
    },
    {
        "input": "Query: where is lanzarote in a world map?\nEntities:Lanzarote with QID Q182432;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q182432 wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2410",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q182432 wdt:P625 ?x. }"
    },
    {
        "input": "Query: what year did lakers win their first championship?\nEntities:Los Angeles Lakers with QID Q121783; NBA Finals with QID Q842375;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q121783; wdt:point_in_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2411",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q121783; wdt:P585 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: who plays dante falconeri?\nEntities:Dante Falconeri with QID Q5221164;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q5221164. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2414",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q5221164. }"
    },
    {
        "input": "Query: who is the president of israel 2012?\nEntities:President of Israel with QID Q327948;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:Q327948; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2416",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q327948; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who does northern ireland belong to?\nEntities:Northern Ireland with QID Q26;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q26 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2417",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q26 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who does allen iverson play for now?\nEntities:Allen Iverson with QID Q190094;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q190094 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2418",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q190094 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what party was lincoln affiliated with?\nEntities:Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2419",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:P102 ?x. }"
    },
    {
        "input": "Query: where do islamic people go to worship?\nEntities:Islam with QID Q432;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:worshipped_by wd:Q432. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2420",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P1049 wd:Q432. }"
    },
    {
        "input": "Query: what god does taoism believe in?\nEntities:Taoism with QID Q9598;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:worshipped_by wd:Q9598. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2423",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P1049 wd:Q9598. }"
    },
    {
        "input": "Query: what college did kris humphries play for?\nEntities:Kris Humphries with QID Q363421;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q363421 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x. ?x wdt:instance_of/wdt:subclass_of* wd:college_sports_team. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2424",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q363421 p:P54 ?p. ?p ps:P54 ?x. ?x wdt:P31/wdt:P279* wd:Q18558301. }"
    },
    {
        "input": "Query: what do mali people speak?\nEntities:Mali with QID Q912;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q912 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2427",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q912 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who is john garcia?\nEntities:John Garcia with QID Q918849;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q918849 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2428",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q918849 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what type of government does japan currently have?\nEntities:Japan with QID Q17;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2429",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what do israeli people speak?\nEntities:Israel with QID Q801;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2430",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what year did george washington become the president?\nEntities:George Washington with QID Q23; President of the United States with QID Q11696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23 p:position_held ?y. ?y ps:position_held wd:Q11696; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2431",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23 p:P39 ?y. ?y ps:P39 wd:Q11696; pq:P580 ?x. }"
    },
    {
        "input": "Query: what did lbj die of?\nEntities:Lyndon B. Johnson with QID Q9640;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9640 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2432",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9640 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what is the main language spoken in italy?\nEntities:Italy with QID Q38;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2433",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who was the first wife of prophet muhammad?\nEntities:Muhammad with QID Q9458;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9458 p:spouse ?p. ?p ps:spouse ?x; pq:start_time ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2434",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9458 p:P26 ?p. ?p ps:P26 ?x; pq:P580 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: what does george soros believe?\nEntities:George Soros with QID Q12908;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q12908 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2435",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q12908 wdt:P140 ?x. }"
    },
    {
        "input": "Query: on which river is paris?\nEntities:Paris with QID Q90;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:main_stream; wdt:located_in_the_administrative_territorial_entity wd:Q90. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2436",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q573344; wdt:P131 wd:Q90. }"
    },
    {
        "input": "Query: who was sam houston answers?\nEntities:Sam Houston with QID Q216547;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q216547 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2437",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q216547 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who is sherri shepherd's new husband?\nEntities:Sherri Shepherd with QID Q268549;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q268549 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2438",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q268549 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who did kevin garnett play for before celtics?\nEntities:Boston Celtics with QID Q131371; Kevin Garnett with QID Q189240;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q189240 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:end_time ?y. wd:Q189240 p:member_of_sports_team ?q. ?q ps:member_of_sports_team wd:Q131371; pq:start_time ?z. FILTER(?y <= ?z) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2439",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q189240 p:P54 ?p. ?p ps:P54 ?x; pq:P582 ?y. wd:Q189240 p:P54 ?q. ?q ps:P54 wd:Q131371; pq:P580 ?z. FILTER(?y <= ?z) }"
    },
    {
        "input": "Query: who the voice of peter griffin?\nEntities:Peter Griffin with QID Q28465;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q28465. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2440",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q28465. }"
    },
    {
        "input": "Query: what is the name of dawn french's first novel?\nEntities:Dawn French with QID Q236309;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:literary_work; wdt:author wd:Q236309; wdt:publication_date ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2441",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q7725634; wdt:P50 wd:Q236309; wdt:P577 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: who is the governor of california 2010?\nEntities:governor with QID Q132050; California with QID Q99;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q99 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2442",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q99 wdt:P6 ?x. }"
    },
    {
        "input": "Query: where is st louis cardinals stadium?\nEntities:St. Louis Cardinals with QID Q504309;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q504309 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2444",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q504309 wdt:P115 ?x. }"
    },
    {
        "input": "Query: where does manny pacquiao live?\nEntities:Manny Pacquiao with QID Q486359;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q486359 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2446",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q486359 wdt:P551 ?x. }"
    },
    {
        "input": "Query: when were the duggar kids born?\nEntities:Jim Bob Duggar with QID Q6193704;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6193704 wdt:child ?p. ?p wdt:date_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2447",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6193704 wdt:P40 ?p. ?p wdt:P569 ?x. }"
    },
    {
        "input": "Query: where did pharaoh hatshepsut live?\nEntities:Hatshepsut with QID Q129234;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q129234 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2448",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q129234 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what four countries are in the united kingdom?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:contains_the_administrative_territorial_entity ?x. } LIMIT 4",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2449",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P150 ?x. } LIMIT 4"
    },
    {
        "input": "Query: who does sam bradford play for?\nEntities:Sam Bradford with QID Q714292;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q714292 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2451",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q714292 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what county is plymouth ia in?\nEntities:Plymouth with QID Q1927378;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1927378 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2453",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1927378 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what airlines fly into ontario international airport?\nEntities:Ontario International Airport with QID Q949831;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:airline_hub wd:Q949831. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2454",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P113 wd:Q949831. }"
    },
    {
        "input": "Query: what school did kurt vonnegut go to?\nEntities:Kurt Vonnegut with QID Q49074;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q49074 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2455",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q49074 wdt:P69 ?x. }"
    },
    {
        "input": "Query: where did henry hudson come from?\nEntities:Henry Hudson with QID Q179167;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q179167 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2457",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q179167 wdt:P19 ?x. }"
    },
    {
        "input": "Query: which continent is costa rica located?\nEntities:Costa Rica with QID Q800;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q800 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2458",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q800 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what movies has halle berry starred in?\nEntities:Halle Berry with QID Q1033016;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q1033016; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2459",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q1033016; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what was the capital of ancient israel?\nEntities:Kingdom of Israel with QID Q230407;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q230407 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2460",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q230407 wdt:P36 ?x. }"
    },
    {
        "input": "Query: where is sony ericsson based?\nEntities:Sony Mobile Communications with QID Q376692;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q376692 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2463",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q376692 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what school did michael jordan go to?\nEntities:Michael Jordan with QID Q41421;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41421 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2464",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41421 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what do you speak in singapore?\nEntities:Singapore with QID Q334;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q334 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2465",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q334 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where is reggie bush from?\nEntities:Reggie Bush with QID Q555271;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q555271 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2466",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q555271 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what has sara paxton been in?\nEntities:Sara Paxton with QID Q231635;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q231635; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2467",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q231635; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what primary school did sir isaac newton go to?\nEntities:grammar school with QID Q967098; Isaac Newton with QID Q935;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q935 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:grammar_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2468",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q935 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q967098. }"
    },
    {
        "input": "Query: what's the egyptian currency?\nEntities:Egypt with QID Q79;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2469",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what is mexico city time zone?\nEntities:Mexico City with QID Q1489;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1489 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2473",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1489 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who won the fa cup in 2008?\nEntities:FA Cup with QID Q925056; 2007\u201308 Football League with QID Q2037450;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q925056 wdt:winner ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2474",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q925056 wdt:P1346 ?x. }"
    },
    {
        "input": "Query: who plays jacob black in the twilight movies?\nEntities:Twilight with QID Q160071; Jacob Black with QID Q716835;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q160071 p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q716835. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2475",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q160071 p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q716835. }"
    },
    {
        "input": "Query: who is the head coach of the indianapolis colts?\nEntities:Indianapolis Colts with QID Q193753;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q193753 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2476",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q193753 wdt:P286 ?x. }"
    },
    {
        "input": "Query: what is the syracuse university mascot?\nEntities:Syracuse University with QID Q617433;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q617433 wdt:mascot ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2478",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q617433 wdt:P822 ?x. }"
    },
    {
        "input": "Query: where does honda play soccer?\nEntities:Keisuke Honda with QID Q202054;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q202054 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2479",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q202054 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what time zone is ontario toronto?\nEntities:Ontario with QID Q1904; Toronto with QID Q172;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q172 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2480",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q172 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what government did japan have?\nEntities:Japan with QID Q17;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2482",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where does the shannon river end?\nEntities:River Shannon with QID Q192820;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q192820 wdt:mouth_of_the_watercourse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2483",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q192820 wdt:P403 ?x. }"
    },
    {
        "input": "Query: what all does stan kroenke own?\nEntities:Stan Kroenke with QID Q945207;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q945207 wdt:owner_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2484",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q945207 wdt:P1830 ?x. }"
    },
    {
        "input": "Query: what countries does china border?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2485",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P47 ?x. }"
    },
    {
        "input": "Query: what university did donald trump graduate from?\nEntities:Donald Trump with QID Q22686;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q22686 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2486",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q22686 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what drug did mitch hedberg overdose on?\nEntities:Mitch Hedberg with QID Q2314865;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2314865 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2487",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2314865 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what is british columbia?\nEntities:British Columbia with QID Q1973;",
        "output": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q1973 schema:description ?x. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2490",
        "sparql": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q1973 schema:description ?x. } }"
    },
    {
        "input": "Query: what language do you speak in austria?\nEntities:Austria with QID Q40;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q40 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2491",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q40 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who was rosemary clooney married to?\nEntities:Rosemary Clooney with QID Q466508;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q466508 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2493",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q466508 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where did roger moore live?\nEntities:Roger Moore with QID Q134333;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q134333 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2494",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q134333 wdt:P551 ?x. }"
    },
    {
        "input": "Query: who's the oakland raiders head coach?\nEntities:Las Vegas Raiders with QID Q324523;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q324523 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2495",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q324523 wdt:P286 ?x. }"
    },
    {
        "input": "Query: where is portuguese language spoken?\nEntities:Portuguese with QID Q5146;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q5146; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2496",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q5146; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: who is married to garth brooks?\nEntities:Garth Brooks with QID Q216288;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q216288 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2497",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q216288 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what political party was hitler the leader of?\nEntities:Adolf Hitler with QID Q352;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q352 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2498",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q352 wdt:P102 ?x. }"
    },
    {
        "input": "Query: who did plaxico burress sign with 2012?\nEntities:Plaxico Burress with QID Q1379303;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1379303 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2499",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1379303 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who does zach galifianakis play in the hangover?\nEntities:Hangover with QID Q2708940; Zach Galifianakis with QID Q139325;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2708940 p:cast_member ?p. ?p ps:cast_member wd:Q139325; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2500",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2708940 p:P161 ?p. ?p ps:P161 wd:Q139325; pq:P453 ?x. }"
    },
    {
        "input": "Query: who plays lois in family guy?\nEntities:Family Guy with QID Q5930; Lois Griffin with QID Q853073;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q853073. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2501",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q853073. }"
    },
    {
        "input": "Query: what state did dwight d. eisenhower live in?\nEntities:federated state with QID Q107390; Dwight D. Eisenhower with QID Q9916;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9916 p:residence ?p. ?p ps:residence ?y. ?y wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2502",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9916 p:P551 ?p. ?p ps:P551 ?y. ?y wdt:P131+ ?x. ?x wdt:P31 wd:Q107390. }"
    },
    {
        "input": "Query: what are 2 inventions benjamin franklin is credited with creating?\nEntities:Benjamin Franklin with QID Q34969;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q34969. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2503",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q34969. }"
    },
    {
        "input": "Query: where did carmen electra grow up?\nEntities:Carmen Electra with QID Q185122;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q185122 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2504",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q185122 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what is vanderbilt university mascot?\nEntities:Vanderbilt University with QID Q29052;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29052 wdt:mascot ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2505",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29052 wdt:P822 ?x. }"
    },
    {
        "input": "Query: what famous book did benjamin franklin wrote?\nEntities:Benjamin Franklin with QID Q34969;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:author wd:Q34969. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2506",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P50 wd:Q34969. }"
    },
    {
        "input": "Query: what band does adam levine sing for?\nEntities:Adam Levine with QID Q219631;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:has_part(s) wd:Q219631. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2507",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P527 wd:Q219631. }"
    },
    {
        "input": "Query: where did brian williams go to college?\nEntities:Brian Williams with QID Q459695;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q459695 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2508",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q459695 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where did robert hooke get his education?\nEntities:Robert Hooke with QID Q46830;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q46830 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2509",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q46830 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what country did truman lead?\nEntities:Harry S. Truman with QID Q11613;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11613 wdt:position_held ?y. ?y wdt:applies_to_jurisdiction ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2510",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11613 wdt:P39 ?y. ?y wdt:P1001 ?x. }"
    },
    {
        "input": "Query: what is language in argentina?\nEntities:Argentina with QID Q414;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q414 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2511",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q414 wdt:P37 ?x. }"
    },
    {
        "input": "Query: which island in greece?\nEntities:Greece with QID Q41;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:island_group; wdt:country wd:Q41. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2512",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q1402592; wdt:P17 wd:Q41. }"
    },
    {
        "input": "Query: who has won the most fa cup?\nEntities:FA Cup with QID Q11151;",
        "output": "SELECT ?x (COUNT(?x) AS ?y) WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:fa_cup_final; wdt:winner ?x. } GROUP BY ?x ORDER BY DESC(?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2513",
        "sparql": "SELECT ?x (COUNT(?x) AS ?y) WHERE { ?p wdt:P31 wd:Q4484477; wdt:P1346 ?x. } GROUP BY ?x ORDER BY DESC(?y) LIMIT 1"
    },
    {
        "input": "Query: what time is kansas in?\nEntities:Kansas with QID Q1558;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1558 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2514",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1558 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what time is in san diego california?\nEntities:San Diego with QID Q16552;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16552 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2515",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16552 wdt:P421 ?x. }"
    },
    {
        "input": "Query: when did hurricane irene hit ct?\nEntities:Hurricane Irene with QID Q187621;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q187621 wdt:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2517",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q187621 wdt:P580 ?x. }"
    },
    {
        "input": "Query: who did michael jackson play in the wiz?\nEntities:Michael Jackson with QID Q2831; The Wiz with QID Q428158;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q428158 p:cast_member ?p. ?p ps:cast_member wd:Q2831; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2518",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q428158 p:P161 ?p. ?p ps:P161 wd:Q2831; pq:P453 ?x. }"
    },
    {
        "input": "Query: what was gregor mendel known for?\nEntities:Gregor Mendel with QID Q37970;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37970 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2520",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37970 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what drugs does charlie sheen do?\nEntities:Charlie Sheen with QID Q103939;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q103939 wdt:medical_condition ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2521",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q103939 wdt:P1050 ?x. }"
    },
    {
        "input": "Query: what is the capital city of assyrian empire?\nEntities:Assyrian Empire with QID Q41137;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41137 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2522",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41137 wdt:P36 ?x. }"
    },
    {
        "input": "Query: which countries speak english?\nEntities:English with QID Q1860;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q1860; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2523",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q1860; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: what disease michael jackson?\nEntities:Michael Jackson with QID Q2831;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:medical_condition ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2524",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:P1050 ?x. }"
    },
    {
        "input": "Query: where did jerry spinelli go to college?\nEntities:Jerry Spinelli with QID Q563118;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q563118 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2525",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q563118 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what is the zip code for cordova tn?\nEntities:C\u00f3rdoba with QID Q5170040;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5170040 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2526",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5170040 wdt:P281 ?x. }"
    },
    {
        "input": "Query: what is julia gillard party?\nEntities:Julia Gillard with QID Q41563;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41563 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2527",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41563 wdt:P102 ?x. }"
    },
    {
        "input": "Query: what is the origin of the turkish language?\nEntities:Turkish with QID Q256;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q256 wdt:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2528",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q256 wdt:P279 ?x. }"
    },
    {
        "input": "Query: when did tom brady join the patriots?\nEntities:Tom Brady with QID Q313381; New England Patriots with QID Q193390;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q313381 p:member_of_sports_team ?p. ?p ps:member_of_sports_team wd:Q193390; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2529",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q313381 p:P54 ?p. ?p ps:P54 wd:Q193390; pq:P580 ?x. }"
    },
    {
        "input": "Query: what is isaac newton famous for?\nEntities:Isaac Newton with QID Q935;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q935 wdt:notable_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2530",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q935 wdt:P800 ?x. }"
    },
    {
        "input": "Query: where did barack obama went to school?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2533",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what battles did robert e lee participate in?\nEntities:Q with QID Q287297; Robert E. Lee with QID Q165557;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q165557 wdt:conflict ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2534",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q165557 wdt:P607 ?x. }"
    },
    {
        "input": "Query: who was the prime minister of canada in 1998?\nEntities:prime minister with QID Q14212; Canada with QID Q16;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:prime_minister_of_canada; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"1999-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1998-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2535",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q839078; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"1999-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1998-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what did ron howard direct?\nEntities:Ron Howard with QID Q103646;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:director wd:Q103646. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2536",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P57 wd:Q103646. }"
    },
    {
        "input": "Query: who are shakespeare's siblings?\nEntities:William Shakespeare with QID Q692;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q692 wdt:sibling ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2538",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q692 wdt:P3373 ?x. }"
    },
    {
        "input": "Query: what team did albert pujols play for?\nEntities:Albert Pujols with QID Q148726;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148726 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2539",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148726 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what inspired monet?\nEntities:Claude Monet with QID Q296;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q296 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2540",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q296 wdt:P737 ?x. }"
    },
    {
        "input": "Query: where does kaka live?\nEntities:Kak\u00e1 with QID Q531814;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q531814 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2542",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q531814 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what are fun things to do in seattle wa?\nEntities:Seattle with QID Q5083;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q5083. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2544",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q5083. }"
    },
    {
        "input": "Query: where does the oklahoma city thunder practice?\nEntities:Oklahoma City Thunder with QID Q180950;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q180950 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2545",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q180950 wdt:P115 ?x. }"
    },
    {
        "input": "Query: what is the language called in turkey?\nEntities:Turkey with QID Q43;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2546",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who was theodore roosevelt's vice president?\nEntities:Theodore Roosevelt with QID Q33866; President of the United States with QID Q11696; Vice President of the United States with QID Q11699;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:Q11699; pq:start_time ?y. wd:Q33866 p:position_held ?q. ?q ps:position_held wd:Q11696; pq:start_time ?z. FILTER(?y = ?z) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2547",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q11699; pq:P580 ?y. wd:Q33866 p:P39 ?q. ?q ps:P39 wd:Q11696; pq:P580 ?z. FILTER(?y = ?z) }"
    },
    {
        "input": "Query: what college did charles richard drew go to?\nEntities:Charles Richard Drew with QID Q1065848;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1065848 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2548",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1065848 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where does the roman language come from?\nEntities:Latin with QID Q397;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q397 wdt:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2549",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q397 wdt:P279 ?x. }"
    },
    {
        "input": "Query: what nationality is jermaine paul?\nEntities:Jermaine Paul with QID Q6182356;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6182356 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2550",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6182356 wdt:P27 ?x. }"
    },
    {
        "input": "Query: where did the oakland raiders move from?\nEntities:Las Vegas Raiders with QID Q324523;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q324523 wdt:headquarters_location ?y; p:headquarters_location ?p. ?p ps:headquarters_location ?x. FILTER(?x NOT IN(?y)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2551",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q324523 wdt:P159 ?y; p:P159 ?p. ?p ps:P159 ?x. FILTER(?x NOT IN(?y)) }"
    },
    {
        "input": "Query: who were mary shelley's parents?\nEntities:Mary Shelley with QID Q47152;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q47152 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2553",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q47152 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: what do do in new york?\nEntities:New York City with QID Q60;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q60. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2555",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q60. }"
    },
    {
        "input": "Query: what are some of the religions in australia?\nEntities:Australia with QID Q408;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2556",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q408 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what is the capital city of south carolina?\nEntities:South Carolina with QID Q1456;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1456 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2557",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1456 wdt:P36 ?x. }"
    },
    {
        "input": "Query: what language do they speak in indonesia?\nEntities:Indonesia with QID Q252;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q252 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2558",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q252 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what type of political system is headed by queen elizabeth ii?\nEntities:Elizabeth II with QID Q9682;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:country; p:head_of_state ?p. ?p ps:head_of_state wd:Q9682; wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2559",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31 wd:Q6256; p:P35 ?p. ?p ps:P35 wd:Q9682; wdt:P122 ?x. }"
    },
    {
        "input": "Query: what is the actual current local time now in uk?\nEntities:United Kingdom with QID Q145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2560",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what are some of the awards taylor swift has won?\nEntities:Taylor Swift with QID Q26876;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q26876 wdt:award_received ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2561",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q26876 wdt:P166 ?x. }"
    },
    {
        "input": "Query: where did chris cuomo go?\nEntities:Andrew Cuomo with QID Q11673;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11673 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2563",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11673 wdt:P69 ?x. }"
    },
    {
        "input": "Query: where did gary coleman live when he died?\nEntities:Gary Coleman with QID Q313367;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q313367 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2564",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q313367 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what is there to do in palm springs?\nEntities:Palm Springs with QID Q488004;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q488004. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2565",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q488004. }"
    },
    {
        "input": "Query: where is auburn university at?\nEntities:Auburn University with QID Q540672;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q540672 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2566",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q540672 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where was ronald reagan born and raised?\nEntities:Ronald Reagan with QID Q9960;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9960 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2567",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9960 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what county is morristown tn in?\nEntities:Morristown with QID Q962499;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q962499 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2568",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q962499 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where do the houston rockets play basketball?\nEntities:Houston Rockets with QID Q161345;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q161345 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2569",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q161345 wdt:P115 ?x. }"
    },
    {
        "input": "Query: who was the president of the united states during ww2?\nEntities:President of the United States with QID Q11696; World War II with QID Q362;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:Q11696; pq:start_time ?y. wd:Q362 wdt:start_time ?w; wdt:end_time ?v. FILTER(((?y >= ?w) && (?y <= ?v))) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2570",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q11696; pq:P580 ?y. wd:Q362 wdt:P580 ?w; wdt:P582 ?v. FILTER(((?y >= ?w) && (?y <= ?v))) }"
    },
    {
        "input": "Query: which states does the connecticut river flow through?\nEntities:Connecticut River with QID Q379648; federated state with QID Q107390;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q379648 wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2572",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q379648 wdt:P131+ ?x. ?x wdt:P31/wdt:P279* wd:Q107390. }"
    },
    {
        "input": "Query: what are the biggest cities in illinois?\nEntities:Illinois with QID Q1204;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:city; wdt:located_in_the_administrative_territorial_entity+ wd:Q1204; wdt:population ?y. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2573",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q515; wdt:P131+ wd:Q1204; wdt:P1082 ?y. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: which province in canada is the most populated?\nEntities:Canada with QID Q16;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:province_of_canada; wdt:population ?y. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2575",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q11828004; wdt:P1082 ?y. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: what continent do the falkland islands belong to?\nEntities:Falkland Islands with QID Q9648;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9648 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2576",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9648 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what language do russian people speak?\nEntities:Russia with QID Q159;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2577",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q159 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what did alvin smith died from?\nEntities:Alvin Smith with QID Q4738229;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4738229 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2579",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4738229 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what are the four harry potter house names?\nEntities:Hogwarts House with QID Q933971;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:hogwarts_house. } LIMIT 4",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2580",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q933971. } LIMIT 4"
    },
    {
        "input": "Query: who has tim howard played for?\nEntities:Tim Howard with QID Q200785;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q200785 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2581",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q200785 wdt:P54 ?x. }"
    },
    {
        "input": "Query: when is the gold cup cheltenham?\nEntities:Cheltenham Gold Cup with QID Q11317814;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11317814 wdt:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2582",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11317814 wdt:P580 ?x. }"
    },
    {
        "input": "Query: where does portuguese originate?\nEntities:Portuguese with QID Q5146;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5146 wdt:subclass_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2583",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5146 wdt:P279 ?x. }"
    },
    {
        "input": "Query: what currency in dominican republic should i bring?\nEntities:Dominican Republic with QID Q786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2584",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who did howie long married?\nEntities:Howie Long with QID Q962794;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q962794 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2585",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q962794 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what region of the world is north america in?\nEntities:North America with QID Q49;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q49 wdt:located_in/on_physical_feature ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2586",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q49 wdt:P706 ?x. }"
    },
    {
        "input": "Query: who is the current governor of georgia?\nEntities:Georgia with QID Q1428; Colombia with QID Q739; governor with QID Q132050;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q739 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2587",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q739 wdt:P6 ?x. }"
    },
    {
        "input": "Query: what instrument does ringo starr play?\nEntities:Ringo Starr with QID Q2632;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2632 wdt:instrument ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2590",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2632 wdt:P1303 ?x. }"
    },
    {
        "input": "Query: what character did stan lee create?\nEntities:Stan Lee with QID Q181900;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:creator wd:Q181900. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2592",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P170 wd:Q181900. }"
    },
    {
        "input": "Query: who did mario lopez just marry?\nEntities:Mario Lopez with QID Q372559;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q372559 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2595",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q372559 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what happened to president james garfield?\nEntities:James A. Garfield with QID Q34597;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34597 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2596",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34597 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what time zone am i in missouri?\nEntities:Missouri with QID Q1581;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1581 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2597",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1581 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who is paul mccartney's current wife?\nEntities:Paul McCartney with QID Q2599;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2599 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2598",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2599 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what channel is anderson cooper talk show on?\nEntities:Anderson Cooper 360\u00b0 with QID Q1982877;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1982877 wdt:original_broadcaster ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2599",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1982877 wdt:P449 ?x. }"
    },
    {
        "input": "Query: what drugs were in whitney houston when she died?\nEntities:Whitney Houston with QID Q34389;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34389 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2600",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34389 wdt:P509 ?x. }"
    },
    {
        "input": "Query: who did warren moon play for?\nEntities:Warren Moon with QID Q126710;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q126710 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2601",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q126710 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what brand of guitar does steve vai play?\nEntities:Steve Vai with QID Q193397;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:subclass_of* wd:Q6607; wdt:used_by wd:steve_vai. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2602",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P279* wd:Q6607; wdt:P1535 wd:Q193397. }"
    },
    {
        "input": "Query: what do hungarian people speak?\nEntities:Hungary with QID Q28;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q28 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2603",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q28 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what prep school did romney attend?\nEntities:preparatory school with QID Q4367464; Mitt Romney with QID Q4496;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4496 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:preparatory_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2604",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4496 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q4367464. }"
    },
    {
        "input": "Query: in what town did ned kelly and his family grow up?\nEntities:Ned Kelly with QID Q301816;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q301816 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2605",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q301816 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what is bethenny frankel husband name?\nEntities:Bethenny Frankel with QID Q4492369;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4492369 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2606",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4492369 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who is the present president of china?\nEntities:people's republic with QID Q465613; People's Republic of China with QID Q148; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2608",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P6 ?x. }"
    },
    {
        "input": "Query: who speaks stewie on family guy?\nEntities:Family Guy with QID Q5930; Stewie Griffin with QID Q837909;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q837909. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2609",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q837909. }"
    },
    {
        "input": "Query: who influenced arthur conan doyle?\nEntities:Arthur Conan Doyle with QID Q35610;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35610 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2610",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35610 wdt:P737 ?x. }"
    },
    {
        "input": "Query: when was samuel pepys?\nEntities:Samuel Pepys with QID Q106143;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q106143 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2611",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q106143 wdt:P27 ?x. }"
    },
    {
        "input": "Query: what type of money does jamaica use?\nEntities:Jamaica with QID Q766;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2614",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what instrument does fela kuti play?\nEntities:Fela Kuti with QID Q313868;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q313868 wdt:instrument ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2615",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q313868 wdt:P1303 ?x. }"
    },
    {
        "input": "Query: who is kurt busch driving for now?\nEntities:Kurt Busch with QID Q201820;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q201820 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2616",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q201820 wdt:P54 ?x. }"
    },
    {
        "input": "Query: who was charlemagne's wife?\nEntities:Charlemagne with QID Q3044;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3044 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2617",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3044 wdt:P26 ?x. }"
    },
    {
        "input": "Query: where did woodrow wilson go to school?\nEntities:Woodrow Wilson with QID Q34296;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34296 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2618",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34296 wdt:P69 ?x. }"
    },
    {
        "input": "Query: who is lamar odom married too?\nEntities:Lamar Odom with QID Q296403;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q296403 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2619",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q296403 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who is angelina jolie's husband?\nEntities:Angelina Jolie with QID Q13909;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q13909 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2621",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q13909 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what kind of money do they use in aruba?\nEntities:Aruba with QID Q21203;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q21203 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2622",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q21203 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what wars did robert e lee lead?\nEntities:Robert E. Lee with QID Q165557;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q165557 wdt:conflict ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2624",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q165557 wdt:P607 ?x. }"
    },
    {
        "input": "Query: where did tennessee williams live?\nEntities:Tennessee Williams with QID Q134262;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q134262 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2626",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q134262 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what was king louis xiv religion?\nEntities:Louis XIV of France with QID Q7742;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7742 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2627",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7742 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what language do they in belgium?\nEntities:Belgium with QID Q31;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q31 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2628",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q31 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who plays walter in fringe?\nEntities:Fringe with QID Q3815; Walter Bishop with QID Q2720022;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3815 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q2720022. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2629",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3815 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q2720022. }"
    },
    {
        "input": "Query: where is port st lucie florida on the map?\nEntities:Port St. Lucie with QID Q667749;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q667749 wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2630",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q667749 wdt:P625 ?x. }"
    },
    {
        "input": "Query: what countries are the mediterranean?\nEntities:Mediterranean Sea with QID Q4918;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4918 wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2631",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4918 wdt:P17 ?x. }"
    },
    {
        "input": "Query: what city has the largest population in mexico?\nEntities:Mexico with QID Q96;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:city; wdt:country wd:Q96; wdt:population ?y. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2632",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q515; wdt:P17 wd:Q96; wdt:P1082 ?y. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: who juan ponce de leon?\nEntities:Juan Ponce de Le\u00f3n with QID Q185974;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q185974 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2633",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q185974 wdt:P106 ?x. }"
    },
    {
        "input": "Query: in what years did the new york yankees win the world series?\nEntities:New York Yankees with QID Q213417; World Series with QID Q265538;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:winner wd:Q213417; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2634",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q213417; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what state is toronto in?\nEntities:Toronto with QID Q172;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q172 wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2635",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q172 wdt:P131+ ?x. ?x wdt:P31/wdt:P279* wd:Q107390. }"
    },
    {
        "input": "Query: where did the loma prieta earthquake occur?\nEntities:1989 Loma Prieta earthquake with QID Q1053476;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1053476 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2637",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1053476 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what is the state motto of massachusetts?\nEntities:Massachusetts with QID Q771;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q771 wdt:motto ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2638",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q771 wdt:P1546 ?x. }"
    },
    {
        "input": "Query: what is time zone in new orleans?\nEntities:New Orleans with QID Q34404;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34404 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2639",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34404 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what type of poetry does john donne write?\nEntities:John Donne with QID Q140412;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q140412 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2640",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q140412 wdt:P136 ?x. }"
    },
    {
        "input": "Query: where did helen keller die?\nEntities:Helen Keller with QID Q38203;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38203 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2641",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38203 wdt:P20 ?x. }"
    },
    {
        "input": "Query: who is the current president of chile?\nEntities:Chile with QID Q298; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q298 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2642",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q298 wdt:P6 ?x. }"
    },
    {
        "input": "Query: where did johann sebastian bach live?\nEntities:Johann Sebastian Bach with QID Q1339;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1339 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2646",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1339 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what timezone is malaysia?\nEntities:Malaysia with QID Q833;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q833 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2648",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q833 wdt:P421 ?x. }"
    },
    {
        "input": "Query: where is alex smith from?\nEntities:Alex Smith with QID Q717897;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q717897 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2649",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q717897 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where was alice walker born?\nEntities:Alice Walker with QID Q215868;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q215868 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2650",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q215868 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what do they speak iceland?\nEntities:Iceland with QID Q189;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q189 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2651",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q189 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what wars have france been involved in?\nEntities:France with QID Q142;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:war; wdt:participant wd:Q142. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2653",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q198; wdt:P710 wd:Q142. }"
    },
    {
        "input": "Query: who plays moira on the l word?\nEntities:The L Word with QID Q216792;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q216792 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:moira. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2654",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q216792 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q3319244. }"
    },
    {
        "input": "Query: when did joe mcelderry won x factor?\nEntities:The X Factor with QID Q4431988; Joe McElderry with QID Q350368;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:part_of_the_series wd:Q4431988; wdt:winner wd:Q350368. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2655",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P179 wd:Q4431988; wdt:P1346 wd:Q350368. }"
    },
    {
        "input": "Query: what is the major language of jamaica?\nEntities:Jamaica with QID Q766;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2656",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who was the members of blackstreet?\nEntities:Blackstreet with QID Q222517;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q222517 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2657",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q222517 wdt:P527 ?x. }"
    },
    {
        "input": "Query: who created the character of sherlock holmes?\nEntities:Sherlock Holmes with QID Q4653;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4653 wdt:creator ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2661",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4653 wdt:P170 ?x. }"
    },
    {
        "input": "Query: what does scottish people speak?\nEntities:Scotland with QID Q22;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q22 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2662",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q22 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who all has kim kardashian dated?\nEntities:Kim Kardashian with QID Q186304;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q186304 wdt:unmarried_partner|wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2663",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q186304 wdt:P451|wdt:P26 ?x. }"
    },
    {
        "input": "Query: what book did john steinbeck wrote about the people in the dust bowl?\nEntities:John Steinbeck with QID Q39212; Dust Bowl with QID Q726501;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:author wd:Q39212; wdt:set_in_period wd:Q726501. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2666",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P50 wd:Q39212; wdt:P2408 wd:Q726501. }"
    },
    {
        "input": "Query: who is the voice of family guys meg griffin?\nEntities:Family Guy with QID Q5930; Meg Griffin with QID Q908772;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q908772. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2668",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q908772. }"
    },
    {
        "input": "Query: what kind of currency does jamaica use?\nEntities:Jamaica with QID Q766;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2672",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what type of government does the nigeria have?\nEntities:Nigeria with QID Q1033;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2673",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1033 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where is usc from?\nEntities:University of South Carolina with QID Q1024426;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1024426 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2674",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1024426 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what country was william shakespeare born?\nEntities:William Shakespeare with QID Q692;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q692 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2675",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q692 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where great britain on the world map?\nEntities:Great Britain with QID Q23666;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23666 wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2677",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23666 wdt:P625 ?x. }"
    },
    {
        "input": "Query: what to see in dallas tx?\nEntities:Dallas with QID Q16557;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q16557. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2678",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q16557. }"
    },
    {
        "input": "Query: what is my timezone in california?\nEntities:California with QID Q99;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q99 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2679",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q99 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what is president abraham lincoln known for?\nEntities:Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2680",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who does jemaine clement play in despicable me?\nEntities:Despicable Me with QID Q4447; Jemaine Clement with QID Q439315;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4447 p:copyright_license ?p. ?p ps:copyright_license wd:Q439315; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2682",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4447 p:P275 ?p. ?p ps:P275 wd:Q439315; pq:P453 ?x. }"
    },
    {
        "input": "Query: what year did the vietnam war happen?\nEntities:Vietnam War with QID Q8740;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8740 wdt:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2683",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8740 wdt:P580 ?x. }"
    },
    {
        "input": "Query: where do the broncos play?\nEntities:Denver Broncos with QID Q223507;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q223507 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2684",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q223507 wdt:P115 ?x. }"
    },
    {
        "input": "Query: who inspired antonio vivaldi?\nEntities:Antonio Vivaldi with QID Q1340;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:influenced_by wd:Q1340. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2685",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P737 wd:Q1340. }"
    },
    {
        "input": "Query: what type of currency is used in puerto rico?\nEntities:Puerto Rico with QID Q1183;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1183 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2686",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1183 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what is jackie kennedy famous for?\nEntities:Jacqueline Kennedy Onassis with QID Q165421;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q165421 wdt:notable_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2687",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q165421 wdt:P800 ?x. }"
    },
    {
        "input": "Query: what currency is used in france before euro?\nEntities:France with QID Q142; euro with QID Q4916;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q142 p:currency ?p. ?p ps:currency ?x; pq:start_time ?y; pq:end_time ?z. wd:Q142 p:currency ?q. ?q ps:currency wd:Q4916; pq:start_time ?w. FILTER((?y < ?w) || (?z <= ?w)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2688",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q142 p:P38 ?p. ?p ps:P38 ?x; pq:P580 ?y; pq:P582 ?z. wd:Q142 p:P38 ?q. ?q ps:P38 wd:Q4916; pq:P580 ?w. FILTER((?y < ?w) || (?z <= ?w)) }"
    },
    {
        "input": "Query: who started up mcdonalds?\nEntities:McDonald\u2019s with QID Q38076;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38076 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2689",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38076 wdt:P112 ?x. }"
    },
    {
        "input": "Query: what major landforms are located in egypt?\nEntities:Egypt with QID Q79;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:landform; wdt:country wd:Q79. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2690",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q271669; wdt:P17 wd:Q79. }"
    },
    {
        "input": "Query: what state was ronald reagan governor of?\nEntities:Ronald Reagan with QID Q9960; governor with QID Q132050;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9960 p:position_held ?p. ?p ps:position_held ?y. ?y wdt:subclass_of wd:governor; wdt:applies_to_jurisdiction ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2693",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9960 p:P39 ?p. ?p ps:P39 ?y. ?y wdt:P279 wd:Q889821; wdt:P1001 ?x. }"
    },
    {
        "input": "Query: what is the most practiced religion in the united states?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2694",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what is st james palace?\nEntities:St James's Palace with QID Q272162;",
        "output": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q272162 schema:description ?x. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2697",
        "sparql": "SELECT DISTINCT ?x WHERE { SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". wd:Q272162 schema:description ?x. } }"
    },
    {
        "input": "Query: what airport to fly into to get to clearwater florida?\nEntities:Clearwater with QID Q244146;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:airport; wdt:located_in_the_administrative_territorial_entity wd:Q244146. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2698",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q1248784; wdt:P131 wd:Q244146. }"
    },
    {
        "input": "Query: who has britney spears married?\nEntities:Britney Spears with QID Q11975;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11975 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2699",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11975 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what currency is used in hungary?\nEntities:Hungary with QID Q28;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q28 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2700",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q28 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what currency do they use in qatar?\nEntities:Qatar with QID Q846;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q846 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2701",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q846 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what are fun things to do in denver colorado?\nEntities:Denver with QID Q16554;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q16554. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2702",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q16554. }"
    },
    {
        "input": "Query: what did thoreau die from?\nEntities:Henry David Thoreau with QID Q131149;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q131149 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2703",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q131149 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what years did the red sox win the world series?\nEntities:Boston Red Sox with QID Q213959; World Series with QID Q265538;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:winner wd:Q213959; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2706",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q213959; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what war was woodrow wilson president for?\nEntities:President of the United States with QID Q11696; Woodrow Wilson with QID Q34296;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34296 p:position_held ?p. ?p ps:position_held wd:Q11696; pq:start_time ?y; pq:end_time ?z. ?x wdt:instance_of/wdt:subclass_of* wd:war; wdt:start_time ?w; wdt:end_time ?v. FILTER(((?w < ?z) && (?w >= ?y)) || ((?v < ?z) && (?v >= ?y))) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2707",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34296 p:P39 ?p. ?p ps:P39 wd:Q11696; pq:P580 ?y; pq:P582 ?z. ?x wdt:P31 wd:Q198; wdt:P580 ?w; wdt:P582 ?v. FILTER(((?w < ?z) && (?w >= ?y)) || ((?v < ?z) && (?v >= ?y))) }"
    },
    {
        "input": "Query: who is carl edwards racing for?\nEntities:Carl Edwards with QID Q704008;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q704008 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2708",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q704008 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where are the florida marlins from?\nEntities:Miami Marlins with QID Q652879;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q652879 wdt:home_venue ?y. ?y wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2710",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q652879 wdt:P115 ?y. ?y wdt:P131 ?x. }"
    },
    {
        "input": "Query: what is the main religion in eastern europe?\nEntities:Eastern Europe with QID Q27468;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q27468 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2711",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q27468 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what language does romanian people speak?\nEntities:Romania with QID Q218;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q218 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2712",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q218 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what date was john adams elected president?\nEntities:John Adams with QID Q11806; President of the United States with QID Q11696; President-elect of the United States with QID Q1467287;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11806 p:position_held ?y. ?y ps:position_held wd:Q1467287; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2713",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11806 p:P39 ?y. ?y ps:P39 wd:Q1467287; pq:P580 ?x. }"
    },
    {
        "input": "Query: who nominated stephen g. breyer?\nEntities:Stephen Breyer with QID Q11124;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11124 p:position_held ?p. ?p pq:nominated_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2714",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11124 p:P39 ?p. ?p pq:P4353 ?x. }"
    },
    {
        "input": "Query: which party was lincoln?\nEntities:Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2717",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:P102 ?x. }"
    },
    {
        "input": "Query: who are the two current illinois senators?\nEntities:United States of America with QID Q30; Illinois with QID Q1204;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:senators. ?p pq:electoral_district ?y. ?y wdt:located_in_the_administrative_territorial_entity wd:Q1204. FILTER NOT EXISTS { ?p pq:end_time ?z. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2718",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4416090. ?p pq:P768 ?y. ?y wdt:P131 wd:Q1204. FILTER NOT EXISTS { ?p pq:P582 ?z. } }"
    },
    {
        "input": "Query: what did robin gibb died from?\nEntities:Robin Gibb with QID Q188482;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q188482 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2719",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q188482 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what were adolf hitler's parents names?\nEntities:Adolf Hitler with QID Q352;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q352 wdt:father|wdt:mother ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2721",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q352 wdt:P22|wdt:P25 ?x. }"
    },
    {
        "input": "Query: what did jordyn wieber win gold for?\nEntities:Olympic Games with QID Q5389; Jordyn Wieber with QID Q602245;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q602245 p:participant_in ?p. ?p ps:participant_in ?x; pq:award_received wd:gold. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2722",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q602245 p:P1344 ?p. ?p ps:P1344 ?x; pq:P166 wd:Q15243387. }"
    },
    {
        "input": "Query: what job does bill rancic have?\nEntities:Bill Rancic with QID Q339702;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q339702 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2723",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q339702 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what did robert hooke discover?\nEntities:Robert Hooke with QID Q46830;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q46830. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2724",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q46830. }"
    },
    {
        "input": "Query: who owns the new england patriots football team?\nEntities:New England Patriots with QID Q193390;",
        "output": "SELECT DISTINCT ?x WHERE { { wd:Q193390 wdt:owned_by ?x. } UNION { ?x wdt:owner_of wd:Q193390. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2726",
        "sparql": "SELECT DISTINCT ?x WHERE { { wd:Q193390 wdt:P127 ?x. } UNION { ?x wdt:P1830 wd:Q193390. } }"
    },
    {
        "input": "Query: what is the dollar called in brazil?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2728",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what has lucy hale played in?\nEntities:Lucy Hale with QID Q229940;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q229940; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2730",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q229940; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: who won 2011 heisman trophy?\nEntities:Heisman Trophy with QID Q1035067;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1035067 p:winner ?p. ?p ps:winner ?x; pq:point_in_time ?y. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2731",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1035067 p:P1346 ?p. ?p ps:P1346 ?x; pq:P585 ?y. FILTER((?y < \"2012-01-01T00:00:00Z\"^^xsd:dateTime) && (?y >= \"2011-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who is the falcons kicker?\nEntities:Atlanta Falcons with QID Q272059; placekicker with QID Q1638113; Bowling Green Falcons football with QID Q16953142;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:position_played_on_team_/_speciality wd:Q1638113; p:member_of_sports_team ?y. ?y ps:member_of_sports_team wd:Q272059; pq:start_time ?z. } ORDER BY DESC (?z) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2732",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P413 wd:Q1638113; p:P54 ?y. ?y ps:P54 wd:Q272059; pq:P580 ?z. } ORDER BY DESC (?z) LIMIT 1"
    },
    {
        "input": "Query: where did charles drew go to high school?\nEntities:Charles Richard Drew with QID Q1065848;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1065848 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:high_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2733",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1065848 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q9826. }"
    },
    {
        "input": "Query: what language do argentina use?\nEntities:Argentina with QID Q414;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q414 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2734",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q414 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who won governor race in indiana?\nEntities:Indiana with QID Q1415; governor with QID Q132050; Texas with QID Q1439;",
        "output": "SELECT DISTINCT ?x WHERE { wd:governor_of_texas wdt:officeholder ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2735",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5589725 wdt:P1308 ?x. }"
    },
    {
        "input": "Query: what languages do people speak in egypt?\nEntities:Egypt with QID Q79; Idaho with QID Q1221;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2736",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what college did florence griffith joyner attend?\nEntities:Florence Griffith Joyner with QID Q31082;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q31082 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2737",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q31082 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what style of art did henri matisse use?\nEntities:Henri Matisse with QID Q5589;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5589 wdt:movement ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2738",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5589 wdt:P135 ?x. }"
    },
    {
        "input": "Query: who was reese witherspoon married too?\nEntities:Reese Witherspoon with QID Q44063;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q44063 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2741",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q44063 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who is the coach of the la lakers?\nEntities:Los Angeles Lakers with QID Q121783;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q121783 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2743",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q121783 wdt:P286 ?x. }"
    },
    {
        "input": "Query: what is the dominican republic's capital?\nEntities:Dominican Republic with QID Q786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2744",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P36 ?x. }"
    },
    {
        "input": "Query: what is illinois state flower called?\nEntities:Illinois with QID Q1204;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1204 p:official_symbol ?p. ?p ps:official_symbol ?x; pq:object_has_role wd:flower. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2745",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1204 p:P2238 ?p. ?p ps:P2238 ?x; pq:P3831 wd:Q506. }"
    },
    {
        "input": "Query: what language do they speak thailand?\nEntities:Thailand with QID Q869;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2748",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q869 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what are the major religions in poland?\nEntities:Poland with QID Q36;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2749",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what is the san francisco giants mascot?\nEntities:San Francisco Giants with QID Q308966;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q308966 wdt:mascot ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2750",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q308966 wdt:P822 ?x. }"
    },
    {
        "input": "Query: where was tupac born?\nEntities:Tupac Shakur with QID Q6107;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6107 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2751",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6107 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where is the main headquarters of the un?\nEntities:United Nations with QID Q1065;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1065 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2752",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1065 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what utc time zone is arizona?\nEntities:Arizona with QID Q816;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q816 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2753",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q816 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who did juan ponce de leon married?\nEntities:Juan Ponce de Le\u00f3n with QID Q185974;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q185974 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2756",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q185974 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what language do they speak in spain wikipedia?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2757",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what times is it in texas?\nEntities:Texas with QID Q1439;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1439 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2759",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1439 wdt:P421 ?x. }"
    },
    {
        "input": "Query: where did the arizona diamondbacks play?\nEntities:Arizona Diamondbacks with QID Q670376;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q670376 wdt:home_venue ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2760",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q670376 wdt:P115 ?x. }"
    },
    {
        "input": "Query: what did fred davis do?\nEntities:Fred Davis with QID Q584174;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q584174 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2761",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q584174 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what country was theodor schwann born in?\nEntities:Theodor Schwann with QID Q76745;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76745 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2762",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76745 wdt:P19 ?x. }"
    },
    {
        "input": "Query: where is the fukushima daiichi located?\nEntities:Fukushima Daiichi Nuclear Power Plant with QID Q114295;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q114295 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2763",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q114295 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what country was bin laden from?\nEntities:Osama bin Laden with QID Q1317;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1317 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2764",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1317 wdt:P27 ?x. }"
    },
    {
        "input": "Query: who plays claudia joy on army wives?\nEntities:Claudia Joy Holden with QID Q5129199; Army Wives with QID Q2308037;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2308037 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q5129199. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2765",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2308037 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q5129199. }"
    },
    {
        "input": "Query: where did darfur happen?\nEntities:War in Darfur with QID Q190758;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q190758 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2766",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q190758 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what language does greece use?\nEntities:Greece with QID Q41;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2767",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what kind of money does argentina use?\nEntities:Argentina with QID Q414;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q414 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2768",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q414 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who was the prime minister of australia in 1958?\nEntities:prime minister with QID Q14212; Australia with QID Q408; Prime Minister of Australia with QID Q319145;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:Q319145; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"1959-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1958-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2769",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q319145; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"1959-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1958-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what movies has taylor momsen been in?\nEntities:Taylor Momsen with QID Q193509;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q193509; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2771",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q193509; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what was henry ford best known for?\nEntities:Henry Ford with QID Q8768;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8768 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2773",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8768 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what kind of music did michael jackson sing?\nEntities:Michael Jackson with QID Q2831; SSQ with QID Q7393051;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:genre ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2774",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:P136 ?x. }"
    },
    {
        "input": "Query: what education does jeff corwin have?\nEntities:Jeff Corwin with QID Q770523;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q770523 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2775",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q770523 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what movies has chris colfer been in?\nEntities:Chris Colfer with QID Q211566;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q211566; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2776",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q211566; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where the queen of denmark lives?\nEntities:Margrethe II of Denmark with QID Q102139;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q102139 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2777",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q102139 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what did roald dahl write?\nEntities:Roald Dahl with QID Q25161;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:written_work; wdt:author wd:Q25161. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2778",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q47461344; wdt:P50 wd:Q25161. }"
    },
    {
        "input": "Query: who was the real erin brockovich?\nEntities:Erin Brockovich with QID Q232019;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q232019 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2779",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q232019 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what county is troy il in?\nEntities:Troy with QID Q575457;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q575457 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2781",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q575457 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what position does mitt romney hold?\nEntities:Mitt Romney with QID Q4496;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4496 wdt:position_held ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2782",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4496 wdt:P39 ?x. }"
    },
    {
        "input": "Query: who is country singer jewel married to?\nEntities:El DeBarge with QID Q5351107; Jewel with QID Q229018;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q229018 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2783",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q229018 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what movies does tupac act in?\nEntities:Tupac Shakur with QID Q6107;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q6107; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2784",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q6107; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where does the appalachian trail run through?\nEntities:Appalachian Trail with QID Q620648;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q620648 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2786",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q620648 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where is burundi located on a map?\nEntities:Burundi with QID Q967;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q967 wdt:coordinate_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2787",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q967 wdt:P625 ?x. }"
    },
    {
        "input": "Query: what clubs has messi played for?\nEntities:Lionel Messi with QID Q615;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q615 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x. ?x wdt:instance_of/wdt:subclass_of* wd:sports_club. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2790",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q615 p:P54 ?p. ?p ps:P54 ?x. ?x wdt:P31/wdt:P279* wd:Q847017. }"
    },
    {
        "input": "Query: where is merrell shoes headquarters?\nEntities:",
        "output": "SELECT DISTINCT ?x WHERE { wd:merrell_shoes wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2791",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1921997 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what is tim tebow's religion?\nEntities:Tim Tebow with QID Q517467;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q517467 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2796",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q517467 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what year did detroit pistons win the championship?\nEntities:Detroit Pistons with QID Q169661; NBA Finals with QID Q842375;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:nba_finals; wdt:winner wd:Q169661; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2798",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q842375; wdt:P1346 wd:Q169661; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what does anderson cooper do?\nEntities:Anderson Cooper with QID Q316997;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q316997 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2799",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q316997 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what movies did matt bomer play in?\nEntities:Matt Bomer with QID Q315340;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:film; wdt:cast_member wd:Q315340. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2800",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q11424; wdt:P161 wd:Q315340. }"
    },
    {
        "input": "Query: who is ellen bernstein?\nEntities:Ellen Burstyn with QID Q211144;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q211144 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2801",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q211144 wdt:P106 ?x. }"
    },
    {
        "input": "Query: when was reagan inaugurated?\nEntities:Ronald Reagan with QID Q9960; President of the United States with QID Q11696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9960 p:position_held ?y. ?y ps:position_held wd:Q11696; pq:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2803",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9960 p:P39 ?y. ?y ps:P39 wd:Q11696; pq:P580 ?x. }"
    },
    {
        "input": "Query: what kind of education did barack obama have?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2805",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what did james k polk believe in?\nEntities:James K. Polk with QID Q11891;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11891 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2807",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11891 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what currency does south africa have?\nEntities:South Africa with QID Q258;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q258 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2808",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q258 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where did jerome david salinger died?\nEntities:J. D. Salinger with QID Q79904;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79904 wdt:place_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2809",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79904 wdt:P20 ?x. }"
    },
    {
        "input": "Query: what religions are recognized in canada?\nEntities:Canada with QID Q16;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2810",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:P140 ?x. }"
    },
    {
        "input": "Query: where is somalia located?\nEntities:Somalia with QID Q1045;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1045 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2812",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1045 wdt:P30 ?x. }"
    },
    {
        "input": "Query: who played lex luthor in the original superman?\nEntities:Superman with QID Q213053; Lex Luthor with QID Q105123177; Superman with QID Q79015;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q213053 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q105123177. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2813",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q213053 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q105123177. }"
    },
    {
        "input": "Query: who is the head coach of the chicago blackhawks?\nEntities:Chicago Blackhawks with QID Q209636;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q209636 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2814",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q209636 wdt:P286 ?x. }"
    },
    {
        "input": "Query: where was john f kennedy raised?\nEntities:John F. Kennedy with QID Q9696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9696 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2815",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9696 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what does kat dennings star in?\nEntities:Kat Dennings with QID Q231751;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q231751; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2816",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q231751; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where does volga river start?\nEntities:Volga with QID Q626;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q626 wdt:origin_of_the_watercourse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2818",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q626 wdt:P885 ?x. }"
    },
    {
        "input": "Query: what did roger sherman do for a living?\nEntities:Roger Sherman with QID Q354721;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q354721 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2820",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q354721 wdt:P106 ?x. }"
    },
    {
        "input": "Query: who does ryan newman race for?\nEntities:Ryan Newman with QID Q525980;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q525980 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2821",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q525980 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what was the political system in libya?\nEntities:Libya with QID Q1016;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1016 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2822",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1016 wdt:P122 ?x. }"
    },
    {
        "input": "Query: who plays the voice of lois griffin on family guy?\nEntities:Family Guy with QID Q5930; Lois Griffin with QID Q853073;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q853073. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2823",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5930 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q853073. }"
    },
    {
        "input": "Query: what the currency in argentina?\nEntities:Argentina with QID Q414;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q414 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2825",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q414 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where does eddie bravo teach?\nEntities:Eddie Bravo with QID Q5335870;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5335870 wdt:employer ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2826",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5335870 wdt:P108 ?x. }"
    },
    {
        "input": "Query: when did michael schumacher win his first title?\nEntities:Michael Schumacher with QID Q9671; Formula One with QID Q1968;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:formula_one_season; wdt:winner wd:Q9671; wdt:point_in_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2827",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31 wd:Q108861375; wdt:P1346 wd:Q9671; wdt:P585 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: where does sally pearson live?\nEntities:Sally Pearson with QID Q6026;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6026 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2828",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6026 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what college chris paul go to?\nEntities:Chris Paul with QID Q46040;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q46040 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2829",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q46040 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where is madeira?\nEntities:Madeira with QID Q26253;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q26253 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2830",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q26253 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what country is joseph prince from?\nEntities:Joseph Prince with QID Q531145;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q531145 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2831",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q531145 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what do they speak in austria?\nEntities:Austria with QID Q40;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q40 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2833",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q40 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what are major religions in the united states?\nEntities:United States of America with QID Q30;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:religion_or_worldview ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2834",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q30 wdt:P140 ?x. }"
    },
    {
        "input": "Query: what things did thomas edison invent?\nEntities:Thomas Alva Edison with QID Q8743;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q8743. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2835",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q8743. }"
    },
    {
        "input": "Query: where is the sistine chapel by michelangelo?\nEntities:Sistine Chapel with QID Q2943;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2943 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2836",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2943 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who has played edward quartermaine on general hospital?\nEntities:General Hospital with QID Q1136370; Edward Quartermaine with QID Q5344929;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1136370 p:cast_member ?p. ?p ps:cast_member ?x; pq:character_role wd:Q5344929. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2837",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1136370 p:P161 ?p. ?p ps:P161 ?x; pq:P453 wd:Q5344929. }"
    },
    {
        "input": "Query: what kind of language does switzerland speak?\nEntities:Switzerland with QID Q39;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2839",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where is christina aguilera from?\nEntities:Christina Aguilera with QID Q41594;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41594 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2840",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41594 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what are fun things to do in philadelphia?\nEntities:Philadelphia with QID Q1345;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q1345. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2841",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q1345. }"
    },
    {
        "input": "Query: who does david carr play for?\nEntities:David Carr with QID Q669059;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q669059 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2842",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q669059 wdt:P54 ?x. }"
    },
    {
        "input": "Query: where did jackie robinson go to school?\nEntities:Jackie Robinson with QID Q221048;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q221048 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2843",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q221048 wdt:P69 ?x. }"
    },
    {
        "input": "Query: when did sanchez leave usc?\nEntities:USC Trojans football with QID Q7866357; Mark Sanchez with QID Q946184;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q946184 p:member_of_sports_team ?p. ?p ps:member_of_sports_team wd:Q7866357; pq:end_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2847",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q946184 p:P54 ?p. ?p ps:P54 wd:Q7866357; pq:P582 ?x. }"
    },
    {
        "input": "Query: who is steven seagal sister?\nEntities:Steven Seagal with QID Q82110;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q82110 wdt:sibling ?x; wdt:sex_or_gender wd:female. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2848",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q82110 wdt:P3373 ?x; wdt:P21 wd:Q6581072. }"
    },
    {
        "input": "Query: where was f scott fitzgerald education?\nEntities:F. Scott Fitzgerald with QID Q93354;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q93354 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2849",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q93354 wdt:P69 ?x. }"
    },
    {
        "input": "Query: on what continent is canada found?\nEntities:Canada with QID Q16;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2850",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what is the primary language of israel?\nEntities:Israel with QID Q801;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2851",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q801 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who is married to jane krakowski?\nEntities:Jane Krakowski with QID Q230268;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q230268 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2852",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q230268 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what role did tom cruise play in endless love?\nEntities:Tom Cruise with QID Q37079; Endless Love with QID Q388408; Q with QID Q465732;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q388408 p:cast_member ?p. ?p ps:cast_member wd:Q37079; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2853",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q388408 p:P161 ?p. ?p ps:P161 wd:Q37079; pq:P453 ?x. }"
    },
    {
        "input": "Query: where to go in phnom penh cambodia?\nEntities:Phnom Penh with QID Q1850;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q1850. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2854",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q1850. }"
    },
    {
        "input": "Query: what city was ronald reagan born in?\nEntities:Ronald Reagan with QID Q9960;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9960 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2855",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9960 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what countries in the world speak arabic?\nEntities:Arabic with QID Q13955;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:official_language wd:Q13955; wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2856",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P37 wd:Q13955; wdt:P31/wdt:P279* wd:Q6256. }"
    },
    {
        "input": "Query: what 4 states border the pacific ocean?\nEntities:Pacific Ocean with QID Q98;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:federated_state; wdt:located_in_or_next_to_body_of_water wd:Q98. } LIMIT 4",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2857",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q107390; wdt:P206 wd:Q98. } LIMIT 4"
    },
    {
        "input": "Query: what to do in nadi fiji?\nEntities:Nadi with QID Q619443;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q619443. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2858",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q619443. }"
    },
    {
        "input": "Query: who is francis bacon and what did he do?\nEntities:Francis Bacon with QID Q37388;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q37388 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2859",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q37388 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what is the dominant language of jamaica?\nEntities:Jamaica with QID Q766;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2860",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q766 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what type of government does the bahamas have?\nEntities:The Bahamas with QID Q778;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q778 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2863",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q778 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what university did tony romo go to?\nEntities:Tony Romo with QID Q14027;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q14027 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2864",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q14027 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where is bosnia?\nEntities:Bosnia and Herzegovina with QID Q225;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q225 wdt:continent ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2865",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q225 wdt:P30 ?x. }"
    },
    {
        "input": "Query: what countries speak german as a first language?\nEntities:German with QID Q188;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:country; wdt:official_language wd:Q188. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2866",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31 wd:Q6256; wdt:P37 wd:Q188. }"
    },
    {
        "input": "Query: where is amazon based out of?\nEntities:",
        "output": "SELECT DISTINCT ?x WHERE { wd:amazon wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2867",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q10846439 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what team did mike piazza retire with?\nEntities:Mike Piazza with QID Q613319;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q613319 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:end_time ?y. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2868",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q613319 p:P54 ?p. ?p ps:P54 ?x; pq:P582 ?y. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: where did robert boyle study?\nEntities:Robert Boyle with QID Q43393;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43393 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2870",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43393 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what is there to see near the grand canyon?\nEntities:Grand Canyon with QID Q118841;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q118841. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2871",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q118841. }"
    },
    {
        "input": "Query: where does hector camacho live?\nEntities:H\u00e9ctor Camacho with QID Q114355;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q114355 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2873",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q114355 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what language do cyprus speak?\nEntities:Cyprus with QID Q229;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q229 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2875",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q229 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where does fabio aurelio play?\nEntities:F\u00e1bio Aur\u00e9lio with QID Q216910;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q216910 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2876",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q216910 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what war did george washington help win?\nEntities:George Washington with QID Q23;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:conflict ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2877",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:P607 ?x. }"
    },
    {
        "input": "Query: where does danny ainge live?\nEntities:Danny Ainge with QID Q918347;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q918347 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2878",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q918347 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what college did steve jobs attend?\nEntities:Steve Jobs with QID Q19837;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q19837 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2879",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q19837 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where was anne frank born?\nEntities:Anne Frank with QID Q4583;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4583 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2880",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4583 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who was king tut's wife?\nEntities:Tutankhamon with QID Q12154;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q12154 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2883",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q12154 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what team did magic johnson play for?\nEntities:Magic Johnson with QID Q134183;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q134183 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2884",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q134183 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what are the kennedys?\nEntities:Kennedy family with QID Q34821;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:family wd:Q34821. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2885",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P53 wd:Q34821. }"
    },
    {
        "input": "Query: where is sarajevo located?\nEntities:Sarajevo with QID Q11194;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11194 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2887",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11194 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what is the official language in china?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2888",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P37 ?x. }"
    },
    {
        "input": "Query: who does the voice of kitt in knight rider?\nEntities:Knight Rider with QID Q464009; KITT with QID Q1088996;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q464009 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q1088996. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2889",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q464009 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q1088996. }"
    },
    {
        "input": "Query: what teams are left in the nfl?\nEntities:National Football League with QID Q1215884;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1215884 wdt:has_part(s)+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:american_football_team. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2890",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1215884 wdt:P527+ ?x. ?x wdt:P31 wd:Q17156793. }"
    },
    {
        "input": "Query: what art movement was pablo picasso part of?\nEntities:Pablo Picasso with QID Q5593;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5593 wdt:movement ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2891",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5593 wdt:P135 ?x. }"
    },
    {
        "input": "Query: what type of business is mitt romney in?\nEntities:Mitt Romney with QID Q4496;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q4496 wdt:employer ?y. ?y wdt:industry ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2892",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q4496 wdt:P108 ?y. ?y wdt:P452 ?x. }"
    },
    {
        "input": "Query: what language do they speak in egyptian?\nEntities:Egypt with QID Q79;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2893",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what are historical places in new york?\nEntities:New York City with QID Q1384;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q1384. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2894",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q1384. }"
    },
    {
        "input": "Query: what countries are included in the continent of asia?\nEntities:Asia with QID Q48;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q48 wdt:has_part(s)+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2896",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q48 wdt:P527+ ?x. ?x wdt:P31 wd:Q6256. }"
    },
    {
        "input": "Query: who owns wikimedia foundation?\nEntities:Wikimedia Foundation with QID Q180;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q180 wdt:founded_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2897",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q180 wdt:P112 ?x. }"
    },
    {
        "input": "Query: what war was george washington president during?\nEntities:George Washington with QID Q23;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:conflict ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2898",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q23 wdt:P607 ?x. }"
    },
    {
        "input": "Query: when did miami dolphins win super bowl?\nEntities:Super Bowl with QID Q32096; Miami Dolphins with QID Q223243;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:winner wd:Q223243; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2899",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1346 wd:Q223243; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what timezone is minnesota in?\nEntities:Minnesota with QID Q1527;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1527 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2900",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1527 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what country columbus was born?\nEntities:Christopher Columbus with QID Q7322;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7322 wdt:place_of_birth ?p. ?p wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2903",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7322 wdt:P19 ?p. ?p wdt:P17 ?x. }"
    },
    {
        "input": "Query: where did lauren conrad live?\nEntities:Lauren Conrad with QID Q230169;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q230169 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2904",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q230169 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what bella name her baby?\nEntities:Bella Swan with QID Q223757;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q223757 wdt:child ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2905",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q223757 wdt:P40 ?x. }"
    },
    {
        "input": "Query: what is the houston rockets mascot?\nEntities:Houston Rockets with QID Q161345;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q161345 wdt:mascot ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2906",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q161345 wdt:P822 ?x. }"
    },
    {
        "input": "Query: what is there fun to do in san diego?\nEntities:San Diego with QID Q16552;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q16552. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2907",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q16552. }"
    },
    {
        "input": "Query: what movies johnny depp is in?\nEntities:Johnny Depp with QID Q37175;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q37175; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2908",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q37175; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where did matthias schleiden do his work?\nEntities:Matthias Jacob Schleiden with QID Q76747;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76747 wdt:employer ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2909",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76747 wdt:P108 ?x. }"
    },
    {
        "input": "Query: what songs does katherine jenkins sing?\nEntities:Katherine Jenkins with QID Q272581;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:performer wd:Q272581. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2911",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P175 wd:Q272581. }"
    },
    {
        "input": "Query: what is ryan seacrest famous for?\nEntities:Ryan Seacrest with QID Q299266;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q299266 wdt:notable_work ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2912",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q299266 wdt:P800 ?x. }"
    },
    {
        "input": "Query: what is the current leader of japan?\nEntities:Japan with QID Q17;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2913",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q17 wdt:P6 ?x. }"
    },
    {
        "input": "Query: how much indiana jones movies are there?\nEntities:Indiana Jones with QID Q98018448;",
        "output": "SELECT (COUNT(DISTINCT *) AS ?x) WHERE { wd:Q98018448 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2914",
        "sparql": "SELECT (COUNT(DISTINCT *) AS ?x) WHERE { wd:Q98018448 wdt:P527 ?x. }"
    },
    {
        "input": "Query: what does george soros own?\nEntities:George Soros with QID Q12908;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:founded_by wd:Q12908. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2915",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P112 wd:Q12908. }"
    },
    {
        "input": "Query: what kind of money should i bring to dominican?\nEntities:Dominican Republic with QID Q786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2916",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P38 ?x. }"
    },
    {
        "input": "Query: who is the president of ecuador in 2012?\nEntities:Costa Rica with QID Q800; Ecuador with QID Q736; president with QID Q30461;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:president_of_ecuador; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2917",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q27977064; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z > \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what city became the capital of the assyrian empire?\nEntities:Assyrian Empire with QID Q41137;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41137 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2918",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41137 wdt:P36 ?x. }"
    },
    {
        "input": "Query: what time zone is maryville tn?\nEntities:Maryville with QID Q1094500;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:contains_the_administrative_territorial_entity wd:Q1094500; wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2919",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P150 wd:Q1094500; wdt:P421 ?x. }"
    },
    {
        "input": "Query: where does frida kahlo live now?\nEntities:Frida Kahlo with QID Q5588;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q5588 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2920",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q5588 wdt:P551 ?x. }"
    },
    {
        "input": "Query: where did marco rubio go to college?\nEntities:Marco Rubio with QID Q324546;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q324546 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2922",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q324546 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: where was emperor tiberius born?\nEntities:Tiberius with QID Q1407;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1407 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2925",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1407 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who did ronald reagan get shot by?\nEntities:Ronald Reagan with QID Q9960;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:crime_against_life; wdt:participant wd:Q9960; wdt:perpetrator ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2926",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q16688120; wdt:P710 wd:Q9960; wdt:P8031 ?x. }"
    },
    {
        "input": "Query: what county is novato in?\nEntities:Novato with QID Q851004;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q851004 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2927",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q851004 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who did president kennedy marry?\nEntities:John F. Kennedy with QID Q9696;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9696 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2928",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9696 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what movies did zoe saldana play in?\nEntities:Zo\u00eb Salda\u00f1a with QID Q190162;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q190162; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2930",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q190162; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: who does nikki reed play in the movie twilight?\nEntities:Nikki Reed with QID Q234847; Twilight with QID Q160071;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q160071 p:cast_member ?p. ?p ps:cast_member wd:Q234847; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2932",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q160071 p:P161 ?p. ?p ps:P161 wd:Q234847; pq:P453 ?x. }"
    },
    {
        "input": "Query: what does matt dallas do now?\nEntities:Matt Dallas with QID Q313656;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q313656 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2933",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q313656 wdt:P106 ?x. }"
    },
    {
        "input": "Query: where was abraham buried?\nEntities:Abraham with QID Q9181;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9181 wdt:place_of_burial ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2934",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9181 wdt:P119 ?x. }"
    },
    {
        "input": "Query: what type of cancer did donna summer died from?\nEntities:Donna Summer with QID Q908933; cancer with QID Q12078;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q908933 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2936",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q908933 wdt:P509 ?x. }"
    },
    {
        "input": "Query: where's the hudson river?\nEntities:Hudson River with QID Q3140;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q3140 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2937",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q3140 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what did jerry sandusky do to the children?\nEntities:Jerry Sandusky with QID Q6184378;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6184378 wdt:convicted_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2939",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6184378 wdt:P1399 ?x. }"
    },
    {
        "input": "Query: where does the jordan river end?\nEntities:Jordan River with QID Q40059;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q40059 wdt:mouth_of_the_watercourse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2940",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q40059 wdt:P403 ?x. }"
    },
    {
        "input": "Query: what is the state flower of pennsylvania?\nEntities:Pennsylvania with QID Q1400;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1400 p:official_symbol ?p. ?p ps:official_symbol ?x; pq:object_has_role wd:flower. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2941",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1400 p:P2238 ?p. ?p ps:P2238 ?x; pq:P3831 wd:Q506. }"
    },
    {
        "input": "Query: what school did michael jackson attend?\nEntities:Michael Jackson with QID Q2831;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2942",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what does kenya moore do for a living?\nEntities:Kenya Moore with QID Q447710;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q447710 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2943",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q447710 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what country is barack obama from?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:country_of_citizenship ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2944",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P27 ?x. }"
    },
    {
        "input": "Query: who was wale signed to?\nEntities:Wale with QID Q458519;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q458519 wdt:record_label ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2945",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q458519 wdt:P264 ?x. }"
    },
    {
        "input": "Query: who did tyson chandler play for?\nEntities:Tyson Chandler with QID Q297146;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q297146 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2946",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q297146 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what character did liv tyler play in lord of the rings?\nEntities:The Lord of the Rings: The Fellowship of the Ring with QID Q127367; Liv Tyler with QID Q168763;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q127367 p:cast_member ?p. ?p ps:cast_member wd:Q168763; pq:character_role ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2947",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q127367 p:P161 ?p. ?p ps:P161 wd:Q168763; pq:P453 ?x. }"
    },
    {
        "input": "Query: who played princess leia in star wars movies?\nEntities:Leia Organa with QID Q51797;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:film; p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q51797. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2948",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31 wd:Q11424; p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q51797. }"
    },
    {
        "input": "Query: when did romney first run for president?\nEntities:Mitt Romney with QID Q4496;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:instance_of/wdt:subclass_of* wd:presidential_election; wdt:candidate wd:Q4496; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2949",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P31/wdt:P279* wd:Q858439; wdt:P726 wd:Q4496; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what did barack obama do before he took office?\nEntities:President of the United States with QID Q11696; Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 p:position_held ?p. ?p ps:position_held ?x; pq:end_time ?y. wd:Q76 p:position_held ?q. ?q ps:position_held wd:Q11696; pq:start_time ?z. FILTER(?y < ?z) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2950",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 p:P39 ?p. ?p ps:P39 ?x; pq:P582 ?y. wd:Q76 p:P39 ?q. ?q ps:P39 wd:Q11696; pq:P580 ?z. FILTER(?y < ?z) }"
    },
    {
        "input": "Query: where was saint joseph from?\nEntities:Joseph with QID Q128267; Joseph with QID Q145746;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q128267 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2951",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q128267 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what job did george w bush have?\nEntities:George W. Bush with QID Q207;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q207 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2954",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q207 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what are countries in south asia?\nEntities:South Asia with QID Q771405;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q771405 wdt:has_part(s) ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2955",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q771405 wdt:P527 ?x. }"
    },
    {
        "input": "Query: where is the caribbean geographically located?\nEntities:Caribbean with QID Q664609;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q664609 wdt:part_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2956",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q664609 wdt:P361 ?x. }"
    },
    {
        "input": "Query: what was howard carter's job?\nEntities:Howard Carter with QID Q133682;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q133682 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2959",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q133682 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what was the cause of death of michael jackson?\nEntities:Michael Jackson with QID Q2831;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:cause_of_death ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2961",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:P509 ?x. }"
    },
    {
        "input": "Query: what is the capital city of texas usa?\nEntities:Texas with QID Q1439;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1439 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2963",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1439 wdt:P36 ?x. }"
    },
    {
        "input": "Query: who won governor in connecticut 2010?\nEntities:Connecticut with QID Q779; governor with QID Q132050;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q779 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2964",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q779 wdt:P6 ?x. }"
    },
    {
        "input": "Query: what is the main language spoken in switzerland?\nEntities:Switzerland with QID Q39;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q39 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2965",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q39 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what timezone is indianapolis in now?\nEntities:Indianapolis with QID Q6346;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q6346 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2966",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q6346 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what time zone is new england usa in?\nEntities:New England with QID Q18389;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q18389 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2968",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q18389 wdt:P421 ?x. }"
    },
    {
        "input": "Query: where was the vietnam war located?\nEntities:Vietnam War with QID Q8740;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8740 wdt:location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2969",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8740 wdt:P276 ?x. }"
    },
    {
        "input": "Query: what is tulane university's mascot?\nEntities:Tulane University with QID Q1193547;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1193547 wdt:mascot ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2970",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1193547 wdt:P822 ?x. }"
    },
    {
        "input": "Query: where is aviano air force base located?\nEntities:Aviano Air Base with QID Q790794;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q790794 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2971",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q790794 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who is the owner of the philadelphia eagles?\nEntities:Philadelphia Eagles with QID Q219714;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q219714 wdt:owned_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2972",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q219714 wdt:P127 ?x. }"
    },
    {
        "input": "Query: where did giovanni da verrazano live?\nEntities:Giovanni da Verrazzano with QID Q147676;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q147676 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2973",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q147676 wdt:P551 ?x. }"
    },
    {
        "input": "Query: what was antonio vivaldi known for?\nEntities:Antonio Vivaldi with QID Q1340;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1340 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2974",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1340 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what movies does johnny depp play in?\nEntities:Johnny Depp with QID Q37175;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q37175; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2975",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q37175; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: who is the coach of the pittsburgh steelers 2005?\nEntities:Pittsburgh Steelers with QID Q191477;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q191477 p:head_coach ?p. ?p ps:head_coach ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2006-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2005-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2977",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q191477 p:P286 ?p. ?p ps:P286 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2006-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2005-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: when are the summer olympics held?\nEntities:Summer Olympic Games with QID Q159821;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q159821 wdt:has_part(s) ?p. ?p wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2978",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q159821 wdt:P527 ?p. ?p wdt:P585 ?x. }"
    },
    {
        "input": "Query: when did mcgee start on ncis?\nEntities:Tim McGee with QID Q838560;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q838560 wdt:first_appearance ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2981",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q838560 wdt:P4584 ?x. }"
    },
    {
        "input": "Query: what country did the zulu live in?\nEntities:Zulu Kingdom with QID Q729768;",
        "output": "SELECT DISTINCT ?x WHERE { wd:zulu wdt:country ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2983",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q10179 wdt:P17 ?x. }"
    },
    {
        "input": "Query: where was president chester arthur born?\nEntities:Chester A. Arthur with QID Q35498;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q35498 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2984",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q35498 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who has tom brady played for?\nEntities:Tom Brady with QID Q313381;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q313381 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2986",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q313381 wdt:P54 ?x. }"
    },
    {
        "input": "Query: who are betty white's husbands?\nEntities:Betty White with QID Q373895;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q373895 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2987",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q373895 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what are the major languages spoken in italy?\nEntities:Italy with QID Q38;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2988",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what time is it in lake havasu city arizona?\nEntities:Lake Havasu City with QID Q79435;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79435 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2989",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79435 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what years have the giants won the world series?\nEntities:World Series with QID Q265538; San Francisco Giants with QID Q308966;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:Q265538; wdt:winner wd:Q308966; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2990",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q308966; wdt:P585 ?x. }"
    },
    {
        "input": "Query: where did nick clegg go to prep school?\nEntities:preparatory school with QID Q4367464; Nick Clegg with QID Q189947;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q189947 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:preparatory_school. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2991",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q189947 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q4367464. }"
    },
    {
        "input": "Query: where did laura bush grow up?\nEntities:Laura Bush with QID Q152019;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q152019 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2992",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q152019 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what currency should i take to mauritius?\nEntities:Mauritius with QID Q1027;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1027 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2993",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1027 wdt:P38 ?x. }"
    },
    {
        "input": "Query: which states share borders with virginia?\nEntities:Virginia with QID Q1370;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1370 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2994",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1370 wdt:P47 ?x. }"
    },
    {
        "input": "Query: what is a judge in the supreme court called?\nEntities:Supreme Court of the United States with QID Q11201;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11201 wdt:office_held_by_head_of_the_organization ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2995",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11201 wdt:P2388 ?x. }"
    },
    {
        "input": "Query: what did johannes kepler accomplish?\nEntities:Johannes Kepler with QID Q8963;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8963 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2996",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8963 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what college did edgar allan poe go to?\nEntities:Edgar Allan Poe with QID Q16867;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16867 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2997",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16867 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: who is ellen albertini dow?\nEntities:Ellen Albertini Dow with QID Q458512;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q458512 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2998",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q458512 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what time zone is london in right now?\nEntities:London with QID Q84;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q84 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-2999",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q84 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what kind of language do china speak?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3000",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where is the singapore zoo?\nEntities:Singapore Zoo with QID Q2709506;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2709506 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3001",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2709506 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what town was abe lincoln born in?\nEntities:Abraham Lincoln with QID Q91;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3002",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q91 wdt:P19 ?x. }"
    },
    {
        "input": "Query: who did the voice of kitt in knight rider?\nEntities:Knight Rider with QID Q464009; KITT with QID Q1088996;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q464009 p:voice_actor ?p. ?p ps:voice_actor ?x; pq:character_role wd:Q1088996. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3004",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q464009 p:P725 ?p. ?p ps:P725 ?x; pq:P453 wd:Q1088996. }"
    },
    {
        "input": "Query: what challenges did helen keller have to face?\nEntities:Helen Keller with QID Q38203;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38203 wdt:medical_condition ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3005",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38203 wdt:P1050 ?x. }"
    },
    {
        "input": "Query: who is andy williams brother?\nEntities:Andy Williams with QID Q214548;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q214548 wdt:sibling ?x. ?x wdt:sex_or_gender wd:male. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3006",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q214548 wdt:P3373 ?x. ?x wdt:P21 wd:Q6581097. }"
    },
    {
        "input": "Query: where does morrissey live 2010?\nEntities:Morrissey with QID Q202246;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q202246 p:residence ?p. ?p ps:residence ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2011-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2010-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3008",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q202246 p:P551 ?p. ?p ps:P551 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2011-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2010-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what teams did jim harbaugh play for?\nEntities:Jim Harbaugh with QID Q2631300;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2631300 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3009",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2631300 wdt:P54 ?x. }"
    },
    {
        "input": "Query: who played atticus finch in the movie?\nEntities:Atticus Finch with QID Q525777;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q525777. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3010",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q525777. }"
    },
    {
        "input": "Query: where did toussaint louverture live?\nEntities:Toussaint Louverture with QID Q205783;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q205783 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3011",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q205783 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what other countries share a border with china?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:shares_border_with ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3012",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P47 ?x. }"
    },
    {
        "input": "Query: who has the voice of stewie griffin?\nEntities:Stewie Griffin with QID Q837909;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q837909. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3013",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q837909. }"
    },
    {
        "input": "Query: what party did john tyler belong to?\nEntities:John Tyler with QID Q11881;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q11881 wdt:member_of_political_party ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3015",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q11881 wdt:P102 ?x. }"
    },
    {
        "input": "Query: who is the senator of the state of texas?\nEntities:United States of America with QID Q30; Texas with QID Q1439;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:senator_of_the_state. ?p pq:electoral_district ?y. ?y wdt:located_in_the_administrative_territorial_entity wd:Q1439. FILTER NOT EXISTS { ?p pq:end_time ?z. } }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3016",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q4416090. ?p pq:P768 ?y. ?y wdt:P131 wd:Q1439. FILTER NOT EXISTS { ?p pq:P582 ?z. } }"
    },
    {
        "input": "Query: who is jensen ackles in a relationship with?\nEntities:Jensen Ackles with QID Q193513;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q193513 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3018",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q193513 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who is the voice actor for eric cartman?\nEntities:Eric Cartman with QID Q47352;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:voice_actor ?y. ?y ps:voice_actor ?x; pq:character_role wd:Q47352. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3019",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P725 ?y. ?y ps:P725 ?x; pq:P453 wd:Q47352. }"
    },
    {
        "input": "Query: what language do irish people speak?\nEntities:Irish people with QID Q170826;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q170826 wdt:languages_spoken,_written_or_signed ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3020",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q170826 wdt:P1412 ?x. }"
    },
    {
        "input": "Query: what is the currency used in brazil?\nEntities:Brazil with QID Q155;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3021",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q155 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what money is used in mozambique?\nEntities:Mozambique with QID Q1029;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1029 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3023",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1029 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what illness does michael j fox have?\nEntities:Michael J. Fox with QID Q395274;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q395274 wdt:medical_condition ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3024",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q395274 wdt:P1050 ?x. }"
    },
    {
        "input": "Query: who is the governor of indiana 2012?\nEntities:Governor of Indiana with QID Q16147601; Indiana with QID Q1415; Governor of Yap with QID Q5589733;",
        "output": "SELECT DISTINCT ?x WHERE { ?x p:position_held ?p. ?p ps:position_held wd:Q16147601; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3025",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x p:P39 ?p. ?p ps:P39 wd:Q16147601; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2013-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2012-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: who was kim kardashian's first husband?\nEntities:Kim Kardashian with QID Q186304;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q186304 p:spouse ?p. ?p ps:spouse ?x; pq:start_time ?y. } ORDER BY ?y LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3026",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q186304 p:P26 ?p. ?p ps:P26 ?x; pq:P580 ?y. } ORDER BY ?y LIMIT 1"
    },
    {
        "input": "Query: who did jerry rice retire with?\nEntities:Jerry Rice with QID Q505423;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q505423 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:end_time ?y. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3027",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q505423 p:P54 ?p. ?p ps:P54 ?x; pq:P582 ?y. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: what are the official languages of the dominican republic?\nEntities:Dominican Republic with QID Q786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3028",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what movie queen latifah play in?\nEntities:Queen Latifah with QID Q1112005;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q1112005; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3029",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q1112005; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: where was ted kennedy buried?\nEntities:Ted Kennedy with QID Q134549;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q134549 wdt:place_of_burial ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3031",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q134549 wdt:P119 ?x. }"
    },
    {
        "input": "Query: what state toronto located?\nEntities:Toronto with QID Q172;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q172 wdt:located_in_the_administrative_territorial_entity+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:federated_state. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3033",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q172 wdt:P131+ ?x. ?x wdt:P31/wdt:P279* wd:Q107390. }"
    },
    {
        "input": "Query: where did dr martin luther king get his doctorate?\nEntities:Martin Luther King Jr. with QID Q8027; Doctor of Philosophy with QID Q752297;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8027 p:educated_at ?p. ?p ps:educated_at ?x; pq:academic_degree wd:Q752297. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3034",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8027 p:P69 ?p. ?p ps:P69 ?x; pq:P512 wd:Q752297. }"
    },
    {
        "input": "Query: who is the governor of wyoming currently?\nEntities:Wyoming with QID Q1214; governor with QID Q132050;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1214 wdt:head_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3035",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1214 wdt:P6 ?x. }"
    },
    {
        "input": "Query: who was the president of indian national congress?\nEntities:president with QID Q1255921; Indian National Congress with QID Q10225;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:position_held wd:president_of_indian_national_congress. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3036",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P39 wd:Q7241327. }"
    },
    {
        "input": "Query: where do most of the people in egypt live?\nEntities:Egypt with QID Q79;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:city; wdt:country wd:Q79; wdt:population ?y. } ORDER BY DESC (?y) LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3037",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q515; wdt:P17 wd:Q79; wdt:P1082 ?y. } ORDER BY DESC (?y) LIMIT 1"
    },
    {
        "input": "Query: where was benjamin franklin raised?\nEntities:Benjamin Franklin with QID Q34969;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34969 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3038",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34969 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what language does egyptians use?\nEntities:Egypt with QID Q79;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3039",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q79 wdt:P37 ?x. }"
    },
    {
        "input": "Query: where do people speak burmese?\nEntities:Burmese with QID Q9228;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:language_used wd:Q9228. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3040",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P2936 wd:Q9228. }"
    },
    {
        "input": "Query: what money do they have in italy?\nEntities:Italy with QID Q38;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3041",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q38 wdt:P38 ?x. }"
    },
    {
        "input": "Query: what is phoebe halliwell's real name?\nEntities:Phoebe Halliwell with QID Q1639574;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q1639574. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3042",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q1639574. }"
    },
    {
        "input": "Query: what is the name of the capital of spain?\nEntities:Spain with QID Q29;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3043",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q29 wdt:P36 ?x. }"
    },
    {
        "input": "Query: what is afghanistan money called?\nEntities:Afghanistan with QID Q889;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q889 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3044",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q889 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where are facebook headquarters located?\nEntities:Meta Platforms with QID Q380;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q380 wdt:headquarters_location ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3047",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q380 wdt:P159 ?x. }"
    },
    {
        "input": "Query: what was the roman political system?\nEntities:Roman Empire with QID Q2277;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2277 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3048",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2277 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what government type is north korea?\nEntities:North Korea with QID Q423;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q423 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3050",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q423 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where is the pepsi center?\nEntities:Ball Arena with QID Q795470;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q795470 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3051",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q795470 wdt:P131 ?x. }"
    },
    {
        "input": "Query: who plays hermione granger?\nEntities:Hermione Granger with QID Q174009;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q174009. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3052",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q174009. }"
    },
    {
        "input": "Query: what inspired m.c. escher to become an artist?\nEntities:M. C. Escher with QID Q1470;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1470 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3053",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1470 wdt:P737 ?x. }"
    },
    {
        "input": "Query: what county is denver colorado in?\nEntities:Denver with QID Q16554;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16554 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3056",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16554 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what year did giants win world series?\nEntities:San Francisco Giants with QID Q308966;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:sports_season_of_league_or_competition wd:world_series; wdt:winner wd:Q308966; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3057",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P3450 wd:Q265538; wdt:P1346 wd:Q308966; wdt:P585 ?x. }"
    },
    {
        "input": "Query: what kind of government iran have?\nEntities:Iran with QID Q794;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3058",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:P122 ?x. }"
    },
    {
        "input": "Query: where does the band metallica live?\nEntities:Metallica with QID Q15920;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q15920 wdt:location_of_formation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3060",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q15920 wdt:P740 ?x. }"
    },
    {
        "input": "Query: who is shania twain's husband?\nEntities:Shania Twain with QID Q131433;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q131433 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3062",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q131433 wdt:P26 ?x. }"
    },
    {
        "input": "Query: who plays jason gideon?\nEntities:Jason Voorhees with QID Q366957;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q366957. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3063",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q366957. }"
    },
    {
        "input": "Query: what province is toronto canada located in?\nEntities:Toronto with QID Q172;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q172 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3064",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q172 wdt:P131 ?x. }"
    },
    {
        "input": "Query: where did president eisenhower go to college?\nEntities:Dwight D. Eisenhower with QID Q9916;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q9916 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3065",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q9916 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what are the gods of islam?\nEntities:Islam with QID Q432;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:worshipped_by wd:Q432; wdt:subclass_of* wd:gods. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3066",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P1049 wd:Q432; wdt:P279* wd:Q190. }"
    },
    {
        "input": "Query: what was vasco nunez de balboa original purpose of his journey?\nEntities:Vasco N\u00fa\u00f1ez de Balboa with QID Q19080;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q19080 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3067",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q19080 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what team did kaka play for in 2009?\nEntities:Kak\u00e1 with QID Q531814;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q531814 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"2010-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2009-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3068",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q531814 p:P54 ?p. ?p ps:P54 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"2010-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"2009-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what political system is in china?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3069",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what guitar did clapton play?\nEntities:Eric Clapton with QID Q48187;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:used_by wd:Q48187; wdt:instance_of/wdt:subclass_of* wd:guitar. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3071",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P1535 wd:Q48187; wdt:P31/wdt:P279* wd:Q6607. }"
    },
    {
        "input": "Query: who did joseph from the bible marry?\nEntities:Joseph with QID Q145746;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q145746 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3072",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q145746 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what did sir john frederick william herschel do?\nEntities:John Frederick William Herschel with QID Q14278;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q14278. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3073",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q14278. }"
    },
    {
        "input": "Query: what is a famous person from massachusetts?\nEntities:Massachusetts with QID Q771;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:place_of_birth wd:Q771. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3074",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P19 wd:Q771. }"
    },
    {
        "input": "Query: what college did joakim noah attend?\nEntities:Joakim Noah with QID Q311735;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q311735 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3075",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q311735 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what channel does anderson cooper come on?\nEntities:Anderson Cooper with QID Q316997;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q316997 p:employer ?p. ?p ps:employer ?x. ?x wdt:instance_of/wdt:subclass_of* wd:television_station. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3076",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q316997 p:P108 ?p. ?p ps:P108 ?x. ?x wdt:P31/wdt:P279* wd:Q1616075. }"
    },
    {
        "input": "Query: what money do they use in china?\nEntities:People's Republic of China with QID Q148;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:currency ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3077",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q148 wdt:P38 ?x. }"
    },
    {
        "input": "Query: where did wassily kandinsky work?\nEntities:Wassily Kandinsky with QID Q61064;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q61064 wdt:employer ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3078",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q61064 wdt:P108 ?x. }"
    },
    {
        "input": "Query: where does jeb bush live?\nEntities:Jeb Bush with QID Q221997;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q221997 wdt:residence ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3079",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q221997 wdt:P551 ?x. }"
    },
    {
        "input": "Query: when did the arab israeli war start?\nEntities:Arab\u2013Israeli conflict with QID Q8669;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q8669 wdt:start_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3080",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q8669 wdt:P580 ?x. }"
    },
    {
        "input": "Query: who influenced michael jackson?\nEntities:Michael Jackson with QID Q2831;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:influenced_by ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3081",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2831 wdt:P737 ?x. }"
    },
    {
        "input": "Query: what all countries are in south america?\nEntities:South America with QID Q18;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q18 wdt:has_part(s)+ ?x. ?x wdt:instance_of/wdt:subclass_of* wd:country. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3082",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q18 wdt:P527+ ?x. ?x wdt:P31 wd:Q6256. }"
    },
    {
        "input": "Query: who was the leader of the ussr in 1948?\nEntities:Soviet Union with QID Q15180;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q15180 p:head_of_government ?p. ?p ps:head_of_government ?x; pq:start_time ?y; pq:end_time ?z. FILTER((?y < \"1949-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1948-01-01T00:00:00Z\"^^xsd:dateTime)) }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3083",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q15180 p:P6 ?p. ?p ps:P6 ?x; pq:P580 ?y; pq:P582 ?z. FILTER((?y < \"1949-01-01T00:00:00Z\"^^xsd:dateTime) && (?z >= \"1948-01-01T00:00:00Z\"^^xsd:dateTime)) }"
    },
    {
        "input": "Query: what ship did sir francis drake travel on?\nEntities:Francis Drake with QID Q36517;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:commissioned_by wd:Q36517; ((wdt:instance_of*)/(wdt:subclass_of*)) wd:ship. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3085",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P88 wd:Q36517; ((wdt:P31*)/(wdt:P279*)) wd:Q2235308. }"
    },
    {
        "input": "Query: what did kellie martin play on?\nEntities:Kellie Martin with QID Q235754;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:cast_member wd:Q235754; wdt:instance_of/wdt:subclass_of* wd:film. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3086",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P161 wd:Q235754; wdt:P31/wdt:P279* wd:Q11424. }"
    },
    {
        "input": "Query: what does united church of christ believe?\nEntities:United Church of Christ with QID Q426316;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q426316 wdt:official_religion ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3087",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q426316 wdt:P3075 ?x. }"
    },
    {
        "input": "Query: where is walton goggins from?\nEntities:Walton Goggins with QID Q516690;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q516690 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3088",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q516690 wdt:P19 ?x. }"
    },
    {
        "input": "Query: which province is calgary canada in?\nEntities:Calgary with QID Q36312;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q36312 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3089",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q36312 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what university did barack obama attend?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3090",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: when did venus williams win wimbledon?\nEntities:Wimbledon Championships with QID Q41520; Venus Williams with QID Q11578;",
        "output": "SELECT DISTINCT ?x WHERE { ?p wdt:part_of ?y; wdt:point_in_time ?x; wdt:winner wd:Q11578. ?y wdt:instance_of/wdt:subclass_of* wd:wimbledon_championships. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3091",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p wdt:P361 ?y; wdt:P585 ?x; wdt:P1346 wd:Q11578. ?y wdt:P31 wd:Q41520. }"
    },
    {
        "input": "Query: who is neil patrick harris dating?\nEntities:Neil Patrick Harris with QID Q485310;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q485310 wdt:unmarried_partner ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3092",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q485310 wdt:P451 ?x. }"
    },
    {
        "input": "Query: where is the capital city of assyrians?\nEntities:Assyrian Empire with QID Q41137;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q41137 wdt:capital ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3093",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q41137 wdt:P36 ?x. }"
    },
    {
        "input": "Query: who is aidan quinn?\nEntities:Aidan Quinn with QID Q403902;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q403902 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3094",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q403902 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what type of political system is iran?\nEntities:Iran with QID Q794;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:basic_form_of_government ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3095",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q794 wdt:P122 ?x. }"
    },
    {
        "input": "Query: what do people from guam speak?\nEntities:Guam with QID Q16635;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q16635 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3096",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q16635 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what to do if you have one day in bangkok?\nEntities:Bangkok with QID Q1861;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:instance_of/wdt:subclass_of* wd:tourist_attraction; wdt:located_in_the_administrative_territorial_entity wd:Q1861. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3097",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q570116; wdt:P131 wd:Q1861. }"
    },
    {
        "input": "Query: where was ben franklin born?\nEntities:Benjamin Franklin with QID Q34969;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34969 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3098",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34969 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what timezone is virginia in?\nEntities:Virginia with QID Q1370;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1370 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3099",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1370 wdt:P421 ?x. }"
    },
    {
        "input": "Query: what is the dominican republic part of?\nEntities:Dominican Republic with QID Q786;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:part_of ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3100",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q786 wdt:P361 ?x. }"
    },
    {
        "input": "Query: where did jerry spinelli live as a kid?\nEntities:Jerry Spinelli with QID Q563118;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q563118 wdt:place_of_birth ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3101",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q563118 wdt:P19 ?x. }"
    },
    {
        "input": "Query: what do costa ricans speak?\nEntities:Costa Rica with QID Q800;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q800 wdt:official_language ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3102",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q800 wdt:P37 ?x. }"
    },
    {
        "input": "Query: what year did arizona cardinals go to superbowl?\nEntities:Arizona Cardinals with QID Q224164; Super Bowl with QID Q32096;",
        "output": "SELECT DISTINCT ?x WHERE { ?y wdt:instance_of/wdt:subclass_of* wd:super_bowl; wdt:participating_team wd:Q224164; wdt:point_in_time ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3103",
        "sparql": "SELECT DISTINCT ?x WHERE { ?y wdt:P31/wdt:P279* wd:Q32096; wdt:P1923 wd:Q224164; wdt:P585 ?x. }"
    },
    {
        "input": "Query: where does spencer pratt go to school?\nEntities:Spencer Pratt with QID Q2279463;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q2279463 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3104",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q2279463 wdt:P69 ?x. }"
    },
    {
        "input": "Query: what did charles babbage make?\nEntities:Charles Babbage with QID Q46633;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:discoverer_or_inventor wd:Q46633. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3105",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P61 wd:Q46633. }"
    },
    {
        "input": "Query: who played lt uhura?\nEntities:L with QID Q52863; Nyota Uhura with QID Q616755;",
        "output": "SELECT DISTINCT ?x WHERE { ?p p:cast_member ?y. ?y ps:cast_member ?x; pq:character_role wd:Q616755. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3106",
        "sparql": "SELECT DISTINCT ?x WHERE { ?p p:P161 ?y. ?y ps:P161 ?x; pq:P453 wd:Q616755. }"
    },
    {
        "input": "Query: what colleges did alice walker attend?\nEntities:Alice Walker with QID Q215868;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q215868 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3109",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q215868 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what schools did barack obama attend?\nEntities:Barack Obama with QID Q76;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:educated_at ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3110",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q76 wdt:P69 ?x. }"
    },
    {
        "input": "Query: where is the french alps located?\nEntities:French Alps with QID Q1630884;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1630884 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3111",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1630884 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what year was peyton manning's rookie year?\nEntities:Peyton Manning with QID Q7539; National Football League with QID Q1215884;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q7539 p:member_of_sports_team ?p. ?p ps:member_of_sports_team ?y. ?y wdt:league wd:Q1215884. ?p pq:start_time ?x. } ORDER BY ?x LIMIT 1",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3112",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q7539 p:P54 ?p. ?p ps:P54 ?y. ?y wdt:P118 wd:Q1215884. ?p pq:P580 ?x. } ORDER BY ?x LIMIT 1"
    },
    {
        "input": "Query: who was peter frampton married to?\nEntities:Peter Frampton with QID Q337089;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q337089 wdt:spouse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3113",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q337089 wdt:P26 ?x. }"
    },
    {
        "input": "Query: what is the hawaii time zone?\nEntities:Hawaii with QID Q782;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q782 wdt:located_in_time_zone ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3114",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q782 wdt:P421 ?x. }"
    },
    {
        "input": "Query: who has coached the baltimore ravens?\nEntities:Baltimore Ravens with QID Q276539;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q276539 wdt:head_coach ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3115",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q276539 wdt:P286 ?x. }"
    },
    {
        "input": "Query: what teams did manny ramirez play for?\nEntities:Manny Ramirez with QID Q375648;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q375648 wdt:member_of_sports_team ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3116",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q375648 wdt:P54 ?x. }"
    },
    {
        "input": "Query: what other jobs did benjamin franklin have?\nEntities:Benjamin Franklin with QID Q34969;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q34969 wdt:occupation ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3118",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q34969 wdt:P106 ?x. }"
    },
    {
        "input": "Query: what year was the first miss america pageant?\nEntities:Miss America with QID Q859497;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q859497 wdt:inception ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3121",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q859497 wdt:P571 ?x. }"
    },
    {
        "input": "Query: what kind of guitar does lindsey buckingham play?\nEntities:guitar with QID Q6607; Lindsey Buckingham with QID Q435306;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:subclass_of* wd:Q6607; wdt:used_by wd:Q435306. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3122",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P279* wd:Q6607; wdt:P1535 wd:Q435306. }"
    },
    {
        "input": "Query: what college did joe namath attend?\nEntities:Joe Namath with QID Q720558;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q720558 wdt:educated_at ?x. ?x wdt:instance_of/wdt:subclass_of* wd:higher_education_institution. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3123",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q720558 wdt:P69 ?x. ?x wdt:P31/wdt:P279* wd:Q38723. }"
    },
    {
        "input": "Query: what city uses gmt?\nEntities:Greenwich with QID Q30192;",
        "output": "SELECT DISTINCT ?x WHERE { ?x wdt:located_in_time_zone wd:Q30192; wdt:instance_of/wdt:subclass_of* wd:city. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3125",
        "sparql": "SELECT DISTINCT ?x WHERE { ?x wdt:P421 wd:Q30192; wdt:P31 wd:Q515. }"
    },
    {
        "input": "Query: where does the zambezi river begin?\nEntities:Zambezi River with QID Q43106;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q43106 wdt:origin_of_the_watercourse ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3126",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q43106 wdt:P885 ?x. }"
    },
    {
        "input": "Query: what county is duluth minnesota in?\nEntities:Duluth with QID Q485708;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q485708 wdt:located_in_the_administrative_territorial_entity ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3127",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q485708 wdt:P131 ?x. }"
    },
    {
        "input": "Query: what zip code is chicago il?\nEntities:Chicago with QID Q1297;",
        "output": "SELECT DISTINCT ?x WHERE { wd:Q1297 wdt:postal_code ?x. }",
        "instruction": "Given a Wikidata query with resolved entities, generate the corresponding SPARQL. Use property names instead of PIDs.",
        "id": "WebQTrn-3128",
        "sparql": "SELECT DISTINCT ?x WHERE { wd:Q1297 wdt:P281 ?x. }"
    }
]